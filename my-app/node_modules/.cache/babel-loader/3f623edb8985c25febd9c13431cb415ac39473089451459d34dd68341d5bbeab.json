{"ast":null,"code":"var _jsxFileName = \"D:\\\\dadas\\\\he true randomizer\\\\theta\\\\my-app\\\\src\\\\components\\\\StudentDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BackButton from './BackButton';\nimport infuraStorage from '../services/MetaMaskStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StudentDashboard() {\n  _s();\n  const [classes, setClasses] = useState([]);\n  const [showJoinClass, setShowJoinClass] = useState(false);\n  const [classCode, setClassCode] = useState('');\n  const [selectedClass, setSelectedClass] = useState(null);\n  const [activeTab, setActiveTab] = useState('recordings');\n  const [error, setError] = useState('');\n  const [isConnecting, setIsConnecting] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    document.body.classList.add('dashboard-page');\n    const studentEmail = sessionStorage.getItem('userEmail');\n    loadStudentData(studentEmail);\n    return () => {\n      document.body.classList.remove('dashboard-page');\n    };\n  }, []);\n  const loadStudentData = async email => {\n    try {\n      setIsConnecting(true);\n      const connectResult = await infuraStorage.connect();\n      if (!connectResult.success) {\n        setError('Failed to connect to storage');\n        return;\n      }\n\n      // Load student's approved classes\n      const allTeachers = (await infuraStorage.getData('teachers')) || [];\n      let approvedClasses = [];\n      for (const teacher of allTeachers) {\n        const teacherClasses = (await infuraStorage.getData(`classes_${teacher.email}`)) || [];\n        const studentClasses = teacherClasses.filter(cls => cls.students.some(student => student.email === email));\n        approvedClasses = [...approvedClasses, ...studentClasses];\n      }\n      setClasses(approvedClasses);\n    } catch (error) {\n      console.error('Error loading student data:', error);\n      setError('Failed to load student data');\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n  const joinClass = async () => {\n    if (!classCode.trim()) {\n      setError('Please enter a class code');\n      return;\n    }\n    try {\n      setError(''); // Clear any previous errors\n      setIsConnecting(true);\n      const studentEmail = sessionStorage.getItem('userEmail');\n      const studentName = sessionStorage.getItem('userName');\n\n      // Connect to storage\n      const connectResult = await infuraStorage.connect();\n      if (!connectResult.success) {\n        setError('Failed to connect to storage');\n        return;\n      }\n\n      // Find the class with matching code\n      const teachers = (await infuraStorage.getData('teachers')) || [];\n      let foundClass = null;\n      let teacherEmail = null;\n      const normalizedInputCode = classCode.trim().toUpperCase();\n      console.log('Looking for class with code:', normalizedInputCode);\n      for (const teacher of teachers) {\n        console.log('Checking teacher:', teacher.email);\n        const teacherClasses = (await infuraStorage.getData(`classes_${teacher.email}`)) || [];\n        console.log('Teacher classes:', teacherClasses);\n        const matchingClass = teacherClasses.find(cls => {\n          console.log('Comparing:', cls.code, 'with:', normalizedInputCode);\n          return cls.code && cls.code.trim().toUpperCase() === normalizedInputCode;\n        });\n        if (matchingClass) {\n          foundClass = matchingClass;\n          teacherEmail = teacher.email;\n          break;\n        }\n      }\n      if (!foundClass) {\n        setError('Invalid class code. Please check the code and try again.');\n        return;\n      }\n\n      // Check if already pending or approved\n      const pendingStudents = (await infuraStorage.getData('pending_students')) || [];\n      const isPending = pendingStudents.some(s => s.email === studentEmail && s.classId === foundClass.id);\n      const isApproved = foundClass.students && foundClass.students.some(s => s.email === studentEmail);\n      if (isPending) {\n        setError('You have already requested to join this class');\n        return;\n      }\n      if (isApproved) {\n        setError('You are already enrolled in this class');\n        return;\n      }\n\n      // Add to pending students\n      const newPendingStudent = {\n        id: Date.now(),\n        name: studentName,\n        email: studentEmail,\n        classId: foundClass.id,\n        teacherEmail,\n        className: foundClass.name,\n        requestedAt: new Date().toISOString()\n      };\n      await infuraStorage.saveData('pending_students', [...pendingStudents, newPendingStudent]);\n      setClassCode('');\n      setShowJoinClass(false);\n      alert(`Request sent to join ${foundClass.name}! Please wait for teacher approval.`);\n    } catch (error) {\n      console.error('Error joining class:', error);\n      setError('Failed to join class. Please try again.');\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n  const renderContent = () => {\n    if (!selectedClass) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"classes-list\",\n        children: [classes.map(cls => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"class-item\",\n          onClick: () => setSelectedClass(cls),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: cls.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"class-info\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Teacher: \", cls.teacherEmail]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)]\n        }, cls.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)), showJoinClass ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"join-class-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: classCode,\n            onChange: e => setClassCode(e.target.value),\n            placeholder: \"Enter class code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: joinClass,\n              children: \"Join Class\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowJoinClass(false),\n              className: \"secondary-button\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowJoinClass(true),\n          className: \"join-class-button\",\n          children: \"Join New Class\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"class-dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"class-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedClass(null),\n          className: \"back-to-classes\",\n          children: \"\\u2190 Back to Classes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedClass.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'recordings' ? 'active' : ''}`,\n          onClick: () => setActiveTab('recordings'),\n          children: \"Recordings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'summaries' ? 'active' : ''}`,\n          onClick: () => setActiveTab('summaries'),\n          children: \"Summaries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), activeTab === 'recordings' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recordings-list\",\n        children: selectedClass.recordings.map(recording => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recording-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recording-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"recording-date\",\n              children: new Date(recording.timestamp).toLocaleString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"recording-duration\",\n              children: [\"Duration: \", recording.duration]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recording-path\",\n            children: [\"File: \", recording.localPath]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 17\n          }, this)]\n        }, recording.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this), activeTab === 'summaries' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summaries-list\",\n        children: selectedClass.summaries.map(summary => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-date\",\n            children: new Date(summary.timestamp).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-content\",\n            children: summary.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 17\n          }, this)]\n        }, summary.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(BackButton, {\n        destination: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Student Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-button\",\n        onClick: () => {\n          sessionStorage.removeItem('userEmail');\n          sessionStorage.removeItem('userRole');\n          sessionStorage.removeItem('userName');\n          navigate('/');\n        },\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"storage-indicator\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"storage-dot infura-active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Using Infura Blockchain Storage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), isConnecting && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connecting-message\",\n      children: \"Connecting to Infura...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 24\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: renderContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n}\n_s(StudentDashboard, \"vv7BeDwDiyOMGvhH1aNOKuNY/A0=\", false, function () {\n  return [useNavigate];\n});\n_c = StudentDashboard;\nexport default StudentDashboard;\nvar _c;\n$RefreshReg$(_c, \"StudentDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","BackButton","infuraStorage","jsxDEV","_jsxDEV","StudentDashboard","_s","classes","setClasses","showJoinClass","setShowJoinClass","classCode","setClassCode","selectedClass","setSelectedClass","activeTab","setActiveTab","error","setError","isConnecting","setIsConnecting","navigate","document","body","classList","add","studentEmail","sessionStorage","getItem","loadStudentData","remove","email","connectResult","connect","success","allTeachers","getData","approvedClasses","teacher","teacherClasses","studentClasses","filter","cls","students","some","student","console","joinClass","trim","studentName","teachers","foundClass","teacherEmail","normalizedInputCode","toUpperCase","log","matchingClass","find","code","pendingStudents","isPending","s","classId","id","isApproved","newPendingStudent","Date","now","name","className","requestedAt","toISOString","saveData","alert","renderContent","children","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","recordings","recording","timestamp","toLocaleString","duration","localPath","summaries","summary","content","destination","removeItem","_c","$RefreshReg$"],"sources":["D:/dadas/he true randomizer/theta/my-app/src/components/StudentDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BackButton from './BackButton';\nimport infuraStorage from '../services/MetaMaskStorage';\n\nfunction StudentDashboard() {\n  const [classes, setClasses] = useState([]);\n  const [showJoinClass, setShowJoinClass] = useState(false);\n  const [classCode, setClassCode] = useState('');\n  const [selectedClass, setSelectedClass] = useState(null);\n  const [activeTab, setActiveTab] = useState('recordings');\n  const [error, setError] = useState('');\n  const [isConnecting, setIsConnecting] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    document.body.classList.add('dashboard-page');\n    const studentEmail = sessionStorage.getItem('userEmail');\n    loadStudentData(studentEmail);\n    \n    return () => {\n      document.body.classList.remove('dashboard-page');\n    };\n  }, []);\n\n  const loadStudentData = async (email) => {\n    try {\n      setIsConnecting(true);\n      const connectResult = await infuraStorage.connect();\n      if (!connectResult.success) {\n        setError('Failed to connect to storage');\n        return;\n      }\n\n      // Load student's approved classes\n      const allTeachers = await infuraStorage.getData('teachers') || [];\n      let approvedClasses = [];\n\n      for (const teacher of allTeachers) {\n        const teacherClasses = await infuraStorage.getData(`classes_${teacher.email}`) || [];\n        const studentClasses = teacherClasses.filter(cls => \n          cls.students.some(student => student.email === email)\n        );\n        approvedClasses = [...approvedClasses, ...studentClasses];\n      }\n\n      setClasses(approvedClasses);\n    } catch (error) {\n      console.error('Error loading student data:', error);\n      setError('Failed to load student data');\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n\n  const joinClass = async () => {\n    if (!classCode.trim()) {\n      setError('Please enter a class code');\n      return;\n    }\n\n    try {\n      setError(''); // Clear any previous errors\n      setIsConnecting(true);\n      const studentEmail = sessionStorage.getItem('userEmail');\n      const studentName = sessionStorage.getItem('userName');\n      \n      // Connect to storage\n      const connectResult = await infuraStorage.connect();\n      if (!connectResult.success) {\n        setError('Failed to connect to storage');\n        return;\n      }\n\n      // Find the class with matching code\n      const teachers = await infuraStorage.getData('teachers') || [];\n      let foundClass = null;\n      let teacherEmail = null;\n\n      const normalizedInputCode = classCode.trim().toUpperCase();\n      console.log('Looking for class with code:', normalizedInputCode);\n\n      for (const teacher of teachers) {\n        console.log('Checking teacher:', teacher.email);\n        const teacherClasses = await infuraStorage.getData(`classes_${teacher.email}`) || [];\n        console.log('Teacher classes:', teacherClasses);\n        \n        const matchingClass = teacherClasses.find(cls => {\n          console.log('Comparing:', cls.code, 'with:', normalizedInputCode);\n          return cls.code && cls.code.trim().toUpperCase() === normalizedInputCode;\n        });\n\n        if (matchingClass) {\n          foundClass = matchingClass;\n          teacherEmail = teacher.email;\n          break;\n        }\n      }\n\n      if (!foundClass) {\n        setError('Invalid class code. Please check the code and try again.');\n        return;\n      }\n\n      // Check if already pending or approved\n      const pendingStudents = await infuraStorage.getData('pending_students') || [];\n      const isPending = pendingStudents.some(s => \n        s.email === studentEmail && s.classId === foundClass.id\n      );\n\n      const isApproved = foundClass.students && foundClass.students.some(s => s.email === studentEmail);\n\n      if (isPending) {\n        setError('You have already requested to join this class');\n        return;\n      }\n\n      if (isApproved) {\n        setError('You are already enrolled in this class');\n        return;\n      }\n\n      // Add to pending students\n      const newPendingStudent = {\n        id: Date.now(),\n        name: studentName,\n        email: studentEmail,\n        classId: foundClass.id,\n        teacherEmail,\n        className: foundClass.name,\n        requestedAt: new Date().toISOString()\n      };\n\n      await infuraStorage.saveData('pending_students', [...pendingStudents, newPendingStudent]);\n      setClassCode('');\n      setShowJoinClass(false);\n      alert(`Request sent to join ${foundClass.name}! Please wait for teacher approval.`);\n    } catch (error) {\n      console.error('Error joining class:', error);\n      setError('Failed to join class. Please try again.');\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n\n  const renderContent = () => {\n    if (!selectedClass) {\n      return (\n        <div className=\"classes-list\">\n          {classes.map(cls => (\n            <div key={cls.id} className=\"class-item\" onClick={() => setSelectedClass(cls)}>\n              <h3>{cls.name}</h3>\n              <div className=\"class-info\">\n                <span>Teacher: {cls.teacherEmail}</span>\n              </div>\n            </div>\n          ))}\n          \n          {showJoinClass ? (\n            <div className=\"join-class-form\">\n              <input\n                type=\"text\"\n                value={classCode}\n                onChange={(e) => setClassCode(e.target.value)}\n                placeholder=\"Enter class code\"\n              />\n              <div className=\"form-actions\">\n                <button onClick={joinClass}>Join Class</button>\n                <button onClick={() => setShowJoinClass(false)} className=\"secondary-button\">\n                  Cancel\n                </button>\n              </div>\n            </div>\n          ) : (\n            <button onClick={() => setShowJoinClass(true)} className=\"join-class-button\">\n              Join New Class\n            </button>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"class-dashboard\">\n        <div className=\"class-header\">\n          <button onClick={() => setSelectedClass(null)} className=\"back-to-classes\">\n            ← Back to Classes\n          </button>\n          <h2>{selectedClass.name}</h2>\n        </div>\n\n        <div className=\"tab-navigation\">\n          <button \n            className={`tab-button ${activeTab === 'recordings' ? 'active' : ''}`}\n            onClick={() => setActiveTab('recordings')}\n          >\n            Recordings\n          </button>\n          <button \n            className={`tab-button ${activeTab === 'summaries' ? 'active' : ''}`}\n            onClick={() => setActiveTab('summaries')}\n          >\n            Summaries\n          </button>\n        </div>\n\n        {activeTab === 'recordings' && (\n          <div className=\"recordings-list\">\n            {selectedClass.recordings.map(recording => (\n              <div key={recording.id} className=\"recording-item\">\n                <div className=\"recording-info\">\n                  <span className=\"recording-date\">\n                    {new Date(recording.timestamp).toLocaleString()}\n                  </span>\n                  <span className=\"recording-duration\">\n                    Duration: {recording.duration}\n                  </span>\n                </div>\n                <div className=\"recording-path\">\n                  File: {recording.localPath}\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {activeTab === 'summaries' && (\n          <div className=\"summaries-list\">\n            {selectedClass.summaries.map(summary => (\n              <div key={summary.id} className=\"summary-item\">\n                <div className=\"summary-date\">{new Date(summary.timestamp).toLocaleString()}</div>\n                <div className=\"summary-content\">{summary.content}</div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"dashboard-container\">\n      <div className=\"dashboard-header\">\n        <BackButton destination=\"/\" />\n        <h2>Student Dashboard</h2>\n        <button \n          className=\"logout-button\" \n          onClick={() => {\n            sessionStorage.removeItem('userEmail');\n            sessionStorage.removeItem('userRole');\n            sessionStorage.removeItem('userName');\n            navigate('/');\n          }}\n        >\n          Logout\n        </button>\n      </div>\n      \n      <div className=\"storage-indicator\">\n        <div className=\"storage-dot infura-active\"></div>\n        <span>Using Infura Blockchain Storage</span>\n      </div>\n      \n      {isConnecting && <div className=\"connecting-message\">Connecting to Infura...</div>}\n      {error && <div className=\"error-message\">{error}</div>}\n      \n      <div className=\"dashboard-content\">\n        {renderContent()}\n      </div>\n    </div>\n  );\n}\n\nexport default StudentDashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}