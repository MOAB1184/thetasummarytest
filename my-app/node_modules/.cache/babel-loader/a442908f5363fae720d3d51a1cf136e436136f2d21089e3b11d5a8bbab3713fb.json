{"ast":null,"code":"var _jsxFileName = \"D:\\\\dadas\\\\he true randomizer\\\\theta\\\\my-app\\\\src\\\\components\\\\TeacherDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BackButton from './BackButton';\nimport infuraStorage from '../services/MetaMaskStorage';\nimport wasabiStorage from '../services/WasabiStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TeacherDashboard() {\n  _s();\n  const [classes, setClasses] = useState([]);\n  const [showCreateClass, setShowCreateClass] = useState(false);\n  const [newClassName, setNewClassName] = useState('');\n  const [selectedClass, setSelectedClass] = useState(null);\n  const [pendingStudents, setPendingStudents] = useState([]);\n  const [activeTab, setActiveTab] = useState('classes');\n  const [recordings, setRecordings] = useState([]);\n  const [teacherData, setTeacherData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [error, setError] = useState('');\n  const [isRecording, setIsRecording] = useState(false);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const mediaRecorderRef = useRef(null);\n  const timeIntervalRef = useRef(null);\n  const chunksRef = useRef([]);\n  const navigate = useNavigate();\n\n  // Memoize the connectAndLoadTeacherData function to prevent infinite loop\n  const connectAndLoadTeacherData = React.useCallback(async teacherEmail => {\n    try {\n      setIsConnecting(true);\n      setError('');\n\n      // Connect to Infura\n      const connectResult = await infuraStorage.connect();\n      if (!connectResult.success) {\n        setError(`Infura connection error: ${connectResult.error}`);\n        setLoading(false);\n        return;\n      }\n      await loadTeacherData(teacherEmail);\n      await loadRecordings(teacherEmail);\n      setLoading(false); // Set loading to false after all data is loaded\n    } catch (error) {\n      setError(`Error connecting to Infura: ${error.message}`);\n      console.error('Connection error:', error);\n      setLoading(false);\n    } finally {\n      setIsConnecting(false);\n    }\n  }, []);\n  const loadRecordings = async email => {\n    try {\n      const savedRecordings = (await infuraStorage.getData(`recordings_${email}`)) || [];\n      setRecordings(savedRecordings);\n    } catch (error) {\n      console.error('Error loading recordings:', error);\n    }\n  };\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      chunksRef.current = [];\n      mediaRecorder.ondataavailable = e => {\n        if (e.data.size > 0) {\n          chunksRef.current.push(e.data);\n        }\n      };\n      mediaRecorder.onstop = async () => {\n        const blob = new Blob(chunksRef.current, {\n          type: 'audio/webm'\n        });\n        const url = URL.createObjectURL(blob);\n        const timestamp = new Date().toISOString();\n        const newRecording = {\n          id: Date.now(),\n          url,\n          timestamp,\n          duration: recordingTime,\n          localPath: `recording_${timestamp}.webm`\n        };\n\n        // Update recordings state\n        const updatedRecordings = [...recordings, newRecording];\n        setRecordings(updatedRecordings);\n\n        // Update selected class recordings\n        if (selectedClass) {\n          const updatedClass = {\n            ...selectedClass,\n            recordings: [...selectedClass.recordings, newRecording]\n          };\n          setSelectedClass(updatedClass);\n\n          // Update classes state\n          const updatedClasses = classes.map(c => c.id === selectedClass.id ? updatedClass : c);\n          setClasses(updatedClasses);\n\n          // Save to Infura\n          const teacherEmail = sessionStorage.getItem('userEmail');\n          await infuraStorage.saveData(`classes_${teacherEmail}`, updatedClasses);\n        }\n\n        // Save recording data\n        await infuraStorage.saveData(`recordings_${sessionStorage.getItem('userEmail')}`, updatedRecordings);\n\n        // Save to local storage\n        const reader = new FileReader();\n        reader.readAsDataURL(blob);\n        reader.onloadend = () => {\n          localStorage.setItem(`recording_${timestamp}`, reader.result);\n        };\n        stream.getTracks().forEach(track => track.stop());\n      };\n      mediaRecorder.start();\n      setIsRecording(true);\n      setRecordingTime(0);\n      timeIntervalRef.current = setInterval(() => {\n        setRecordingTime(prev => prev + 1);\n      }, 1000);\n    } catch (error) {\n      console.error('Error starting recording:', error);\n      setError('Failed to start recording. Please check your microphone permissions.');\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      clearInterval(timeIntervalRef.current);\n      setIsRecording(false);\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  useEffect(() => {\n    document.body.classList.add('dashboard-page');\n    const teacherEmail = sessionStorage.getItem('userEmail');\n    connectAndLoadTeacherData(teacherEmail);\n    return () => {\n      document.body.classList.remove('dashboard-page');\n      if (timeIntervalRef.current) {\n        clearInterval(timeIntervalRef.current);\n      }\n      if (mediaRecorderRef.current && isRecording) {\n        mediaRecorderRef.current.stop();\n      }\n    };\n  }, [connectAndLoadTeacherData, isRecording]);\n  const loadTeacherData = async teacherEmail => {\n    try {\n      setIsConnecting(true);\n      const connectResult = await infuraStorage.connect();\n      if (!connectResult.success) {\n        setError('Failed to connect to storage');\n        setLoading(false);\n        return;\n      }\n\n      // Load or initialize teacher data\n      const teachers = (await infuraStorage.getData('teachers')) || [];\n      const existingTeacher = teachers.find(t => t.email === teacherEmail);\n      if (!existingTeacher) {\n        // Add teacher to teachers list if not exists\n        await infuraStorage.saveData('teachers', [...teachers, {\n          email: teacherEmail\n        }]);\n      }\n\n      // Load teacher's classes\n      const teacherClasses = (await infuraStorage.getData(`classes_${teacherEmail}`)) || [];\n      setClasses(teacherClasses);\n\n      // Load pending students for all classes\n      const allPendingStudents = (await infuraStorage.getData('pending_students')) || [];\n      const teacherPendingStudents = allPendingStudents.filter(s => s.teacherEmail === teacherEmail);\n      setPendingStudents(teacherPendingStudents);\n    } catch (error) {\n      console.error('Error loading teacher data:', error);\n      setError('Failed to load teacher data');\n      setLoading(false);\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n  const generateClassCode = () => {\n    // Generate a 6-character code with only uppercase letters and numbers\n    const chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    let code = '';\n    for (let i = 0; i < 6; i++) {\n      code += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n    return code;\n  };\n  const createClass = async () => {\n    if (!newClassName.trim()) {\n      setError('Please enter a class name');\n      return;\n    }\n    try {\n      const teacherEmail = sessionStorage.getItem('userEmail');\n      const classCode = generateClassCode();\n      const newClass = {\n        id: Date.now(),\n        name: newClassName.trim(),\n        code: classCode,\n        teacherEmail,\n        students: [],\n        recordings: [],\n        summaries: [],\n        createdAt: new Date().toISOString()\n      };\n\n      // Ensure teacher exists in teachers list\n      const teachers = (await infuraStorage.getData('teachers')) || [];\n      if (!teachers.some(t => t.email === teacherEmail)) {\n        await infuraStorage.saveData('teachers', [...teachers, {\n          email: teacherEmail\n        }]);\n      }\n\n      // Save the new class\n      const updatedClasses = [...classes, newClass];\n      await infuraStorage.saveData(`classes_${teacherEmail}`, updatedClasses);\n      setClasses(updatedClasses);\n      setNewClassName('');\n      setShowCreateClass(false);\n\n      // Show success message with class code\n      alert(`Class created successfully! Class code: ${classCode}`);\n    } catch (error) {\n      console.error('Error creating class:', error);\n      setError('Failed to create class');\n    }\n  };\n  const approveStudent = async studentId => {\n    try {\n      const updatedPendingStudents = pendingStudents.filter(s => s.id !== studentId);\n      const student = pendingStudents.find(s => s.id === studentId);\n      if (student && selectedClass) {\n        // Add student to class\n        const updatedClasses = classes.map(c => {\n          if (c.id === selectedClass.id) {\n            return {\n              ...c,\n              students: [...c.students, student]\n            };\n          }\n          return c;\n        });\n        await infuraStorage.saveData(`classes_${sessionStorage.getItem('userEmail')}`, updatedClasses);\n        await infuraStorage.saveData('pending_students', updatedPendingStudents);\n        setClasses(updatedClasses);\n        setPendingStudents(updatedPendingStudents);\n      }\n    } catch (error) {\n      console.error('Error approving student:', error);\n      setError('Failed to approve student');\n    }\n  };\n  const denyStudent = async studentId => {\n    try {\n      const updatedPendingStudents = pendingStudents.filter(s => s.id !== studentId);\n      await infuraStorage.saveData('pending_students', updatedPendingStudents);\n      setPendingStudents(updatedPendingStudents);\n    } catch (error) {\n      console.error('Error denying student:', error);\n      setError('Failed to deny student');\n    }\n  };\n  const removeStudent = async studentId => {\n    try {\n      if (selectedClass) {\n        const updatedClasses = classes.map(c => {\n          if (c.id === selectedClass.id) {\n            return {\n              ...c,\n              students: c.students.filter(s => s.id !== studentId)\n            };\n          }\n          return c;\n        });\n        await infuraStorage.saveData(`classes_${sessionStorage.getItem('userEmail')}`, updatedClasses);\n        setClasses(updatedClasses);\n      }\n    } catch (error) {\n      console.error('Error removing student:', error);\n      setError('Failed to remove student');\n    }\n  };\n  const handleDownload = async () => {\n    try {\n      // Get the teacher app executable as binary data\n      const data = await wasabiStorage.getBinaryData('Teacher App.exe');\n      if (!data) {\n        throw new Error('Failed to download teacher app');\n      }\n\n      // Create a blob from the binary data\n      const blob = new Blob([data], {\n        type: 'application/x-msdownload'\n      });\n      const url = window.URL.createObjectURL(blob);\n\n      // Create a temporary link and click it to start the download\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = 'Teacher App.exe';\n      document.body.appendChild(link);\n      link.click();\n\n      // Clean up\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('Error downloading teacher app:', error);\n      alert('Failed to download teacher app. Please try again later.');\n    }\n  };\n  const renderContent = () => {\n    if (!selectedClass) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"classes-list\",\n        children: [classes.map(cls => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"class-item\",\n          onClick: () => setSelectedClass(cls),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: cls.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"class-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Class Code: \", cls.code]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [cls.students.length, \" Students\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 15\n          }, this)]\n        }, cls.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this)), showCreateClass ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-class-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newClassName,\n            onChange: e => setNewClassName(e.target.value),\n            placeholder: \"Enter class name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: createClass,\n              children: \"Create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowCreateClass(false),\n              className: \"secondary-button\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowCreateClass(true),\n          className: \"create-class-button\",\n          children: \"Create New Class\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"class-dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"class-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedClass(null),\n          className: \"back-to-classes\",\n          children: \"\\u2190 Back to Classes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedClass.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"class-code\",\n          children: [\"Class Code: \", selectedClass.code]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-navigation\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'recordings' ? 'active' : ''}`,\n          onClick: () => setActiveTab('recordings'),\n          children: \"Recordings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'summaries' ? 'active' : ''}`,\n          onClick: () => setActiveTab('summaries'),\n          children: \"Summaries\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'students' ? 'active' : ''}`,\n          onClick: () => setActiveTab('students'),\n          children: \"Manage Students\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), activeTab === 'recordings' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recordings-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recording-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `record-button ${isRecording ? 'recording' : ''}`,\n            onClick: isRecording ? stopRecording : startRecording,\n            children: isRecording ? 'Stop Recording' : 'Record Lecture'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 15\n          }, this), isRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recording-timer\",\n            children: [\"Recording: \", formatTime(recordingTime)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recordings-list\",\n          children: selectedClass.recordings.map(recording => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recording-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recording-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"recording-date\",\n                children: new Date(recording.timestamp).toLocaleString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"recording-duration\",\n                children: [\"Duration: \", formatTime(recording.duration)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recording-path\",\n              children: [\"File: \", recording.localPath]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 19\n            }, this)]\n          }, recording.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 11\n      }, this), activeTab === 'summaries' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summaries-list\",\n        children: selectedClass.summaries.map(summary => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-date\",\n            children: new Date(summary.timestamp).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"summary-content\",\n            children: summary.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 17\n          }, this)]\n        }, summary.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 450,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 11\n      }, this), activeTab === 'students' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"students-management\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pending-students\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Pending Approvals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 15\n          }, this), pendingStudents.filter(s => s.classId === selectedClass.id).map(student => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pending-student-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"student-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"student-name\",\n                children: student.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"student-email\",\n                children: student.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"approval-buttons\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => approveStudent(student.id),\n                className: \"approve-button\",\n                children: \"Approve\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => denyStudent(student.id),\n                className: \"decline-button\",\n                children: \"Deny\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 472,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 19\n            }, this)]\n          }, student.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"enrolled-students\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Enrolled Students\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 15\n          }, this), selectedClass.students.map(student => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"enrolled-student-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"student-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"student-name\",\n                children: student.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"student-email\",\n                children: student.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeStudent(student.id),\n              className: \"remove-button\",\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 488,\n              columnNumber: 19\n            }, this)]\n          }, student.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading teacher dashboard...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If the teacher account is pending approval\n  if (teacherData && teacherData.pending) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pending-approval\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Account Pending Approval\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your teacher account is pending administrator approval.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please check back later or contact the administrator for more information.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/'),\n          className: \"logout-button\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"storage-indicator\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"storage-dot infura-active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Using Infura Blockchain Storage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 11\n        }, this), isConnecting && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connecting-message\",\n          children: \"Connecting to Infura...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 28\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(BackButton, {\n        destination: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Teacher Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-button\",\n        onClick: () => {\n          sessionStorage.removeItem('userEmail');\n          sessionStorage.removeItem('userRole');\n          navigate('/');\n        },\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"storage-indicator\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"storage-dot infura-active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Using Infura Blockchain Storage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 7\n    }, this), isConnecting && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connecting-message\",\n      children: \"Connecting to Infura...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 24\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"download-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Download Teacher App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Click the button below to download the Teacher App for your desktop.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"download-button\",\n          onClick: handleDownload,\n          children: \"Download Teacher App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 9\n      }, this), renderContent()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 527,\n    columnNumber: 5\n  }, this);\n}\n_s(TeacherDashboard, \"JFumLPIpCl/kU2V7alsLH3s4Eiw=\", false, function () {\n  return [useNavigate];\n});\n_c = TeacherDashboard;\nexport default TeacherDashboard;\nvar _c;\n$RefreshReg$(_c, \"TeacherDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","BackButton","infuraStorage","wasabiStorage","jsxDEV","_jsxDEV","TeacherDashboard","_s","classes","setClasses","showCreateClass","setShowCreateClass","newClassName","setNewClassName","selectedClass","setSelectedClass","pendingStudents","setPendingStudents","activeTab","setActiveTab","recordings","setRecordings","teacherData","setTeacherData","loading","setLoading","isConnecting","setIsConnecting","error","setError","isRecording","setIsRecording","recordingTime","setRecordingTime","mediaRecorderRef","timeIntervalRef","chunksRef","navigate","connectAndLoadTeacherData","useCallback","teacherEmail","connectResult","connect","success","loadTeacherData","loadRecordings","message","console","email","savedRecordings","getData","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","mediaRecorder","MediaRecorder","current","ondataavailable","e","data","size","push","onstop","blob","Blob","type","url","URL","createObjectURL","timestamp","Date","toISOString","newRecording","id","now","duration","localPath","updatedRecordings","updatedClass","updatedClasses","map","c","sessionStorage","getItem","saveData","reader","FileReader","readAsDataURL","onloadend","localStorage","setItem","result","getTracks","forEach","track","stop","start","setInterval","prev","stopRecording","clearInterval","formatTime","seconds","mins","Math","floor","secs","toString","padStart","document","body","classList","add","remove","teachers","existingTeacher","find","t","teacherClasses","allPendingStudents","teacherPendingStudents","filter","s","generateClassCode","chars","code","i","charAt","random","length","createClass","trim","classCode","newClass","name","students","summaries","createdAt","some","alert","approveStudent","studentId","updatedPendingStudents","student","denyStudent","removeStudent","handleDownload","getBinaryData","Error","window","link","createElement","href","download","appendChild","click","removeChild","revokeObjectURL","renderContent","className","children","cls","onClick","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","placeholder","recording","toLocaleString","summary","content","classId","pending","destination","removeItem","_c","$RefreshReg$"],"sources":["D:/dadas/he true randomizer/theta/my-app/src/components/TeacherDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BackButton from './BackButton';\nimport infuraStorage from '../services/MetaMaskStorage';\nimport wasabiStorage from '../services/WasabiStorage';\n\nfunction TeacherDashboard() {\n  const [classes, setClasses] = useState([]);\n  const [showCreateClass, setShowCreateClass] = useState(false);\n  const [newClassName, setNewClassName] = useState('');\n  const [selectedClass, setSelectedClass] = useState(null);\n  const [pendingStudents, setPendingStudents] = useState([]);\n  const [activeTab, setActiveTab] = useState('classes');\n  const [recordings, setRecordings] = useState([]);\n  const [teacherData, setTeacherData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [error, setError] = useState('');\n  const [isRecording, setIsRecording] = useState(false);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const mediaRecorderRef = useRef(null);\n  const timeIntervalRef = useRef(null);\n  const chunksRef = useRef([]);\n  const navigate = useNavigate();\n\n  // Memoize the connectAndLoadTeacherData function to prevent infinite loop\n  const connectAndLoadTeacherData = React.useCallback(async (teacherEmail) => {\n    try {\n      setIsConnecting(true);\n      setError('');\n      \n      // Connect to Infura\n      const connectResult = await infuraStorage.connect();\n      if (!connectResult.success) {\n        setError(`Infura connection error: ${connectResult.error}`);\n        setLoading(false);\n        return;\n      }\n      \n      await loadTeacherData(teacherEmail);\n      await loadRecordings(teacherEmail);\n      setLoading(false); // Set loading to false after all data is loaded\n    } catch (error) {\n      setError(`Error connecting to Infura: ${error.message}`);\n      console.error('Connection error:', error);\n      setLoading(false);\n    } finally {\n      setIsConnecting(false);\n    }\n  }, []);\n\n  const loadRecordings = async (email) => {\n    try {\n      const savedRecordings = await infuraStorage.getData(`recordings_${email}`) || [];\n      setRecordings(savedRecordings);\n    } catch (error) {\n      console.error('Error loading recordings:', error);\n    }\n  };\n\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      chunksRef.current = [];\n\n      mediaRecorder.ondataavailable = (e) => {\n        if (e.data.size > 0) {\n          chunksRef.current.push(e.data);\n        }\n      };\n\n      mediaRecorder.onstop = async () => {\n        const blob = new Blob(chunksRef.current, { type: 'audio/webm' });\n        const url = URL.createObjectURL(blob);\n        const timestamp = new Date().toISOString();\n        const newRecording = {\n          id: Date.now(),\n          url,\n          timestamp,\n          duration: recordingTime,\n          localPath: `recording_${timestamp}.webm`\n        };\n\n        // Update recordings state\n        const updatedRecordings = [...recordings, newRecording];\n        setRecordings(updatedRecordings);\n        \n        // Update selected class recordings\n        if (selectedClass) {\n          const updatedClass = {\n            ...selectedClass,\n            recordings: [...selectedClass.recordings, newRecording]\n          };\n          setSelectedClass(updatedClass);\n\n          // Update classes state\n          const updatedClasses = classes.map(c => \n            c.id === selectedClass.id ? updatedClass : c\n          );\n          setClasses(updatedClasses);\n\n          // Save to Infura\n          const teacherEmail = sessionStorage.getItem('userEmail');\n          await infuraStorage.saveData(`classes_${teacherEmail}`, updatedClasses);\n        }\n        \n        // Save recording data\n        await infuraStorage.saveData(`recordings_${sessionStorage.getItem('userEmail')}`, updatedRecordings);\n\n        // Save to local storage\n        const reader = new FileReader();\n        reader.readAsDataURL(blob);\n        reader.onloadend = () => {\n          localStorage.setItem(`recording_${timestamp}`, reader.result);\n        };\n\n        stream.getTracks().forEach(track => track.stop());\n      };\n\n      mediaRecorder.start();\n      setIsRecording(true);\n      setRecordingTime(0);\n      timeIntervalRef.current = setInterval(() => {\n        setRecordingTime(prev => prev + 1);\n      }, 1000);\n    } catch (error) {\n      console.error('Error starting recording:', error);\n      setError('Failed to start recording. Please check your microphone permissions.');\n    }\n  };\n\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      clearInterval(timeIntervalRef.current);\n      setIsRecording(false);\n    }\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  useEffect(() => {\n    document.body.classList.add('dashboard-page');\n    const teacherEmail = sessionStorage.getItem('userEmail');\n    connectAndLoadTeacherData(teacherEmail);\n    \n    return () => {\n      document.body.classList.remove('dashboard-page');\n      if (timeIntervalRef.current) {\n        clearInterval(timeIntervalRef.current);\n      }\n      if (mediaRecorderRef.current && isRecording) {\n        mediaRecorderRef.current.stop();\n      }\n    };\n  }, [connectAndLoadTeacherData, isRecording]);\n\n  const loadTeacherData = async (teacherEmail) => {\n    try {\n      setIsConnecting(true);\n      const connectResult = await infuraStorage.connect();\n      if (!connectResult.success) {\n        setError('Failed to connect to storage');\n        setLoading(false);\n        return;\n      }\n\n      // Load or initialize teacher data\n      const teachers = await infuraStorage.getData('teachers') || [];\n      const existingTeacher = teachers.find(t => t.email === teacherEmail);\n      \n      if (!existingTeacher) {\n        // Add teacher to teachers list if not exists\n        await infuraStorage.saveData('teachers', [...teachers, { email: teacherEmail }]);\n      }\n\n      // Load teacher's classes\n      const teacherClasses = await infuraStorage.getData(`classes_${teacherEmail}`) || [];\n      setClasses(teacherClasses);\n\n      // Load pending students for all classes\n      const allPendingStudents = await infuraStorage.getData('pending_students') || [];\n      const teacherPendingStudents = allPendingStudents.filter(s => s.teacherEmail === teacherEmail);\n      setPendingStudents(teacherPendingStudents);\n\n    } catch (error) {\n      console.error('Error loading teacher data:', error);\n      setError('Failed to load teacher data');\n      setLoading(false);\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n\n  const generateClassCode = () => {\n    // Generate a 6-character code with only uppercase letters and numbers\n    const chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n    let code = '';\n    for (let i = 0; i < 6; i++) {\n      code += chars.charAt(Math.floor(Math.random() * chars.length));\n    }\n    return code;\n  };\n\n  const createClass = async () => {\n    if (!newClassName.trim()) {\n      setError('Please enter a class name');\n      return;\n    }\n\n    try {\n      const teacherEmail = sessionStorage.getItem('userEmail');\n      const classCode = generateClassCode();\n      \n      const newClass = {\n        id: Date.now(),\n        name: newClassName.trim(),\n        code: classCode,\n        teacherEmail,\n        students: [],\n        recordings: [],\n        summaries: [],\n        createdAt: new Date().toISOString()\n      };\n\n      // Ensure teacher exists in teachers list\n      const teachers = await infuraStorage.getData('teachers') || [];\n      if (!teachers.some(t => t.email === teacherEmail)) {\n        await infuraStorage.saveData('teachers', [...teachers, { email: teacherEmail }]);\n      }\n\n      // Save the new class\n      const updatedClasses = [...classes, newClass];\n      await infuraStorage.saveData(`classes_${teacherEmail}`, updatedClasses);\n      setClasses(updatedClasses);\n      setNewClassName('');\n      setShowCreateClass(false);\n      \n      // Show success message with class code\n      alert(`Class created successfully! Class code: ${classCode}`);\n    } catch (error) {\n      console.error('Error creating class:', error);\n      setError('Failed to create class');\n    }\n  };\n\n  const approveStudent = async (studentId) => {\n    try {\n      const updatedPendingStudents = pendingStudents.filter(s => s.id !== studentId);\n      const student = pendingStudents.find(s => s.id === studentId);\n      \n      if (student && selectedClass) {\n        // Add student to class\n        const updatedClasses = classes.map(c => {\n          if (c.id === selectedClass.id) {\n            return {\n              ...c,\n              students: [...c.students, student]\n            };\n          }\n          return c;\n        });\n\n        await infuraStorage.saveData(`classes_${sessionStorage.getItem('userEmail')}`, updatedClasses);\n        await infuraStorage.saveData('pending_students', updatedPendingStudents);\n        \n        setClasses(updatedClasses);\n        setPendingStudents(updatedPendingStudents);\n      }\n    } catch (error) {\n      console.error('Error approving student:', error);\n      setError('Failed to approve student');\n    }\n  };\n\n  const denyStudent = async (studentId) => {\n    try {\n      const updatedPendingStudents = pendingStudents.filter(s => s.id !== studentId);\n      await infuraStorage.saveData('pending_students', updatedPendingStudents);\n      setPendingStudents(updatedPendingStudents);\n    } catch (error) {\n      console.error('Error denying student:', error);\n      setError('Failed to deny student');\n    }\n  };\n\n  const removeStudent = async (studentId) => {\n    try {\n      if (selectedClass) {\n        const updatedClasses = classes.map(c => {\n          if (c.id === selectedClass.id) {\n            return {\n              ...c,\n              students: c.students.filter(s => s.id !== studentId)\n            };\n          }\n          return c;\n        });\n\n        await infuraStorage.saveData(`classes_${sessionStorage.getItem('userEmail')}`, updatedClasses);\n        setClasses(updatedClasses);\n      }\n    } catch (error) {\n      console.error('Error removing student:', error);\n      setError('Failed to remove student');\n    }\n  };\n\n  const handleDownload = async () => {\n    try {\n      // Get the teacher app executable as binary data\n      const data = await wasabiStorage.getBinaryData('Teacher App.exe');\n      if (!data) {\n        throw new Error('Failed to download teacher app');\n      }\n\n      // Create a blob from the binary data\n      const blob = new Blob([data], { type: 'application/x-msdownload' });\n      const url = window.URL.createObjectURL(blob);\n      \n      // Create a temporary link and click it to start the download\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = 'Teacher App.exe';\n      document.body.appendChild(link);\n      link.click();\n      \n      // Clean up\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('Error downloading teacher app:', error);\n      alert('Failed to download teacher app. Please try again later.');\n    }\n  };\n\n  const renderContent = () => {\n    if (!selectedClass) {\n      return (\n        <div className=\"classes-list\">\n          {classes.map(cls => (\n            <div key={cls.id} className=\"class-item\" onClick={() => setSelectedClass(cls)}>\n              <h3>{cls.name}</h3>\n              <div className=\"class-info\">\n                <span>Class Code: {cls.code}</span>\n                <span>{cls.students.length} Students</span>\n              </div>\n            </div>\n          ))}\n          \n          {showCreateClass ? (\n            <div className=\"create-class-form\">\n              <input\n                type=\"text\"\n                value={newClassName}\n                onChange={(e) => setNewClassName(e.target.value)}\n                placeholder=\"Enter class name\"\n              />\n              <div className=\"form-actions\">\n                <button onClick={createClass}>Create</button>\n                <button onClick={() => setShowCreateClass(false)} className=\"secondary-button\">\n                  Cancel\n                </button>\n              </div>\n            </div>\n          ) : (\n            <button onClick={() => setShowCreateClass(true)} className=\"create-class-button\">\n              Create New Class\n            </button>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"class-dashboard\">\n        <div className=\"class-header\">\n          <button onClick={() => setSelectedClass(null)} className=\"back-to-classes\">\n            ← Back to Classes\n          </button>\n          <h2>{selectedClass.name}</h2>\n          <div className=\"class-code\">Class Code: {selectedClass.code}</div>\n        </div>\n\n        <div className=\"tab-navigation\">\n          <button \n            className={`tab-button ${activeTab === 'recordings' ? 'active' : ''}`}\n            onClick={() => setActiveTab('recordings')}\n          >\n            Recordings\n          </button>\n          <button \n            className={`tab-button ${activeTab === 'summaries' ? 'active' : ''}`}\n            onClick={() => setActiveTab('summaries')}\n          >\n            Summaries\n          </button>\n          <button \n            className={`tab-button ${activeTab === 'students' ? 'active' : ''}`}\n            onClick={() => setActiveTab('students')}\n          >\n            Manage Students\n          </button>\n        </div>\n\n        {activeTab === 'recordings' && (\n          <div className=\"recordings-section\">\n            <div className=\"recording-controls\">\n              <button \n                className={`record-button ${isRecording ? 'recording' : ''}`}\n                onClick={isRecording ? stopRecording : startRecording}\n              >\n                {isRecording ? 'Stop Recording' : 'Record Lecture'}\n              </button>\n              {isRecording && (\n                <div className=\"recording-timer\">\n                  Recording: {formatTime(recordingTime)}\n                </div>\n              )}\n            </div>\n            <div className=\"recordings-list\">\n              {selectedClass.recordings.map(recording => (\n                <div key={recording.id} className=\"recording-item\">\n                  <div className=\"recording-info\">\n                    <span className=\"recording-date\">\n                      {new Date(recording.timestamp).toLocaleString()}\n                    </span>\n                    <span className=\"recording-duration\">\n                      Duration: {formatTime(recording.duration)}\n                    </span>\n                  </div>\n                  <div className=\"recording-path\">\n                    File: {recording.localPath}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'summaries' && (\n          <div className=\"summaries-list\">\n            {selectedClass.summaries.map(summary => (\n              <div key={summary.id} className=\"summary-item\">\n                <div className=\"summary-date\">{new Date(summary.timestamp).toLocaleString()}</div>\n                <div className=\"summary-content\">{summary.content}</div>\n              </div>\n            ))}\n          </div>\n        )}\n\n        {activeTab === 'students' && (\n          <div className=\"students-management\">\n            <div className=\"pending-students\">\n              <h3>Pending Approvals</h3>\n              {pendingStudents.filter(s => s.classId === selectedClass.id).map(student => (\n                <div key={student.id} className=\"pending-student-item\">\n                  <div className=\"student-info\">\n                    <div className=\"student-name\">{student.name}</div>\n                    <div className=\"student-email\">{student.email}</div>\n                  </div>\n                  <div className=\"approval-buttons\">\n                    <button onClick={() => approveStudent(student.id)} className=\"approve-button\">\n                      Approve\n                    </button>\n                    <button onClick={() => denyStudent(student.id)} className=\"decline-button\">\n                      Deny\n                    </button>\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            <div className=\"enrolled-students\">\n              <h3>Enrolled Students</h3>\n              {selectedClass.students.map(student => (\n                <div key={student.id} className=\"enrolled-student-item\">\n                  <div className=\"student-info\">\n                    <div className=\"student-name\">{student.name}</div>\n                    <div className=\"student-email\">{student.email}</div>\n                  </div>\n                  <button onClick={() => removeStudent(student.id)} className=\"remove-button\">\n                    Remove\n                  </button>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading teacher dashboard...</div>;\n  }\n\n  // If the teacher account is pending approval\n  if (teacherData && teacherData.pending) {\n    return (\n      <div className=\"dashboard-container\">\n        <div className=\"pending-approval\">\n          <h2>Account Pending Approval</h2>\n          <p>Your teacher account is pending administrator approval.</p>\n          <p>Please check back later or contact the administrator for more information.</p>\n          <button onClick={() => navigate('/')} className=\"logout-button\">Logout</button>\n          \n          <div className=\"storage-indicator\">\n            <div className=\"storage-dot infura-active\"></div>\n            <span>Using Infura Blockchain Storage</span>\n          </div>\n          \n          {isConnecting && <div className=\"connecting-message\">Connecting to Infura...</div>}\n          {error && <div className=\"error-message\">{error}</div>}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"dashboard-container\">\n      <div className=\"dashboard-header\">\n        <BackButton destination=\"/\" />\n        <h2>Teacher Dashboard</h2>\n        <button \n          className=\"logout-button\" \n          onClick={() => {\n            sessionStorage.removeItem('userEmail');\n            sessionStorage.removeItem('userRole');\n            navigate('/');\n          }}\n        >\n          Logout\n        </button>\n      </div>\n      \n      <div className=\"storage-indicator\">\n        <div className=\"storage-dot infura-active\"></div>\n        <span>Using Infura Blockchain Storage</span>\n      </div>\n      \n      {isConnecting && <div className=\"connecting-message\">Connecting to Infura...</div>}\n      {error && <div className=\"error-message\">{error}</div>}\n      \n      <div className=\"dashboard-content\">\n        <div className=\"download-section\">\n          <h3>Download Teacher App</h3>\n          <p>Click the button below to download the Teacher App for your desktop.</p>\n          <button className=\"download-button\" onClick={handleDownload}>\n            Download Teacher App\n          </button>\n        </div>\n        {renderContent()}\n      </div>\n    </div>\n  );\n}\n\nexport default TeacherDashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}