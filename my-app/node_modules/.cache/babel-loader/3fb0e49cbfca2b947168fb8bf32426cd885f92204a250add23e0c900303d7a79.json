{"ast":null,"code":"var _jsxFileName = \"D:\\\\dadas\\\\he true randomizer\\\\theta\\\\my-app\\\\src\\\\components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BackButton from './BackButton';\nimport wasabiStorage from '../services/WasabiStorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminDashboard() {\n  _s();\n  const [activeTab, setActiveTab] = useState('schools');\n  const [schools, setSchools] = useState([]);\n  const [teachers, setTeachers] = useState([]);\n  const [selectedSchool, setSelectedSchool] = useState(null);\n  const [newSchoolName, setNewSchoolName] = useState('');\n  const [error, setError] = useState('');\n  const [showCreateSchool, setShowCreateSchool] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    loadData();\n  }, []);\n  const loadData = async () => {\n    try {\n      // Connect to Wasabi\n      const isConnected = await wasabiStorage.testConnection();\n      if (!isConnected) {\n        setError('Failed to connect to storage');\n        return;\n      }\n\n      // Load schools\n      const schoolsData = (await wasabiStorage.getData('schools.json')) || [];\n      setSchools(schoolsData);\n\n      // Load pending teachers from teacher-approval folder\n      const teachersData = await wasabiStorage.listObjects('teacher-approval/');\n      const pendingTeachers = [];\n      for (const teacher of teachersData) {\n        if (teacher.Key.endsWith('.json')) {\n          const email = teacher.Key.replace('teacher-approval/', '').replace('.json', '');\n          const teacherData = await wasabiStorage.getData(wasabiStorage.getPendingTeacherPath(email));\n          if (teacherData) {\n            pendingTeachers.push({\n              ...teacherData,\n              email: email\n            });\n          }\n        }\n      }\n      console.log('Found pending teachers:', pendingTeachers);\n      setTeachers(pendingTeachers);\n    } catch (error) {\n      console.error('Error loading data:', error);\n      setError('Failed to load data');\n    }\n  };\n  const handleCreateSchool = async () => {\n    if (!newSchoolName.trim()) {\n      setError('Please enter a school name');\n      return;\n    }\n    try {\n      const newSchool = {\n        id: Date.now(),\n        name: newSchoolName.trim(),\n        createdAt: new Date().toISOString()\n      };\n\n      // Save to schools list\n      const updatedSchools = [...schools, newSchool];\n      await wasabiStorage.saveData('schools.json', updatedSchools);\n\n      // Create school info file\n      await wasabiStorage.saveData(wasabiStorage.getSchoolPath(newSchool.name), newSchool);\n      setSchools(updatedSchools);\n      setNewSchoolName('');\n      alert('School created successfully!');\n    } catch (error) {\n      console.error('Error creating school:', error);\n      setError('Failed to create school');\n    }\n  };\n  const handleApproveTeacher = async email => {\n    try {\n      // Get teacher data from approval folder\n      const teacherData = await wasabiStorage.getData(wasabiStorage.getPendingTeacherPath(email));\n      if (!teacherData) {\n        setError('Teacher data not found');\n        return;\n      }\n\n      // Create teacher folder structure\n      const teacherFolderKey = `Skyline/teachers/${email}/`;\n      await wasabiStorage.s3.putObject({\n        Bucket: wasabiStorage.bucket,\n        Key: teacherFolderKey,\n        Body: '',\n        ContentType: 'application/x-directory'\n      }).promise();\n\n      // Create classes folder\n      const classesFolderKey = `Skyline/teachers/${email}/classes/`;\n      await wasabiStorage.s3.putObject({\n        Bucket: wasabiStorage.bucket,\n        Key: classesFolderKey,\n        Body: '',\n        ContentType: 'application/x-directory'\n      }).promise();\n\n      // Move teacher data to approved folder\n      const approvedTeacherData = {\n        ...teacherData,\n        approved: true,\n        approvedAt: new Date().toISOString()\n      };\n      await wasabiStorage.saveData(wasabiStorage.getTeacherPath(email), approvedTeacherData);\n\n      // Delete from pending folder\n      await wasabiStorage.deleteData(wasabiStorage.getPendingTeacherPath(email));\n\n      // Refresh data\n      await loadData();\n    } catch (error) {\n      console.error('Error approving teacher:', error);\n      setError('Failed to approve teacher');\n    }\n  };\n  const handleDenyTeacher = async email => {\n    try {\n      // Delete from pending folder\n      await wasabiStorage.deleteData(wasabiStorage.getPendingTeacherPath(email));\n\n      // Refresh data\n      await loadData();\n    } catch (error) {\n      console.error('Error denying teacher:', error);\n      setError('Failed to deny teacher');\n    }\n  };\n  const renderContent = () => {\n    if (activeTab === 'schools') {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"schools-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Schools\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), showCreateSchool ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-school-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newSchoolName,\n            onChange: e => setNewSchoolName(e.target.value),\n            placeholder: \"Enter school name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCreateSchool,\n              children: \"Create School\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowCreateSchool(false),\n              className: \"secondary-button\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowCreateSchool(true),\n          className: \"create-school-button\",\n          children: \"Create New School\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"schools-list\",\n          children: schools.map(school => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"school-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"school-info\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"school-name\",\n                children: school.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeSchool(school.id),\n              className: \"remove-button\",\n              style: {\n                padding: '0px 6px',\n                width: '24px',\n                height: '24px',\n                lineHeight: '18px',\n                fontSize: '18px',\n                borderRadius: '4px',\n                backgroundColor: '#dc3545',\n                color: 'white',\n                border: 'none',\n                cursor: 'pointer',\n                marginLeft: '8px',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                flexShrink: 0\n              },\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this)]\n          }, school.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"storage-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"storage-dot wasabi-active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Using Wasabi Cloud Storage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"actions-section\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setActiveTab('schools'),\n          className: \"action-button\",\n          children: \"Manage Schools\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(BackButton, {\n      destination: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'schools' ? 'active' : ''}`,\n        onClick: () => setActiveTab('schools'),\n        children: \"Schools\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `tab ${activeTab === 'teachers' ? 'active' : ''}`,\n        onClick: () => setActiveTab('teachers'),\n        children: \"Pending Teachers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tab-content\",\n      children: [renderContent(), activeTab === 'teachers' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"teachers-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Pending Teacher Approvals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this), teachers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No pending teacher approvals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"teachers-list\",\n          children: teachers.map(teacher => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"teacher-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"teacher-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"teacher-name\",\n                children: teacher.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"teacher-email\",\n                children: teacher.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"teacher-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"approve-button\",\n                onClick: () => handleApproveTeacher(teacher.email),\n                children: \"Approve\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"deny-button\",\n                onClick: () => handleDenyTeacher(teacher.email),\n                style: {\n                  backgroundColor: '#dc3545',\n                  color: 'white',\n                  marginLeft: '8px'\n                },\n                children: \"Deny\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 21\n            }, this)]\n          }, teacher.email, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminDashboard, \"ooc9ULggs9GOBjj5NxDT8XpzELk=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","BackButton","wasabiStorage","jsxDEV","_jsxDEV","AdminDashboard","_s","activeTab","setActiveTab","schools","setSchools","teachers","setTeachers","selectedSchool","setSelectedSchool","newSchoolName","setNewSchoolName","error","setError","showCreateSchool","setShowCreateSchool","navigate","loadData","isConnected","testConnection","schoolsData","getData","teachersData","listObjects","pendingTeachers","teacher","Key","endsWith","email","replace","teacherData","getPendingTeacherPath","push","console","log","handleCreateSchool","trim","newSchool","id","Date","now","name","createdAt","toISOString","updatedSchools","saveData","getSchoolPath","alert","handleApproveTeacher","teacherFolderKey","s3","putObject","Bucket","bucket","Body","ContentType","promise","classesFolderKey","approvedTeacherData","approved","approvedAt","getTeacherPath","deleteData","handleDenyTeacher","renderContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","school","removeSchool","style","padding","width","height","lineHeight","fontSize","borderRadius","backgroundColor","color","border","cursor","marginLeft","display","alignItems","justifyContent","flexShrink","destination","length","_c","$RefreshReg$"],"sources":["D:/dadas/he true randomizer/theta/my-app/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BackButton from './BackButton';\nimport wasabiStorage from '../services/WasabiStorage';\n\nfunction AdminDashboard() {\n  const [activeTab, setActiveTab] = useState('schools');\n  const [schools, setSchools] = useState([]);\n  const [teachers, setTeachers] = useState([]);\n  const [selectedSchool, setSelectedSchool] = useState(null);\n  const [newSchoolName, setNewSchoolName] = useState('');\n  const [error, setError] = useState('');\n  const [showCreateSchool, setShowCreateSchool] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const loadData = async () => {\n    try {\n      // Connect to Wasabi\n      const isConnected = await wasabiStorage.testConnection();\n      if (!isConnected) {\n        setError('Failed to connect to storage');\n        return;\n      }\n\n      // Load schools\n      const schoolsData = await wasabiStorage.getData('schools.json') || [];\n      setSchools(schoolsData);\n\n      // Load pending teachers from teacher-approval folder\n      const teachersData = await wasabiStorage.listObjects('teacher-approval/');\n      const pendingTeachers = [];\n      \n      for (const teacher of teachersData) {\n        if (teacher.Key.endsWith('.json')) {\n          const email = teacher.Key.replace('teacher-approval/', '').replace('.json', '');\n          const teacherData = await wasabiStorage.getData(wasabiStorage.getPendingTeacherPath(email));\n          if (teacherData) {\n            pendingTeachers.push({\n              ...teacherData,\n              email: email\n            });\n          }\n        }\n      }\n      \n      console.log('Found pending teachers:', pendingTeachers);\n      setTeachers(pendingTeachers);\n    } catch (error) {\n      console.error('Error loading data:', error);\n      setError('Failed to load data');\n    }\n  };\n\n  const handleCreateSchool = async () => {\n    if (!newSchoolName.trim()) {\n      setError('Please enter a school name');\n      return;\n    }\n\n    try {\n      const newSchool = {\n        id: Date.now(),\n        name: newSchoolName.trim(),\n        createdAt: new Date().toISOString()\n      };\n\n      // Save to schools list\n      const updatedSchools = [...schools, newSchool];\n      await wasabiStorage.saveData('schools.json', updatedSchools);\n      \n      // Create school info file\n      await wasabiStorage.saveData(wasabiStorage.getSchoolPath(newSchool.name), newSchool);\n      \n      setSchools(updatedSchools);\n      setNewSchoolName('');\n      alert('School created successfully!');\n    } catch (error) {\n      console.error('Error creating school:', error);\n      setError('Failed to create school');\n    }\n  };\n\n  const handleApproveTeacher = async (email) => {\n    try {\n      // Get teacher data from approval folder\n      const teacherData = await wasabiStorage.getData(wasabiStorage.getPendingTeacherPath(email));\n      if (!teacherData) {\n        setError('Teacher data not found');\n        return;\n      }\n\n      // Create teacher folder structure\n      const teacherFolderKey = `Skyline/teachers/${email}/`;\n      await wasabiStorage.s3.putObject({\n        Bucket: wasabiStorage.bucket,\n        Key: teacherFolderKey,\n        Body: '',\n        ContentType: 'application/x-directory'\n      }).promise();\n\n      // Create classes folder\n      const classesFolderKey = `Skyline/teachers/${email}/classes/`;\n      await wasabiStorage.s3.putObject({\n        Bucket: wasabiStorage.bucket,\n        Key: classesFolderKey,\n        Body: '',\n        ContentType: 'application/x-directory'\n      }).promise();\n\n      // Move teacher data to approved folder\n      const approvedTeacherData = {\n        ...teacherData,\n        approved: true,\n        approvedAt: new Date().toISOString()\n      };\n      await wasabiStorage.saveData(wasabiStorage.getTeacherPath(email), approvedTeacherData);\n\n      // Delete from pending folder\n      await wasabiStorage.deleteData(wasabiStorage.getPendingTeacherPath(email));\n\n      // Refresh data\n      await loadData();\n    } catch (error) {\n      console.error('Error approving teacher:', error);\n      setError('Failed to approve teacher');\n    }\n  };\n\n  const handleDenyTeacher = async (email) => {\n    try {\n      // Delete from pending folder\n      await wasabiStorage.deleteData(wasabiStorage.getPendingTeacherPath(email));\n      \n      // Refresh data\n      await loadData();\n    } catch (error) {\n      console.error('Error denying teacher:', error);\n      setError('Failed to deny teacher');\n    }\n  };\n\n  const renderContent = () => {\n    if (activeTab === 'schools') {\n      return (\n        <div className=\"schools-section\">\n          <h3>Schools</h3>\n          {showCreateSchool ? (\n            <div className=\"create-school-form\">\n              <input\n                type=\"text\"\n                value={newSchoolName}\n                onChange={(e) => setNewSchoolName(e.target.value)}\n                placeholder=\"Enter school name\"\n              />\n              <div className=\"form-actions\">\n                <button onClick={handleCreateSchool}>Create School</button>\n                <button onClick={() => setShowCreateSchool(false)} className=\"secondary-button\">\n                  Cancel\n                </button>\n              </div>\n            </div>\n          ) : (\n            <button onClick={() => setShowCreateSchool(true)} className=\"create-school-button\">\n              Create New School\n            </button>\n          )}\n          \n          <div className=\"schools-list\">\n            {schools.map(school => (\n              <div key={school.id} className=\"school-item\">\n                <div className=\"school-info\">\n                  <div className=\"school-name\">{school.name}</div>\n                </div>\n                <button \n                  onClick={() => removeSchool(school.id)} \n                  className=\"remove-button\"\n                  style={{ \n                    padding: '0px 6px',\n                    width: '24px',\n                    height: '24px',\n                    lineHeight: '18px',\n                    fontSize: '18px',\n                    borderRadius: '4px',\n                    backgroundColor: '#dc3545',\n                    color: 'white',\n                    border: 'none',\n                    cursor: 'pointer',\n                    marginLeft: '8px',\n                    display: 'flex',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    flexShrink: 0\n                  }}\n                >\n                  ×\n                </button>\n              </div>\n            ))}\n          </div>\n        </div>\n      );\n    }\n    \n    return (\n      <div className=\"dashboard-content\">\n        <div className=\"storage-indicator\">\n          <div className=\"storage-dot wasabi-active\"></div>\n          <span>Using Wasabi Cloud Storage</span>\n        </div>\n        \n        {error && <div className=\"error-message\">{error}</div>}\n        \n        <div className=\"actions-section\">\n          <button onClick={() => setActiveTab('schools')} className=\"action-button\">\n            Manage Schools\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"admin-dashboard\">\n      <BackButton destination=\"/\" />\n      <h2>Admin Dashboard</h2>\n\n      <div className=\"tabs\">\n        <button \n          className={`tab ${activeTab === 'schools' ? 'active' : ''}`}\n          onClick={() => setActiveTab('schools')}\n        >\n          Schools\n        </button>\n        <button \n          className={`tab ${activeTab === 'teachers' ? 'active' : ''}`}\n          onClick={() => setActiveTab('teachers')}\n        >\n          Pending Teachers\n        </button>\n      </div>\n\n      <div className=\"tab-content\">\n        {renderContent()}\n\n        {activeTab === 'teachers' && (\n          <div className=\"teachers-section\">\n            <h3>Pending Teacher Approvals</h3>\n            {teachers.length === 0 ? (\n              <p>No pending teacher approvals</p>\n            ) : (\n              <div className=\"teachers-list\">\n                {teachers.map(teacher => (\n                  <div key={teacher.email} className=\"teacher-item\">\n                    <div className=\"teacher-info\">\n                      <div className=\"teacher-name\">{teacher.name}</div>\n                      <div className=\"teacher-email\">{teacher.email}</div>\n                    </div>\n                    <div className=\"teacher-actions\">\n                      <button \n                        className=\"approve-button\"\n                        onClick={() => handleApproveTeacher(teacher.email)}\n                      >\n                        Approve\n                      </button>\n                      <button \n                        className=\"deny-button\"\n                        onClick={() => handleDenyTeacher(teacher.email)}\n                        style={{ backgroundColor: '#dc3545', color: 'white', marginLeft: '8px' }}\n                      >\n                        Deny\n                      </button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default AdminDashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}