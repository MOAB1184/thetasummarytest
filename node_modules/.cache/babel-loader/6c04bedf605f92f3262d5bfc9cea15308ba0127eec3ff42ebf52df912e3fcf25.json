{"ast":null,"code":"var _jsxFileName = \"D:\\\\dadas\\\\he true randomizer\\\\theta\\\\src\\\\components\\\\WasabiManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WasabiManager() {\n  _s();\n  const [startPath, setStartPath] = useState('');\n  const [recordings, setRecordings] = useState([]);\n  const [downloadUrl, setDownloadUrl] = useState('');\n  const [uploadPath, setUploadPath] = useState('');\n  const [uploadContent, setUploadContent] = useState('');\n  const [message, setMessage] = useState('');\n  const handleScan = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/wasabi/scan', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          startPath\n        })\n      });\n      const data = await response.json();\n      setRecordings(data.recordings);\n      setMessage('Scan completed successfully');\n    } catch (error) {\n      setMessage('Error scanning Wasabi: ' + error.message);\n    }\n  };\n  const handleDownload = async filePath => {\n    try {\n      const response = await fetch('http://localhost:5000/api/wasabi/download', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          filePath\n        })\n      });\n      const data = await response.json();\n      setDownloadUrl(data.downloadUrl);\n      setMessage('Download URL generated');\n    } catch (error) {\n      setMessage('Error generating download URL: ' + error.message);\n    }\n  };\n  const handleUpload = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/wasabi/upload', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          filePath: uploadPath,\n          fileContent: uploadContent\n        })\n      });\n      const data = await response.json();\n      setMessage(data.message);\n    } catch (error) {\n      setMessage('Error uploading file: ' + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Wasabi Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Scan Recordings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: startPath,\n        onChange: e => setStartPath(e.target.value),\n        placeholder: \"Enter start path (optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleScan,\n        children: \"Scan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: recordings.map((recording, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [recording, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDownload(recording),\n            children: \"Download\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Download\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), downloadUrl && /*#__PURE__*/_jsxDEV(\"a\", {\n        href: downloadUrl,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        children: \"Download File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Upload Summary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: uploadPath,\n        onChange: e => setUploadPath(e.target.value),\n        placeholder: \"Enter file path\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: uploadContent,\n        onChange: e => setUploadContent(e.target.value),\n        placeholder: \"Enter file content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(WasabiManager, \"roSws5QGKdtYkAse6PbAw9XmGlQ=\");\n_c = WasabiManager;\nexport default WasabiManager;\nvar _c;\n$RefreshReg$(_c, \"WasabiManager\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","WasabiManager","_s","startPath","setStartPath","recordings","setRecordings","downloadUrl","setDownloadUrl","uploadPath","setUploadPath","uploadContent","setUploadContent","message","setMessage","handleScan","response","fetch","method","headers","body","JSON","stringify","data","json","error","handleDownload","filePath","handleUpload","fileContent","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","recording","index","href","rel","_c","$RefreshReg$"],"sources":["D:/dadas/he true randomizer/theta/src/components/WasabiManager.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction WasabiManager() {\r\n  const [startPath, setStartPath] = useState('');\r\n  const [recordings, setRecordings] = useState([]);\r\n  const [downloadUrl, setDownloadUrl] = useState('');\r\n  const [uploadPath, setUploadPath] = useState('');\r\n  const [uploadContent, setUploadContent] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleScan = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/wasabi/scan', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ startPath })\r\n      });\r\n      const data = await response.json();\r\n      setRecordings(data.recordings);\r\n      setMessage('Scan completed successfully');\r\n    } catch (error) {\r\n      setMessage('Error scanning Wasabi: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleDownload = async (filePath) => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/wasabi/download', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ filePath })\r\n      });\r\n      const data = await response.json();\r\n      setDownloadUrl(data.downloadUrl);\r\n      setMessage('Download URL generated');\r\n    } catch (error) {\r\n      setMessage('Error generating download URL: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/wasabi/upload', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ filePath: uploadPath, fileContent: uploadContent })\r\n      });\r\n      const data = await response.json();\r\n      setMessage(data.message);\r\n    } catch (error) {\r\n      setMessage('Error uploading file: ' + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Wasabi Manager</h2>\r\n      <div>\r\n        <h3>Scan Recordings</h3>\r\n        <input\r\n          type=\"text\"\r\n          value={startPath}\r\n          onChange={(e) => setStartPath(e.target.value)}\r\n          placeholder=\"Enter start path (optional)\"\r\n        />\r\n        <button onClick={handleScan}>Scan</button>\r\n        <ul>\r\n          {recordings.map((recording, index) => (\r\n            <li key={index}>\r\n              {recording}\r\n              <button onClick={() => handleDownload(recording)}>Download</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div>\r\n        <h3>Download</h3>\r\n        {downloadUrl && <a href={downloadUrl} target=\"_blank\" rel=\"noopener noreferrer\">Download File</a>}\r\n      </div>\r\n      <div>\r\n        <h3>Upload Summary</h3>\r\n        <input\r\n          type=\"text\"\r\n          value={uploadPath}\r\n          onChange={(e) => setUploadPath(e.target.value)}\r\n          placeholder=\"Enter file path\"\r\n        />\r\n        <textarea\r\n          value={uploadContent}\r\n          onChange={(e) => setUploadContent(e.target.value)}\r\n          placeholder=\"Enter file content\"\r\n        />\r\n        <button onClick={handleUpload}>Upload</button>\r\n      </div>\r\n      {message && <p>{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WasabiManager; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}