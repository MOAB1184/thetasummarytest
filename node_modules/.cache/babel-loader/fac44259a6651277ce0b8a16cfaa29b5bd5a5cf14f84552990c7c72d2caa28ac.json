{"ast":null,"code":"var _jsxFileName = \"D:\\\\dadas\\\\he true randomizer\\\\theta\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './tutorBotStyle.css';\nimport LatexFormatter from './LatexFormatter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatBot() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [voiceEnabled, setVoiceEnabled] = useState(false);\n  const chatBoxRef = useRef(null);\n  const recognitionRef = useRef(null);\n  useEffect(() => {\n    // Scroll to bottom on new message\n    if (chatBoxRef.current) {\n      chatBoxRef.current.scrollTop = chatBoxRef.current.scrollHeight;\n    }\n  }, [messages]);\n  useEffect(() => {\n    // Initialize speech recognition\n    const SpeechRecognitionAPI = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (SpeechRecognitionAPI) {\n      recognitionRef.current = new SpeechRecognitionAPI();\n      recognitionRef.current.continuous = false;\n      recognitionRef.current.interimResults = false;\n      recognitionRef.current.lang = 'en-US';\n      recognitionRef.current.onresult = event => {\n        const text = event.results[0][0].transcript;\n        setInputText(text);\n        sendMessage(text);\n      };\n      recognitionRef.current.onend = () => {\n        setIsListening(false);\n      };\n    }\n  }, []);\n  const sendMessage = async (text = null) => {\n    const messageToSend = text || inputText;\n    if (!messageToSend.trim()) return;\n    setIsLoading(true);\n\n    // Add user message\n    const userMessage = {\n      type: 'user',\n      text: messageToSend\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputText('');\n    try {\n      // Prepare conversation history\n      const history = messages.map(msg => ({\n        role: msg.type === 'user' ? 'user' : 'assistant',\n        content: msg.text\n      }));\n      const response = await fetch('http://localhost:5000/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: messageToSend,\n          history\n        })\n      });\n      if (!response.ok) throw new Error('Network response was not ok');\n      const data = await response.json();\n\n      // Add bot message\n      const botMessage = {\n        type: 'bot',\n        text: data.response\n      };\n      setMessages(prev => [...prev, botMessage]);\n\n      // Only speak the response if voiceEnabled is true\n      if (voiceEnabled) {\n        speakText(data.response);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prev => [...prev, {\n        type: 'error',\n        text: 'Sorry, I encountered an error. Please try again.'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const speakText = async text => {\n    try {\n      const response = await fetch('http://localhost:5000/tts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text\n        })\n      });\n      if (!response.ok) throw new Error('TTS request failed');\n      const audioBlob = await response.blob();\n      const audioUrl = URL.createObjectURL(audioBlob);\n      const audio = new Audio(audioUrl);\n      audio.onplay = () => {\n        if (chatBoxRef.current && chatBoxRef.current.lastChild) {\n          animateBubble(chatBoxRef.current.lastChild, true);\n        }\n      };\n      audio.onended = () => {\n        if (chatBoxRef.current && chatBoxRef.current.lastChild) {\n          stopBubbleAnimation(chatBoxRef.current.lastChild);\n        }\n        URL.revokeObjectURL(audioUrl);\n      };\n      audio.play();\n    } catch (error) {\n      console.error('TTS error:', error);\n    }\n  };\n  const animateBubble = (element, isUser) => {\n    if (!element) return null;\n    const bufferLength = 256;\n    const dataArray = new Uint8Array(bufferLength);\n    function animate() {\n      if (isUser) {\n        if (chatBoxRef.current && chatBoxRef.current.lastChild) {\n          chatBoxRef.current.lastChild.style.transform = `scale(${1 + dataArray[0] / 128 * 0.5})`;\n        }\n      } else {\n        if (chatBoxRef.current && chatBoxRef.current.lastChild) {\n          chatBoxRef.current.lastChild.style.transform = `scale(${1 + dataArray[0] / 128 * 0.5})`;\n        }\n      }\n      requestAnimationFrame(animate);\n    }\n    return requestAnimationFrame(animate);\n  };\n  const stopBubbleAnimation = element => {\n    if (element) {\n      element.style.transform = 'scale(1)';\n    }\n  };\n\n  // Helper to render messages with markdown, bold, and LaTeX\n  const renderWithLatexAndMarkdown = text => {\n    if (!text) return null;\n    const lines = text.split(/\\n|\\r\\n?/);\n    return lines.map((line, idx) => {\n      if (/^###\\s+/.test(line)) {\n        return /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: '1em'\n          },\n          children: line.replace(/^###\\s+/, '')\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 16\n        }, this);\n      } else if (/^##\\s+/.test(line)) {\n        return /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            marginTop: '1em'\n          },\n          children: line.replace(/^##\\s+/, '')\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 16\n        }, this);\n      } else if (/^#\\s+/.test(line)) {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            marginTop: '1em'\n          },\n          children: line.replace(/^#\\s+/, '')\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 16\n        }, this);\n      } else if (line.trim() === '') {\n        return /*#__PURE__*/_jsxDEV(\"br\", {}, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 16\n        }, this);\n      } else {\n        // Bold (**...**)\n        const boldRegex = /\\*\\*([^*]+)\\*\\*/g;\n        const boldParts = [];\n        let lastIndex = 0;\n        let match;\n        let key = 0;\n        while ((match = boldRegex.exec(line)) !== null) {\n          if (match.index > lastIndex) {\n            boldParts.push(line.slice(lastIndex, match.index));\n          }\n          boldParts.push(/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: match[1]\n          }, key++, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 26\n          }, this));\n          lastIndex = match.index + match[0].length;\n        }\n        if (lastIndex < line.length) {\n          boldParts.push(line.slice(lastIndex));\n        }\n        // LaTeX\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            display: 'block',\n            marginTop: '0.25em'\n          },\n          children: boldParts.map((part, i) => {\n            if (typeof part === 'string') {\n              const regex = /(\\$\\$[\\s\\S]+?\\$\\$|\\$[^$]+\\$|\\\\\\[[\\s\\S]+?\\\\\\]|\\\\\\([\\s\\S]+?\\\\\\))/g;\n              const latexParts = part.split(regex);\n              return latexParts.map((sub, j) => {\n                if (sub.match(regex)) {\n                  let latex = sub;\n                  let displayMode = true;\n                  if (latex.startsWith('$$') && latex.endsWith('$$')) {\n                    latex = latex.slice(2, -2);\n                    displayMode = true;\n                  } else if (latex.startsWith('$') && latex.endsWith('$')) {\n                    latex = latex.slice(1, -1);\n                    displayMode = false;\n                  } else if (latex.startsWith('\\\\[') && latex.endsWith('\\\\]')) {\n                    latex = latex.slice(2, -2);\n                    displayMode = true;\n                  } else if (latex.startsWith('\\\\(') && latex.endsWith('\\\\)')) {\n                    latex = latex.slice(2, -2);\n                    displayMode = false;\n                  }\n                  return /*#__PURE__*/_jsxDEV(LatexFormatter, {\n                    content: latex.trim(),\n                    displayMode: displayMode\n                  }, j, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 28\n                  }, this);\n                } else {\n                  return /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: sub\n                  }, j, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 28\n                  }, this);\n                }\n              });\n            } else {\n              return part;\n            }\n          })\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"app-container\",\n    className: \"chat-active\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"greeting-area\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"greeting-text\",\n          children: \"How can Theta help you today?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"user-input\",\n          placeholder: \"How can I help you today?\",\n          value: inputText,\n          onChange: e => setInputText(e.target.value),\n          onKeyDown: e => {\n            if (e.key === 'Enter' && !e.shiftKey) {\n              e.preventDefault();\n              // sendMessage();\n            }\n          },\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"input-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left-controls\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"theta-voice-button\",\n              className: \"control-button\",\n              onClick: () => setVoiceEnabled(v => !v),\n              style: {\n                background: voiceEnabled ? '#007bff' : undefined,\n                color: voiceEnabled ? '#fff' : undefined\n              },\n              children: \"Theta Voice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"send-button\",\n              \"aria-label\": \"Send message\",\n              onClick: () => {/* sendMessage(); */},\n              disabled: isLoading,\n              children: \"\\u2191\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat-box\",\n      ref: chatBoxRef,\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        height: '350px',\n        overflowY: 'auto',\n        background: 'transparent',\n        marginTop: '20px'\n      },\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.type === 'user' ? 'message user-message' : 'message bot-message',\n        children: renderWithLatexAndMarkdown(msg.text)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBot, \"orSAcSo//y0DP48SptW3p2/8GpU=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","LatexFormatter","jsxDEV","_jsxDEV","ChatBot","_s","messages","setMessages","inputText","setInputText","isListening","setIsListening","isLoading","setIsLoading","voiceEnabled","setVoiceEnabled","chatBoxRef","recognitionRef","current","scrollTop","scrollHeight","SpeechRecognitionAPI","window","SpeechRecognition","webkitSpeechRecognition","continuous","interimResults","lang","onresult","event","text","results","transcript","sendMessage","onend","messageToSend","trim","userMessage","type","prev","history","map","msg","role","content","response","fetch","method","headers","body","JSON","stringify","message","ok","Error","data","json","botMessage","speakText","error","console","audioBlob","blob","audioUrl","URL","createObjectURL","audio","Audio","onplay","lastChild","animateBubble","onended","stopBubbleAnimation","revokeObjectURL","play","element","isUser","bufferLength","dataArray","Uint8Array","animate","style","transform","requestAnimationFrame","renderWithLatexAndMarkdown","lines","split","line","idx","test","marginTop","children","replace","fileName","_jsxFileName","lineNumber","columnNumber","boldRegex","boldParts","lastIndex","match","key","exec","index","push","slice","length","display","part","i","regex","latexParts","sub","j","latex","displayMode","startsWith","endsWith","id","className","placeholder","value","onChange","e","target","onKeyDown","shiftKey","preventDefault","disabled","onClick","v","background","undefined","color","ref","flexDirection","height","overflowY","_c","$RefreshReg$"],"sources":["D:/dadas/he true randomizer/theta/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './tutorBotStyle.css';\nimport LatexFormatter from './LatexFormatter';\n\nfunction ChatBot() {\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [voiceEnabled, setVoiceEnabled] = useState(false);\n  const chatBoxRef = useRef(null);\n  const recognitionRef = useRef(null);\n\n  useEffect(() => {\n    // Scroll to bottom on new message\n    if (chatBoxRef.current) {\n      chatBoxRef.current.scrollTop = chatBoxRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  useEffect(() => {\n    // Initialize speech recognition\n    const SpeechRecognitionAPI = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (SpeechRecognitionAPI) {\n      recognitionRef.current = new SpeechRecognitionAPI();\n      recognitionRef.current.continuous = false;\n      recognitionRef.current.interimResults = false;\n      recognitionRef.current.lang = 'en-US';\n\n      recognitionRef.current.onresult = (event) => {\n        const text = event.results[0][0].transcript;\n        setInputText(text);\n        sendMessage(text);\n      };\n\n      recognitionRef.current.onend = () => {\n        setIsListening(false);\n      };\n    }\n  }, []);\n\n  const sendMessage = async (text = null) => {\n    const messageToSend = text || inputText;\n    if (!messageToSend.trim()) return;\n\n    setIsLoading(true);\n\n    // Add user message\n    const userMessage = { type: 'user', text: messageToSend };\n    setMessages(prev => [...prev, userMessage]);\n    setInputText('');\n\n    try {\n      // Prepare conversation history\n      const history = messages.map(msg => ({\n        role: msg.type === 'user' ? 'user' : 'assistant',\n        content: msg.text\n      }));\n\n      const response = await fetch('http://localhost:5000/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ \n          message: messageToSend,\n          history\n        }),\n      });\n\n      if (!response.ok) throw new Error('Network response was not ok');\n\n      const data = await response.json();\n      \n      // Add bot message\n      const botMessage = { type: 'bot', text: data.response };\n      setMessages(prev => [...prev, botMessage]);\n\n      // Only speak the response if voiceEnabled is true\n      if (voiceEnabled) {\n        speakText(data.response);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prev => [...prev, { type: 'error', text: 'Sorry, I encountered an error. Please try again.' }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const speakText = async (text) => {\n    try {\n      const response = await fetch('http://localhost:5000/tts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ text }),\n      });\n\n      if (!response.ok) throw new Error('TTS request failed');\n\n      const audioBlob = await response.blob();\n      const audioUrl = URL.createObjectURL(audioBlob);\n      const audio = new Audio(audioUrl);\n\n      audio.onplay = () => {\n        if (chatBoxRef.current && chatBoxRef.current.lastChild) {\n          animateBubble(chatBoxRef.current.lastChild, true);\n        }\n      };\n\n      audio.onended = () => {\n        if (chatBoxRef.current && chatBoxRef.current.lastChild) {\n          stopBubbleAnimation(chatBoxRef.current.lastChild);\n        }\n        URL.revokeObjectURL(audioUrl);\n      };\n\n      audio.play();\n    } catch (error) {\n      console.error('TTS error:', error);\n    }\n  };\n\n  const animateBubble = (element, isUser) => {\n    if (!element) return null;\n    \n    const bufferLength = 256;\n    const dataArray = new Uint8Array(bufferLength);\n    \n    function animate() {\n      if (isUser) {\n        if (chatBoxRef.current && chatBoxRef.current.lastChild) {\n          chatBoxRef.current.lastChild.style.transform = `scale(${1 + (dataArray[0] / 128) * 0.5})`;\n        }\n      } else {\n        if (chatBoxRef.current && chatBoxRef.current.lastChild) {\n          chatBoxRef.current.lastChild.style.transform = `scale(${1 + (dataArray[0] / 128) * 0.5})`;\n        }\n      }\n      requestAnimationFrame(animate);\n    }\n    \n    return requestAnimationFrame(animate);\n  };\n\n  const stopBubbleAnimation = (element) => {\n    if (element) {\n      element.style.transform = 'scale(1)';\n    }\n  };\n\n  // Helper to render messages with markdown, bold, and LaTeX\n  const renderWithLatexAndMarkdown = (text) => {\n    if (!text) return null;\n    const lines = text.split(/\\n|\\r\\n?/);\n    return lines.map((line, idx) => {\n      if (/^###\\s+/.test(line)) {\n        return <h3 key={idx} style={{marginTop: '1em'}}>{line.replace(/^###\\s+/, '')}</h3>;\n      } else if (/^##\\s+/.test(line)) {\n        return <h2 key={idx} style={{marginTop: '1em'}}>{line.replace(/^##\\s+/, '')}</h2>;\n      } else if (/^#\\s+/.test(line)) {\n        return <h1 key={idx} style={{marginTop: '1em'}}>{line.replace(/^#\\s+/, '')}</h1>;\n      } else if (line.trim() === '') {\n        return <br key={idx} />;\n      } else {\n        // Bold (**...**)\n        const boldRegex = /\\*\\*([^*]+)\\*\\*/g;\n        const boldParts = [];\n        let lastIndex = 0;\n        let match;\n        let key = 0;\n        while ((match = boldRegex.exec(line)) !== null) {\n          if (match.index > lastIndex) {\n            boldParts.push(line.slice(lastIndex, match.index));\n          }\n          boldParts.push(<strong key={key++}>{match[1]}</strong>);\n          lastIndex = match.index + match[0].length;\n        }\n        if (lastIndex < line.length) {\n          boldParts.push(line.slice(lastIndex));\n        }\n        // LaTeX\n        return (\n          <span key={idx} style={{display: 'block', marginTop: '0.25em'}}>\n            {boldParts.map((part, i) => {\n              if (typeof part === 'string') {\n                const regex = /(\\$\\$[\\s\\S]+?\\$\\$|\\$[^$]+\\$|\\\\\\[[\\s\\S]+?\\\\\\]|\\\\\\([\\s\\S]+?\\\\\\))/g;\n                const latexParts = part.split(regex);\n                return latexParts.map((sub, j) => {\n                  if (sub.match(regex)) {\n                    let latex = sub;\n                    let displayMode = true;\n                    if (latex.startsWith('$$') && latex.endsWith('$$')) {\n                      latex = latex.slice(2, -2);\n                      displayMode = true;\n                    } else if (latex.startsWith('$') && latex.endsWith('$')) {\n                      latex = latex.slice(1, -1);\n                      displayMode = false;\n                    } else if (latex.startsWith('\\\\[') && latex.endsWith('\\\\]')) {\n                      latex = latex.slice(2, -2);\n                      displayMode = true;\n                    } else if (latex.startsWith('\\\\(') && latex.endsWith('\\\\)')) {\n                      latex = latex.slice(2, -2);\n                      displayMode = false;\n                    }\n                    return <LatexFormatter key={j} content={latex.trim()} displayMode={displayMode} />;\n                  } else {\n                    return <span key={j}>{sub}</span>;\n                  }\n                });\n              } else {\n                return part;\n              }\n            })}\n          </span>\n        );\n      }\n    });\n  };\n\n  return (\n    <div id=\"app-container\" className=\"chat-active\">\n      <div id=\"main-content\">\n        <div className=\"greeting-area\">\n          <h1 className=\"greeting-text\">How can Theta help you today?</h1>\n        </div>\n        <div id=\"input-container\">\n          <textarea\n            id=\"user-input\"\n            placeholder=\"How can I help you today?\"\n            value={inputText}\n            onChange={e => setInputText(e.target.value)}\n            onKeyDown={e => {\n              if (e.key === 'Enter' && !e.shiftKey) {\n                e.preventDefault();\n                // sendMessage();\n              }\n            }}\n            disabled={isLoading}\n          />\n          <div id=\"input-controls\">\n            <div className=\"left-controls\"></div>\n            <div className=\"right-controls\">\n              <button id=\"theta-voice-button\" className=\"control-button\" onClick={() => setVoiceEnabled(v => !v)} style={{ background: voiceEnabled ? '#007bff' : undefined, color: voiceEnabled ? '#fff' : undefined }}>\n                Theta Voice\n              </button>\n              <button id=\"send-button\" aria-label=\"Send message\" onClick={() => {/* sendMessage(); */}} disabled={isLoading}>↑</button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div id=\"chat-box\" ref={chatBoxRef} style={{ display: 'flex', flexDirection: 'column', height: '350px', overflowY: 'auto', background: 'transparent', marginTop: '20px' }}>\n        {messages.map((msg, idx) => (\n          <div key={idx} className={msg.type === 'user' ? 'message user-message' : 'message bot-message'}>\n            {renderWithLatexAndMarkdown(msg.text)}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default ChatBot; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}