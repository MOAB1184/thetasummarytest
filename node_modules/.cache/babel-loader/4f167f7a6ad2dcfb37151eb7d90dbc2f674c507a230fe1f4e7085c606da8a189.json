{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:5000/api';\nconst database = {\n  async login(email, password) {\n    try {\n      const response = await axios.post(`${API_URL}/login`, {\n        email,\n        password\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  },\n  async createUser(userData) {\n    try {\n      const response = await axios.post(`${API_URL}/register`, userData);\n      return response.data;\n    } catch (error) {\n      console.error('Registration error:', error);\n      throw error;\n    }\n  },\n  async getSchools() {\n    try {\n      const response = await axios.get(`${API_URL}/schools`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching schools:', error);\n      throw error;\n    }\n  },\n  async getTeachers() {\n    try {\n      const response = await axios.get(`${API_URL}/teachers`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching teachers:', error);\n      throw error;\n    }\n  },\n  async getStudents() {\n    try {\n      const response = await axios.get(`${API_URL}/students`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching students:', error);\n      throw error;\n    }\n  },\n  async approveTeacher(teacherId) {\n    try {\n      const response = await axios.post(`${API_URL}/approve-teacher/${teacherId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error approving teacher:', error);\n      throw error;\n    }\n  },\n  async removeTeacher(teacherId) {\n    try {\n      const response = await axios.delete(`${API_URL}/teachers/${teacherId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error removing teacher:', error);\n      throw error;\n    }\n  },\n  async removeStudent(studentId) {\n    try {\n      const response = await axios.delete(`${API_URL}/students/${studentId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error removing student:', error);\n      throw error;\n    }\n  },\n  async getTeacherClasses(teacherId) {\n    try {\n      const response = await axios.get(`${API_URL}/teachers/${teacherId}/classes`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching teacher classes:', error);\n      throw error;\n    }\n  },\n  async getStudentClasses(studentId) {\n    try {\n      const response = await axios.get(`${API_URL}/students/${studentId}/classes`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching student classes:', error);\n      throw error;\n    }\n  }\n};\nexport default database;","map":{"version":3,"names":["axios","API_URL","database","login","email","password","response","post","data","error","console","createUser","userData","getSchools","get","getTeachers","getStudents","approveTeacher","teacherId","removeTeacher","delete","removeStudent","studentId","getTeacherClasses","getStudentClasses"],"sources":["D:/dadas/he true randomizer/theta/src/services/Database.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\nconst database = {\r\n    async login(email, password) {\r\n        try {\r\n            const response = await axios.post(`${API_URL}/login`, { email, password });\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Login error:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    async createUser(userData) {\r\n        try {\r\n            const response = await axios.post(`${API_URL}/register`, userData);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Registration error:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    async getSchools() {\r\n        try {\r\n            const response = await axios.get(`${API_URL}/schools`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching schools:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    async getTeachers() {\r\n        try {\r\n            const response = await axios.get(`${API_URL}/teachers`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching teachers:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    async getStudents() {\r\n        try {\r\n            const response = await axios.get(`${API_URL}/students`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching students:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    async approveTeacher(teacherId) {\r\n        try {\r\n            const response = await axios.post(`${API_URL}/approve-teacher/${teacherId}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error approving teacher:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    async removeTeacher(teacherId) {\r\n        try {\r\n            const response = await axios.delete(`${API_URL}/teachers/${teacherId}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error removing teacher:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    async removeStudent(studentId) {\r\n        try {\r\n            const response = await axios.delete(`${API_URL}/students/${studentId}`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error removing student:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    async getTeacherClasses(teacherId) {\r\n        try {\r\n            const response = await axios.get(`${API_URL}/teachers/${teacherId}/classes`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching teacher classes:', error);\r\n            throw error;\r\n        }\r\n    },\r\n\r\n    async getStudentClasses(studentId) {\r\n        try {\r\n            const response = await axios.get(`${API_URL}/students/${studentId}/classes`);\r\n            return response.data;\r\n        } catch (error) {\r\n            console.error('Error fetching student classes:', error);\r\n            throw error;\r\n        }\r\n    }\r\n};\r\n\r\nexport default database; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}