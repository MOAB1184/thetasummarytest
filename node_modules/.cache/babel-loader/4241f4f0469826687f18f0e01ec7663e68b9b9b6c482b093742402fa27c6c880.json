{"ast":null,"code":"var _jsxFileName = \"D:\\\\dadas\\\\he true randomizer\\\\theta\\\\src\\\\components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BackButton from './BackButton';\nimport wasabiStorage from '../services/WasabiStorage';\nimport database from '../services/Database.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminDashboard() {\n  _s();\n  var _approvedTeachers$sel;\n  const [activeTab, setActiveTab] = useState('schools');\n  const [schools, setSchools] = useState([]);\n  const [teachers, setTeachers] = useState([]);\n  const [approvedTeachers, setApprovedTeachers] = useState({}); // Map of school -> teachers\n  const [selectedSchool, setSelectedSchool] = useState(null);\n  const [newSchoolName, setNewSchoolName] = useState('');\n  const [error, setError] = useState('');\n  const [showCreateSchool, setShowCreateSchool] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [selectedTeacher, setSelectedTeacher] = useState(null);\n  const [selectedClass, setSelectedClass] = useState(null);\n  const [teacherClasses, setTeacherClasses] = useState([]);\n  const [classStudents, setClassStudents] = useState([]);\n  const navigate = useNavigate();\n  const [pendingTeachers, setPendingTeachers] = useState([]);\n  useEffect(() => {\n    loadData();\n    loadTeachers();\n  }, []);\n  const loadData = async () => {\n    try {\n      setLoading(true);\n      // Load schools and teachers in parallel\n      const [schoolsData, teachersData] = await Promise.all([wasabiStorage.getData('schools.json') || [], wasabiStorage.listObjects('teacher-approval/')]);\n      setSchools(schoolsData);\n\n      // Process pending teachers\n      const pendingTeachers = await Promise.all(teachersData.filter(teacher => teacher.Key.endsWith('.json')).map(async teacher => {\n        const email = teacher.Key.replace('teacher-approval/', '').replace('.json', '');\n        const teacherData = await wasabiStorage.getData(`teacher-approval/${email}.json`);\n        return {\n          name: teacherData.name,\n          email: email,\n          school: teacherData.school\n        };\n      }));\n      setTeachers(pendingTeachers);\n\n      // Load approved teachers for each school in parallel\n      const approvedTeachersMap = {};\n      const processedEmails = new Set(); // Track processed emails to avoid duplicates\n\n      const schoolPromises = schoolsData.map(async school => {\n        const teachersList = await wasabiStorage.listObjects(`${school.name}/teachers/`);\n        const schoolTeachers = await Promise.all(teachersList.filter(teacher => teacher.Key.endsWith('info.json')).map(async teacher => {\n          const email = teacher.Key.split('/')[2];\n\n          // Skip if we've already processed this email\n          if (processedEmails.has(email)) {\n            return null;\n          }\n          processedEmails.add(email);\n          const teacherData = await wasabiStorage.getData(`${school.name}/teachers/${email}/info.json`);\n          if (teacherData) {\n            return {\n              ...teacherData,\n              email,\n              school: school.name\n            };\n          }\n          return null;\n        }));\n        approvedTeachersMap[school.name] = schoolTeachers.filter(t => t !== null);\n      });\n      await Promise.all(schoolPromises);\n      setApprovedTeachers(approvedTeachersMap);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error loading data:', error);\n      setError('Failed to load data');\n      setLoading(false);\n    }\n  };\n  const loadTeachers = async () => {\n    try {\n      const [pending, approved] = await Promise.all([database.getPendingTeachers(), database.getTeachers()]);\n      setPendingTeachers(pending);\n      setTeachers(pending);\n      setApprovedTeachers(approved);\n    } catch (error) {\n      console.error('Error loading teachers:', error);\n      setError('Failed to load teachers');\n    }\n  };\n  const handleCreateSchool = async () => {\n    if (!newSchoolName.trim()) {\n      setError('Please enter a school name');\n      return;\n    }\n    try {\n      const newSchool = {\n        id: Date.now(),\n        name: newSchoolName.trim(),\n        createdAt: new Date().toISOString()\n      };\n\n      // Create school folder structure\n      const schoolFolderKey = `${newSchoolName.trim()}/`;\n      const teachersFolderKey = `${newSchoolName.trim()}/teachers/`;\n      const studentsFolderKey = `${newSchoolName.trim()}/students/`;\n\n      // Create the folders in parallel\n      await Promise.all([wasabiStorage.s3.putObject({\n        Bucket: wasabiStorage.bucket,\n        Key: schoolFolderKey,\n        Body: '',\n        ContentType: 'application/x-directory'\n      }).promise(), wasabiStorage.s3.putObject({\n        Bucket: wasabiStorage.bucket,\n        Key: teachersFolderKey,\n        Body: '',\n        ContentType: 'application/x-directory'\n      }).promise(), wasabiStorage.s3.putObject({\n        Bucket: wasabiStorage.bucket,\n        Key: studentsFolderKey,\n        Body: '',\n        ContentType: 'application/x-directory'\n      }).promise()]);\n\n      // Save school info and update schools list in parallel\n      await Promise.all([wasabiStorage.saveData(`${newSchoolName.trim()}/info.json`, newSchool), wasabiStorage.saveData('schools.json', [...schools, newSchool])]);\n      setSchools([...schools, newSchool]);\n      setNewSchoolName('');\n      setApprovedTeachers({\n        ...approvedTeachers,\n        [newSchool.name]: []\n      });\n      alert('School created successfully!');\n    } catch (error) {\n      console.error('Error creating school:', error);\n      setError('Failed to create school');\n    }\n  };\n  const handleApproveTeacher = async email => {\n    if (!window.confirm('Are you sure you want to approve this teacher?')) {\n      return;\n    }\n    try {\n      await database.approveTeacher(email);\n      await loadTeachers();\n    } catch (error) {\n      console.error('Error approving teacher:', error);\n      setError('Failed to approve teacher');\n    }\n  };\n  const handleDeclineTeacher = async email => {\n    if (!window.confirm('Are you sure you want to decline this teacher?')) {\n      return;\n    }\n    try {\n      await database.declineTeacher(email);\n      await loadTeachers();\n    } catch (error) {\n      console.error('Error declining teacher:', error);\n      setError('Failed to decline teacher');\n    }\n  };\n  const handleRemoveTeacher = async email => {\n    if (!window.confirm('Are you sure you want to remove this teacher?')) {\n      return;\n    }\n    try {\n      await database.removeTeacher(email);\n      await loadTeachers();\n    } catch (error) {\n      console.error('Error removing teacher:', error);\n      setError('Failed to remove teacher');\n    }\n  };\n  const removeSchool = async schoolId => {\n    try {\n      const updatedSchools = schools.filter(school => school.id !== schoolId);\n      await wasabiStorage.saveData('schools.json', updatedSchools);\n      setSchools(updatedSchools);\n      const newApprovedTeachers = {\n        ...approvedTeachers\n      };\n      delete newApprovedTeachers[schools.find(s => s.id === schoolId).name];\n      setApprovedTeachers(newApprovedTeachers);\n    } catch (error) {\n      console.error('Error removing school:', error);\n      setError('Failed to remove school');\n    }\n  };\n  const handleDeleteTeacher = async (schoolId, teacherEmail) => {\n    try {\n      const school = schools.find(s => s.id === schoolId);\n      if (!school) {\n        setError('School not found');\n        return;\n      }\n\n      // Remove teacher's data\n      await wasabiStorage.deleteData(`${school.name}/teachers/${teacherEmail}/info.json`);\n\n      // Update state\n      setApprovedTeachers(prev => ({\n        ...prev,\n        [school.name]: prev[school.name].filter(t => t.email !== teacherEmail)\n      }));\n    } catch (error) {\n      console.error('Error removing teacher:', error);\n      setError('Failed to remove teacher');\n    }\n  };\n  const loadTeacherClasses = async (schoolName, teacherEmail) => {\n    try {\n      const classes = await wasabiStorage.listObjects(`${schoolName}/teachers/${teacherEmail}/classes/`);\n      const classesData = await Promise.all(classes.filter(c => c.Key.endsWith('/info.json')).map(async c => {\n        const classCode = c.Key.split('/')[4]; // Get class code from path\n        const classData = await wasabiStorage.getData(`${schoolName}/teachers/${teacherEmail}/classes/${classCode}/info.json`);\n        return {\n          ...classData,\n          classCode\n        };\n      }));\n      setTeacherClasses(classesData);\n    } catch (error) {\n      console.error('Error loading teacher classes:', error);\n      setError('Failed to load classes');\n    }\n  };\n  const loadClassStudents = async (schoolName, classCode) => {\n    try {\n      console.log(`Loading students for class ${classCode} in school ${schoolName}`);\n\n      // First, try to get students from the class's students directory\n      const students = await wasabiStorage.listObjects(`${schoolName}/teachers/${selectedTeacher.email}/classes/${classCode}/students/`);\n      if (students.length > 0) {\n        console.log(`Found ${students.length} students in class directory`);\n        const studentsData = await Promise.all(students.filter(s => s.Key.endsWith('/info.json')).map(async s => {\n          const studentEmail = s.Key.split('/')[6]; // Get student email from path\n          const studentData = await wasabiStorage.getData(`${schoolName}/students/${studentEmail}/info.json`);\n          return {\n            ...studentData,\n            email: studentEmail\n          };\n        }));\n        setClassStudents(studentsData);\n        return;\n      }\n\n      // If no students found in class directory, try to find them from student records\n      console.log('No students found in class directory, checking student records');\n      const allStudents = await wasabiStorage.listObjects(`${schoolName}/students/`);\n      const enrolledStudents = [];\n      for (const student of allStudents) {\n        if (!student.Key.endsWith('/info.json')) continue;\n        const studentEmail = student.Key.split('/')[2];\n        const studentData = await wasabiStorage.getData(student.Key);\n        if (studentData && studentData.classes && Array.isArray(studentData.classes)) {\n          // Check if this student is enrolled in the selected class\n          const isEnrolled = studentData.classes.some(c => c.code === classCode && c.teacherEmail === selectedTeacher.email);\n          if (isEnrolled) {\n            enrolledStudents.push({\n              ...studentData,\n              email: studentEmail\n            });\n          }\n        }\n      }\n      console.log(`Found ${enrolledStudents.length} enrolled students from student records`);\n      setClassStudents(enrolledStudents);\n    } catch (error) {\n      console.error('Error loading students:', error);\n      setError('Failed to load students');\n    }\n  };\n  const handleTeacherClick = async teacher => {\n    if ((selectedTeacher === null || selectedTeacher === void 0 ? void 0 : selectedTeacher.email) === teacher.email) {\n      setSelectedTeacher(null);\n      setTeacherClasses([]);\n      setSelectedClass(null);\n      setClassStudents([]);\n    } else {\n      setSelectedTeacher(teacher);\n      setSelectedClass(null);\n      setClassStudents([]);\n      await loadTeacherClasses(teacher.school, teacher.email);\n    }\n  };\n  const handleClassClick = async classData => {\n    if ((selectedClass === null || selectedClass === void 0 ? void 0 : selectedClass.classCode) === classData.classCode) {\n      setSelectedClass(null);\n      setClassStudents([]);\n    } else {\n      setSelectedClass(classData);\n      await loadClassStudents(selectedTeacher.school, classData.classCode);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading admin dashboard...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n        .admin-dashboard {\n          padding: 20px;\n          max-width: 1200px;\n          margin: 0 auto;\n        }\n\n        .admin-content {\n          display: flex;\n          flex-direction: column;\n          gap: 30px;\n        }\n\n        .schools-section {\n          margin-bottom: 30px;\n        }\n\n        .schools-grid {\n          display: grid;\n          grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\n          gap: 20px;\n          margin-top: 20px;\n        }\n\n        .school-card {\n          background-color: #2d2d2d;\n          border-radius: 8px;\n          padding: 20px;\n          cursor: pointer;\n          transition: transform 0.2s, background-color 0.2s;\n          position: relative;\n        }\n\n        .school-card:hover {\n          transform: translateY(-2px);\n          background-color: #353535;\n        }\n\n        .school-card h4 {\n          margin: 0 0 10px 0;\n          color: #fff;\n          font-size: 18px;\n          padding-right: 30px;\n        }\n\n        .teacher-count {\n          color: #888;\n          margin: 0;\n          font-size: 14px;\n        }\n\n        .teachers-section {\n          background-color: #2d2d2d;\n          border-radius: 8px;\n          padding: 20px;\n          width: 100%;\n        }\n\n        .teachers-list {\n          display: flex;\n          flex-direction: column;\n          gap: 10px;\n          margin-top: 15px;\n          width: 100%;\n        }\n\n        .teacher-item {\n          background-color: #1a1a1a;\n          border-radius: 4px;\n          padding: 15px;\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          min-width: 400px;\n          cursor: pointer;\n          transition: background-color 0.2s;\n        }\n\n        .teacher-item:hover {\n          background-color: #2d2d2d;\n        }\n\n        .teacher-item.selected {\n          background-color: #2d2d2d;\n          border-bottom-left-radius: 0;\n          border-bottom-right-radius: 0;\n        }\n\n        .teacher-info {\n          display: flex;\n          flex-direction: column;\n          gap: 4px;\n          flex: 1;\n          margin-right: 20px;\n        }\n\n        .teacher-name {\n          font-weight: bold;\n          color: #fff;\n          font-size: 16px;\n        }\n\n        .teacher-email {\n          color: #888;\n          font-size: 14px;\n        }\n\n        .delete-button {\n          background-color: #dc3545;\n          color: white;\n          border: none;\n          border-radius: 4px;\n          padding: 8px 16px;\n          cursor: pointer;\n          font-size: 14px;\n          transition: background-color 0.2s;\n          min-width: 80px;\n          white-space: nowrap;\n        }\n\n        .delete-button:hover {\n          background-color: #c82333;\n        }\n\n        .teacher-approvals-section {\n          background-color: #2d2d2d;\n          border-radius: 8px;\n          padding: 20px;\n        }\n\n        .teacher-approvals-list {\n          display: grid;\n          grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n          gap: 20px;\n          margin-top: 15px;\n        }\n\n        .teacher-approval-item {\n          background-color: #1a1a1a;\n          border-radius: 8px;\n          padding: 20px;\n          display: flex;\n          flex-direction: column;\n          gap: 15px;\n        }\n\n        .approval-actions {\n          display: grid;\n          grid-template-columns: 1fr 1fr;\n          gap: 10px;\n        }\n\n        .approve-button, .deny-button {\n          color: white;\n          border: none;\n          border-radius: 4px;\n          padding: 12px 0;\n          cursor: pointer;\n          font-size: 16px;\n          font-weight: 500;\n          transition: background-color 0.2s;\n          width: 100%;\n          height: 45px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          margin: 0;\n        }\n\n        .approve-button {\n          background-color: #28a745;\n        }\n\n        .approve-button:hover {\n          background-color: #218838;\n        }\n\n        .deny-button {\n          background-color: #dc3545;\n        }\n\n        .deny-button:hover {\n          background-color: #c82333;\n        }\n\n        h2 {\n          color: #fff;\n          margin-bottom: 30px;\n        }\n\n        h3 {\n          color: #fff;\n          margin: 0 0 15px 0;\n        }\n\n        .error-message {\n          background-color: #dc3545;\n          color: white;\n          padding: 10px;\n          border-radius: 4px;\n          margin-bottom: 20px;\n        }\n\n        .teacher-classes {\n          background-color: #2d2d2d;\n          padding: 15px;\n          margin-top: -1px;\n          border-bottom-left-radius: 4px;\n          border-bottom-right-radius: 4px;\n        }\n\n        .classes-list {\n          display: flex;\n          flex-direction: column;\n          gap: 10px;\n          margin-top: 10px;\n        }\n\n        .class-item {\n          background-color: #1a1a1a;\n          border-radius: 4px;\n          padding: 12px;\n          cursor: pointer;\n          transition: background-color 0.2s;\n        }\n\n        .class-item:hover {\n          background-color: #353535;\n        }\n\n        .class-item.selected {\n          background-color: #353535;\n        }\n\n        .class-info {\n          display: flex;\n          flex-direction: column;\n          gap: 4px;\n        }\n\n        .class-name {\n          font-weight: bold;\n          color: #fff;\n        }\n\n        .class-code {\n          color: #888;\n          font-size: 14px;\n        }\n\n        .class-students {\n          margin-top: 15px;\n          padding-top: 15px;\n          border-top: 1px solid #444;\n        }\n\n        .students-list {\n          display: flex;\n          flex-direction: column;\n          gap: 8px;\n          margin-top: 10px;\n        }\n\n        .student-item {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          padding: 8px;\n          background-color: #1a1a1a;\n          border-radius: 4px;\n        }\n\n        .student-name {\n          color: #fff;\n        }\n\n        .student-email {\n          color: #888;\n          font-size: 14px;\n        }\n\n        .no-classes, .no-students {\n          color: #888;\n          font-style: italic;\n          text-align: center;\n          padding: 10px;\n        }\n\n        h4 {\n          color: #fff;\n          margin: 0 0 10px 0;\n          font-size: 16px;\n        }\n\n        h5 {\n          color: #fff;\n          margin: 0 0 8px 0;\n          font-size: 14px;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BackButton, {\n      destination: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"schools-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Schools\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 9\n        }, this), showCreateSchool ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-school-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newSchoolName,\n            onChange: e => setNewSchoolName(e.target.value),\n            placeholder: \"Enter school name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCreateSchool,\n              children: \"Create School\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowCreateSchool(false),\n              className: \"secondary-button\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowCreateSchool(true),\n          className: \"create-school-button\",\n          children: \"Create New School\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 669,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"schools-grid\",\n          children: schools.map(school => {\n            var _approvedTeachers$sch;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"school-card\",\n              onClick: () => setSelectedSchool(school),\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: school.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 681,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"teacher-count\",\n                children: [((_approvedTeachers$sch = approvedTeachers[school.name]) === null || _approvedTeachers$sch === void 0 ? void 0 : _approvedTeachers$sch.length) || 0, \" Teachers\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 682,\n                columnNumber: 17\n              }, this)]\n            }, school.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 676,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 674,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 7\n      }, this), selectedSchool && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"teachers-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [selectedSchool.name, \" Teachers\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"teachers-list\",\n          children: (_approvedTeachers$sel = approvedTeachers[selectedSchool.name]) === null || _approvedTeachers$sel === void 0 ? void 0 : _approvedTeachers$sel.map(teacher => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"teacher-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"teacher-info\",\n                onClick: () => handleTeacherClick(teacher),\n                style: {\n                  cursor: 'pointer'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"teacher-name\",\n                  children: teacher.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 698,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"teacher-email\",\n                  children: teacher.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 699,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 697,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"teacher-actions\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"delete-button\",\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleDeleteTeacher(selectedSchool.id, teacher.email);\n                  },\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 702,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 701,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 696,\n              columnNumber: 19\n            }, this), (selectedTeacher === null || selectedTeacher === void 0 ? void 0 : selectedTeacher.email) === teacher.email && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"teacher-details\",\n              style: {\n                backgroundColor: '#1a1a1a',\n                padding: '15px',\n                marginTop: '1px',\n                borderBottomLeftRadius: '4px',\n                borderBottomRightRadius: '4px'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"classes-section\",\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  style: {\n                    color: '#fff',\n                    marginBottom: '10px'\n                  },\n                  children: \"Classes:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 722,\n                  columnNumber: 25\n                }, this), teacherClasses.length > 0 ? teacherClasses.map(classData => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `class-item ${(selectedClass === null || selectedClass === void 0 ? void 0 : selectedClass.classCode) === classData.classCode ? 'selected' : ''}`,\n                  onClick: () => handleClassClick(classData),\n                  style: {\n                    backgroundColor: (selectedClass === null || selectedClass === void 0 ? void 0 : selectedClass.classCode) === classData.classCode ? '#353535' : '#2d2d2d',\n                    padding: '10px',\n                    marginBottom: '8px',\n                    borderRadius: '4px',\n                    cursor: 'pointer'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"class-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: '#fff',\n                        fontWeight: 'bold'\n                      },\n                      children: classData.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 738,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: '#888',\n                        fontSize: '14px'\n                      },\n                      children: [\"Code: \", classData.classCode]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 739,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 737,\n                    columnNumber: 31\n                  }, this), (selectedClass === null || selectedClass === void 0 ? void 0 : selectedClass.classCode) === classData.classCode && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"class-students\",\n                    style: {\n                      marginTop: '15px',\n                      borderTop: '1px solid #444',\n                      paddingTop: '15px'\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                      style: {\n                        color: '#fff',\n                        marginBottom: '10px'\n                      },\n                      children: \"Enrolled Students:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 743,\n                      columnNumber: 35\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"students-list\",\n                      children: [classStudents.map(student => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"student-item\",\n                        style: {\n                          backgroundColor: '#1a1a1a',\n                          padding: '10px',\n                          borderRadius: '4px',\n                          marginBottom: '8px'\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            color: '#fff'\n                          },\n                          children: student.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 752,\n                          columnNumber: 41\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          style: {\n                            color: '#888',\n                            fontSize: '14px'\n                          },\n                          children: student.email\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 753,\n                          columnNumber: 41\n                        }, this)]\n                      }, student.email, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 746,\n                        columnNumber: 39\n                      }, this)), classStudents.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n                        style: {\n                          color: '#888',\n                          fontStyle: 'italic'\n                        },\n                        children: \"No students enrolled in this class\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 757,\n                        columnNumber: 39\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 744,\n                      columnNumber: 35\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 742,\n                    columnNumber: 33\n                  }, this)]\n                }, classData.classCode, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 725,\n                  columnNumber: 29\n                }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    color: '#888',\n                    fontStyle: 'italic',\n                    padding: '10px'\n                  },\n                  children: \"No classes created\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 765,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 721,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 714,\n              columnNumber: 21\n            }, this)]\n          }, teacher.email, true, {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 9\n      }, this), teachers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"teacher-approvals-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Teacher Approvals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 778,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"teacher-approvals-list\",\n          children: teachers.map(teacher => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"teacher-approval-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"teacher-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"teacher-name\",\n                children: teacher.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 783,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"teacher-email\",\n                children: teacher.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 784,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"teacher-school\",\n                style: {\n                  color: '#888',\n                  fontSize: '14px'\n                },\n                children: [\"School: \", teacher.school]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 785,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 782,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"approval-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"approve-button\",\n                onClick: () => handleApproveTeacher(teacher.email),\n                children: \"Approve\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 788,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"deny-button\",\n                onClick: () => handleDeclineTeacher(teacher.email),\n                children: \"Decline\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 794,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 787,\n              columnNumber: 19\n            }, this)]\n          }, teacher.email, true, {\n            fileName: _jsxFileName,\n            lineNumber: 781,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 779,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 777,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 650,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 345,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminDashboard, \"jO6zZGAwhp4Y24cJosa9XeRNRvE=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","BackButton","wasabiStorage","database","jsxDEV","_jsxDEV","AdminDashboard","_s","_approvedTeachers$sel","activeTab","setActiveTab","schools","setSchools","teachers","setTeachers","approvedTeachers","setApprovedTeachers","selectedSchool","setSelectedSchool","newSchoolName","setNewSchoolName","error","setError","showCreateSchool","setShowCreateSchool","loading","setLoading","selectedTeacher","setSelectedTeacher","selectedClass","setSelectedClass","teacherClasses","setTeacherClasses","classStudents","setClassStudents","navigate","pendingTeachers","setPendingTeachers","loadData","loadTeachers","schoolsData","teachersData","Promise","all","getData","listObjects","filter","teacher","Key","endsWith","map","email","replace","teacherData","name","school","approvedTeachersMap","processedEmails","Set","schoolPromises","teachersList","schoolTeachers","split","has","add","t","console","pending","approved","getPendingTeachers","getTeachers","handleCreateSchool","trim","newSchool","id","Date","now","createdAt","toISOString","schoolFolderKey","teachersFolderKey","studentsFolderKey","s3","putObject","Bucket","bucket","Body","ContentType","promise","saveData","alert","handleApproveTeacher","window","confirm","approveTeacher","handleDeclineTeacher","declineTeacher","handleRemoveTeacher","removeTeacher","removeSchool","schoolId","updatedSchools","newApprovedTeachers","find","s","handleDeleteTeacher","teacherEmail","deleteData","prev","loadTeacherClasses","schoolName","classes","classesData","c","classCode","classData","loadClassStudents","log","students","length","studentsData","studentEmail","studentData","allStudents","enrolledStudents","student","Array","isArray","isEnrolled","some","code","push","handleTeacherClick","handleClassClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","destination","type","value","onChange","e","target","placeholder","onClick","_approvedTeachers$sch","style","cursor","stopPropagation","backgroundColor","padding","marginTop","borderBottomLeftRadius","borderBottomRightRadius","color","marginBottom","borderRadius","fontWeight","fontSize","borderTop","paddingTop","fontStyle","_c","$RefreshReg$"],"sources":["D:/dadas/he true randomizer/theta/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BackButton from './BackButton';\nimport wasabiStorage from '../services/WasabiStorage';\nimport database from '../services/Database.js';\n\nfunction AdminDashboard() {\n  const [activeTab, setActiveTab] = useState('schools');\n  const [schools, setSchools] = useState([]);\n  const [teachers, setTeachers] = useState([]);\n  const [approvedTeachers, setApprovedTeachers] = useState({});  // Map of school -> teachers\n  const [selectedSchool, setSelectedSchool] = useState(null);\n  const [newSchoolName, setNewSchoolName] = useState('');\n  const [error, setError] = useState('');\n  const [showCreateSchool, setShowCreateSchool] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [selectedTeacher, setSelectedTeacher] = useState(null);\n  const [selectedClass, setSelectedClass] = useState(null);\n  const [teacherClasses, setTeacherClasses] = useState([]);\n  const [classStudents, setClassStudents] = useState([]);\n  const navigate = useNavigate();\n  const [pendingTeachers, setPendingTeachers] = useState([]);\n\n  useEffect(() => {\n    loadData();\n    loadTeachers();\n  }, []);\n\n  const loadData = async () => {\n    try {\n      setLoading(true);\n      // Load schools and teachers in parallel\n      const [schoolsData, teachersData] = await Promise.all([\n        wasabiStorage.getData('schools.json') || [],\n        wasabiStorage.listObjects('teacher-approval/')\n      ]);\n\n      setSchools(schoolsData);\n\n      // Process pending teachers\n      const pendingTeachers = await Promise.all(\n        teachersData\n          .filter(teacher => teacher.Key.endsWith('.json'))\n          .map(async (teacher) => {\n            const email = teacher.Key.replace('teacher-approval/', '').replace('.json', '');\n            const teacherData = await wasabiStorage.getData(`teacher-approval/${email}.json`);\n            return {\n              name: teacherData.name,\n              email: email,\n              school: teacherData.school\n            };\n          })\n      );\n      setTeachers(pendingTeachers);\n\n      // Load approved teachers for each school in parallel\n      const approvedTeachersMap = {};\n      const processedEmails = new Set(); // Track processed emails to avoid duplicates\n\n      const schoolPromises = schoolsData.map(async (school) => {\n        const teachersList = await wasabiStorage.listObjects(`${school.name}/teachers/`);\n        const schoolTeachers = await Promise.all(\n          teachersList\n            .filter(teacher => teacher.Key.endsWith('info.json'))\n            .map(async (teacher) => {\n              const email = teacher.Key.split('/')[2];\n              \n              // Skip if we've already processed this email\n              if (processedEmails.has(email)) {\n                return null;\n              }\n              processedEmails.add(email);\n              \n              const teacherData = await wasabiStorage.getData(`${school.name}/teachers/${email}/info.json`);\n              if (teacherData) {\n                return {\n                  ...teacherData,\n                  email,\n                  school: school.name\n                };\n              }\n              return null;\n            })\n        );\n        approvedTeachersMap[school.name] = schoolTeachers.filter(t => t !== null);\n      });\n\n      await Promise.all(schoolPromises);\n      setApprovedTeachers(approvedTeachersMap);\n      setLoading(false);\n    } catch (error) {\n      console.error('Error loading data:', error);\n      setError('Failed to load data');\n      setLoading(false);\n    }\n  };\n\n  const loadTeachers = async () => {\n    try {\n      const [pending, approved] = await Promise.all([\n        database.getPendingTeachers(),\n        database.getTeachers()\n      ]);\n      setPendingTeachers(pending);\n      setTeachers(pending);\n      setApprovedTeachers(approved);\n    } catch (error) {\n      console.error('Error loading teachers:', error);\n      setError('Failed to load teachers');\n    }\n  };\n\n  const handleCreateSchool = async () => {\n    if (!newSchoolName.trim()) {\n      setError('Please enter a school name');\n      return;\n    }\n\n    try {\n      const newSchool = {\n        id: Date.now(),\n        name: newSchoolName.trim(),\n        createdAt: new Date().toISOString()\n      };\n\n      // Create school folder structure\n      const schoolFolderKey = `${newSchoolName.trim()}/`;\n      const teachersFolderKey = `${newSchoolName.trim()}/teachers/`;\n      const studentsFolderKey = `${newSchoolName.trim()}/students/`;\n\n      // Create the folders in parallel\n      await Promise.all([\n        wasabiStorage.s3.putObject({\n          Bucket: wasabiStorage.bucket,\n          Key: schoolFolderKey,\n          Body: '',\n          ContentType: 'application/x-directory'\n        }).promise(),\n        wasabiStorage.s3.putObject({\n          Bucket: wasabiStorage.bucket,\n          Key: teachersFolderKey,\n          Body: '',\n          ContentType: 'application/x-directory'\n        }).promise(),\n        wasabiStorage.s3.putObject({\n          Bucket: wasabiStorage.bucket,\n          Key: studentsFolderKey,\n          Body: '',\n          ContentType: 'application/x-directory'\n        }).promise()\n      ]);\n\n      // Save school info and update schools list in parallel\n      await Promise.all([\n        wasabiStorage.saveData(`${newSchoolName.trim()}/info.json`, newSchool),\n        wasabiStorage.saveData('schools.json', [...schools, newSchool])\n      ]);\n      \n      setSchools([...schools, newSchool]);\n      setNewSchoolName('');\n      setApprovedTeachers({ ...approvedTeachers, [newSchool.name]: [] });\n      alert('School created successfully!');\n    } catch (error) {\n      console.error('Error creating school:', error);\n      setError('Failed to create school');\n    }\n  };\n\n  const handleApproveTeacher = async (email) => {\n    if (!window.confirm('Are you sure you want to approve this teacher?')) {\n      return;\n    }\n    try {\n      await database.approveTeacher(email);\n      await loadTeachers();\n    } catch (error) {\n      console.error('Error approving teacher:', error);\n      setError('Failed to approve teacher');\n    }\n  };\n\n  const handleDeclineTeacher = async (email) => {\n    if (!window.confirm('Are you sure you want to decline this teacher?')) {\n      return;\n    }\n    try {\n      await database.declineTeacher(email);\n      await loadTeachers();\n    } catch (error) {\n      console.error('Error declining teacher:', error);\n      setError('Failed to decline teacher');\n    }\n  };\n\n  const handleRemoveTeacher = async (email) => {\n    if (!window.confirm('Are you sure you want to remove this teacher?')) {\n      return;\n    }\n    try {\n      await database.removeTeacher(email);\n      await loadTeachers();\n    } catch (error) {\n      console.error('Error removing teacher:', error);\n      setError('Failed to remove teacher');\n    }\n  };\n\n  const removeSchool = async (schoolId) => {\n    try {\n      const updatedSchools = schools.filter(school => school.id !== schoolId);\n      await wasabiStorage.saveData('schools.json', updatedSchools);\n      setSchools(updatedSchools);\n      const newApprovedTeachers = { ...approvedTeachers };\n      delete newApprovedTeachers[schools.find(s => s.id === schoolId).name];\n      setApprovedTeachers(newApprovedTeachers);\n    } catch (error) {\n      console.error('Error removing school:', error);\n      setError('Failed to remove school');\n    }\n  };\n\n  const handleDeleteTeacher = async (schoolId, teacherEmail) => {\n    try {\n      const school = schools.find(s => s.id === schoolId);\n      if (!school) {\n        setError('School not found');\n        return;\n      }\n\n      // Remove teacher's data\n      await wasabiStorage.deleteData(`${school.name}/teachers/${teacherEmail}/info.json`);\n      \n      // Update state\n      setApprovedTeachers(prev => ({\n        ...prev,\n        [school.name]: prev[school.name].filter(t => t.email !== teacherEmail)\n      }));\n    } catch (error) {\n      console.error('Error removing teacher:', error);\n      setError('Failed to remove teacher');\n    }\n  };\n\n  const loadTeacherClasses = async (schoolName, teacherEmail) => {\n    try {\n      const classes = await wasabiStorage.listObjects(`${schoolName}/teachers/${teacherEmail}/classes/`);\n      const classesData = await Promise.all(\n        classes\n          .filter(c => c.Key.endsWith('/info.json'))\n          .map(async (c) => {\n            const classCode = c.Key.split('/')[4]; // Get class code from path\n            const classData = await wasabiStorage.getData(`${schoolName}/teachers/${teacherEmail}/classes/${classCode}/info.json`);\n            return { ...classData, classCode };\n          })\n      );\n      setTeacherClasses(classesData);\n    } catch (error) {\n      console.error('Error loading teacher classes:', error);\n      setError('Failed to load classes');\n    }\n  };\n\n  const loadClassStudents = async (schoolName, classCode) => {\n    try {\n      console.log(`Loading students for class ${classCode} in school ${schoolName}`);\n      \n      // First, try to get students from the class's students directory\n      const students = await wasabiStorage.listObjects(`${schoolName}/teachers/${selectedTeacher.email}/classes/${classCode}/students/`);\n      \n      if (students.length > 0) {\n        console.log(`Found ${students.length} students in class directory`);\n        const studentsData = await Promise.all(\n          students\n            .filter(s => s.Key.endsWith('/info.json'))\n            .map(async (s) => {\n              const studentEmail = s.Key.split('/')[6]; // Get student email from path\n              const studentData = await wasabiStorage.getData(`${schoolName}/students/${studentEmail}/info.json`);\n              return { ...studentData, email: studentEmail };\n            })\n        );\n        setClassStudents(studentsData);\n        return;\n      }\n      \n      // If no students found in class directory, try to find them from student records\n      console.log('No students found in class directory, checking student records');\n      const allStudents = await wasabiStorage.listObjects(`${schoolName}/students/`);\n      const enrolledStudents = [];\n      \n      for (const student of allStudents) {\n        if (!student.Key.endsWith('/info.json')) continue;\n        \n        const studentEmail = student.Key.split('/')[2];\n        const studentData = await wasabiStorage.getData(student.Key);\n        \n        if (studentData && studentData.classes && Array.isArray(studentData.classes)) {\n          // Check if this student is enrolled in the selected class\n          const isEnrolled = studentData.classes.some(c => \n            c.code === classCode && c.teacherEmail === selectedTeacher.email\n          );\n          \n          if (isEnrolled) {\n            enrolledStudents.push({ ...studentData, email: studentEmail });\n          }\n        }\n      }\n      \n      console.log(`Found ${enrolledStudents.length} enrolled students from student records`);\n      setClassStudents(enrolledStudents);\n    } catch (error) {\n      console.error('Error loading students:', error);\n      setError('Failed to load students');\n    }\n  };\n\n  const handleTeacherClick = async (teacher) => {\n    if (selectedTeacher?.email === teacher.email) {\n      setSelectedTeacher(null);\n      setTeacherClasses([]);\n      setSelectedClass(null);\n      setClassStudents([]);\n    } else {\n      setSelectedTeacher(teacher);\n      setSelectedClass(null);\n      setClassStudents([]);\n      await loadTeacherClasses(teacher.school, teacher.email);\n    }\n  };\n\n  const handleClassClick = async (classData) => {\n    if (selectedClass?.classCode === classData.classCode) {\n      setSelectedClass(null);\n      setClassStudents([]);\n    } else {\n      setSelectedClass(classData);\n      await loadClassStudents(selectedTeacher.school, classData.classCode);\n    }\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading admin dashboard...</div>;\n  }\n\n  return (\n    <div className=\"admin-dashboard\">\n      <style>{`\n        .admin-dashboard {\n          padding: 20px;\n          max-width: 1200px;\n          margin: 0 auto;\n        }\n\n        .admin-content {\n          display: flex;\n          flex-direction: column;\n          gap: 30px;\n        }\n\n        .schools-section {\n          margin-bottom: 30px;\n        }\n\n        .schools-grid {\n          display: grid;\n          grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));\n          gap: 20px;\n          margin-top: 20px;\n        }\n\n        .school-card {\n          background-color: #2d2d2d;\n          border-radius: 8px;\n          padding: 20px;\n          cursor: pointer;\n          transition: transform 0.2s, background-color 0.2s;\n          position: relative;\n        }\n\n        .school-card:hover {\n          transform: translateY(-2px);\n          background-color: #353535;\n        }\n\n        .school-card h4 {\n          margin: 0 0 10px 0;\n          color: #fff;\n          font-size: 18px;\n          padding-right: 30px;\n        }\n\n        .teacher-count {\n          color: #888;\n          margin: 0;\n          font-size: 14px;\n        }\n\n        .teachers-section {\n          background-color: #2d2d2d;\n          border-radius: 8px;\n          padding: 20px;\n          width: 100%;\n        }\n\n        .teachers-list {\n          display: flex;\n          flex-direction: column;\n          gap: 10px;\n          margin-top: 15px;\n          width: 100%;\n        }\n\n        .teacher-item {\n          background-color: #1a1a1a;\n          border-radius: 4px;\n          padding: 15px;\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          min-width: 400px;\n          cursor: pointer;\n          transition: background-color 0.2s;\n        }\n\n        .teacher-item:hover {\n          background-color: #2d2d2d;\n        }\n\n        .teacher-item.selected {\n          background-color: #2d2d2d;\n          border-bottom-left-radius: 0;\n          border-bottom-right-radius: 0;\n        }\n\n        .teacher-info {\n          display: flex;\n          flex-direction: column;\n          gap: 4px;\n          flex: 1;\n          margin-right: 20px;\n        }\n\n        .teacher-name {\n          font-weight: bold;\n          color: #fff;\n          font-size: 16px;\n        }\n\n        .teacher-email {\n          color: #888;\n          font-size: 14px;\n        }\n\n        .delete-button {\n          background-color: #dc3545;\n          color: white;\n          border: none;\n          border-radius: 4px;\n          padding: 8px 16px;\n          cursor: pointer;\n          font-size: 14px;\n          transition: background-color 0.2s;\n          min-width: 80px;\n          white-space: nowrap;\n        }\n\n        .delete-button:hover {\n          background-color: #c82333;\n        }\n\n        .teacher-approvals-section {\n          background-color: #2d2d2d;\n          border-radius: 8px;\n          padding: 20px;\n        }\n\n        .teacher-approvals-list {\n          display: grid;\n          grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));\n          gap: 20px;\n          margin-top: 15px;\n        }\n\n        .teacher-approval-item {\n          background-color: #1a1a1a;\n          border-radius: 8px;\n          padding: 20px;\n          display: flex;\n          flex-direction: column;\n          gap: 15px;\n        }\n\n        .approval-actions {\n          display: grid;\n          grid-template-columns: 1fr 1fr;\n          gap: 10px;\n        }\n\n        .approve-button, .deny-button {\n          color: white;\n          border: none;\n          border-radius: 4px;\n          padding: 12px 0;\n          cursor: pointer;\n          font-size: 16px;\n          font-weight: 500;\n          transition: background-color 0.2s;\n          width: 100%;\n          height: 45px;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          margin: 0;\n        }\n\n        .approve-button {\n          background-color: #28a745;\n        }\n\n        .approve-button:hover {\n          background-color: #218838;\n        }\n\n        .deny-button {\n          background-color: #dc3545;\n        }\n\n        .deny-button:hover {\n          background-color: #c82333;\n        }\n\n        h2 {\n          color: #fff;\n          margin-bottom: 30px;\n        }\n\n        h3 {\n          color: #fff;\n          margin: 0 0 15px 0;\n        }\n\n        .error-message {\n          background-color: #dc3545;\n          color: white;\n          padding: 10px;\n          border-radius: 4px;\n          margin-bottom: 20px;\n        }\n\n        .teacher-classes {\n          background-color: #2d2d2d;\n          padding: 15px;\n          margin-top: -1px;\n          border-bottom-left-radius: 4px;\n          border-bottom-right-radius: 4px;\n        }\n\n        .classes-list {\n          display: flex;\n          flex-direction: column;\n          gap: 10px;\n          margin-top: 10px;\n        }\n\n        .class-item {\n          background-color: #1a1a1a;\n          border-radius: 4px;\n          padding: 12px;\n          cursor: pointer;\n          transition: background-color 0.2s;\n        }\n\n        .class-item:hover {\n          background-color: #353535;\n        }\n\n        .class-item.selected {\n          background-color: #353535;\n        }\n\n        .class-info {\n          display: flex;\n          flex-direction: column;\n          gap: 4px;\n        }\n\n        .class-name {\n          font-weight: bold;\n          color: #fff;\n        }\n\n        .class-code {\n          color: #888;\n          font-size: 14px;\n        }\n\n        .class-students {\n          margin-top: 15px;\n          padding-top: 15px;\n          border-top: 1px solid #444;\n        }\n\n        .students-list {\n          display: flex;\n          flex-direction: column;\n          gap: 8px;\n          margin-top: 10px;\n        }\n\n        .student-item {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          padding: 8px;\n          background-color: #1a1a1a;\n          border-radius: 4px;\n        }\n\n        .student-name {\n          color: #fff;\n        }\n\n        .student-email {\n          color: #888;\n          font-size: 14px;\n        }\n\n        .no-classes, .no-students {\n          color: #888;\n          font-style: italic;\n          text-align: center;\n          padding: 10px;\n        }\n\n        h4 {\n          color: #fff;\n          margin: 0 0 10px 0;\n          font-size: 16px;\n        }\n\n        h5 {\n          color: #fff;\n          margin: 0 0 8px 0;\n          font-size: 14px;\n        }\n      `}</style>\n      <BackButton destination=\"/\" />\n      <h2>Admin Dashboard</h2>\n      {error && <div className=\"error-message\">{error}</div>}\n\n      <div className=\"admin-content\">\n      <div className=\"schools-section\">\n        <h3>Schools</h3>\n        {showCreateSchool ? (\n          <div className=\"create-school-form\">\n            <input\n              type=\"text\"\n              value={newSchoolName}\n              onChange={(e) => setNewSchoolName(e.target.value)}\n              placeholder=\"Enter school name\"\n            />\n            <div className=\"form-actions\">\n              <button onClick={handleCreateSchool}>Create School</button>\n              <button onClick={() => setShowCreateSchool(false)} className=\"secondary-button\">\n                Cancel\n              </button>\n            </div>\n          </div>\n        ) : (\n          <button onClick={() => setShowCreateSchool(true)} className=\"create-school-button\">\n            Create New School\n          </button>\n        )}\n        \n          <div className=\"schools-grid\">\n            {schools.map((school) => (\n              <div \n                key={school.id} \n                className=\"school-card\"\n                onClick={() => setSelectedSchool(school)}\n              >\n                <h4>{school.name}</h4>\n                <p className=\"teacher-count\">\n                  {approvedTeachers[school.name]?.length || 0} Teachers\n                </p>\n            </div>\n          ))}\n        </div>\n      </div>\n\n        {selectedSchool && (\n        <div className=\"teachers-section\">\n            <h3>{selectedSchool.name} Teachers</h3>\n          <div className=\"teachers-list\">\n              {approvedTeachers[selectedSchool.name]?.map((teacher) => (\n                <div key={teacher.email}>\n                  <div className=\"teacher-item\">\n                    <div className=\"teacher-info\" onClick={() => handleTeacherClick(teacher)} style={{ cursor: 'pointer' }}>\n                      <span className=\"teacher-name\">{teacher.name}</span>\n                      <span className=\"teacher-email\">{teacher.email}</span>\n                </div>\n                <div className=\"teacher-actions\">\n                      <button \n                        className=\"delete-button\"\n                        onClick={(e) => {\n                          e.stopPropagation();\n                          handleDeleteTeacher(selectedSchool.id, teacher.email);\n                        }}\n                      >\n                        Delete\n                      </button>\n                    </div>\n                  </div>\n                  {selectedTeacher?.email === teacher.email && (\n                    <div className=\"teacher-details\" style={{ \n                      backgroundColor: '#1a1a1a',\n                      padding: '15px',\n                      marginTop: '1px',\n                      borderBottomLeftRadius: '4px',\n                      borderBottomRightRadius: '4px'\n                    }}>\n                      <div className=\"classes-section\">\n                        <h4 style={{ color: '#fff', marginBottom: '10px' }}>Classes:</h4>\n                        {teacherClasses.length > 0 ? (\n                          teacherClasses.map((classData) => (\n                            <div \n                              key={classData.classCode} \n                              className={`class-item ${selectedClass?.classCode === classData.classCode ? 'selected' : ''}`}\n                              onClick={() => handleClassClick(classData)}\n                              style={{ \n                                backgroundColor: selectedClass?.classCode === classData.classCode ? '#353535' : '#2d2d2d',\n                                padding: '10px',\n                                marginBottom: '8px',\n                                borderRadius: '4px',\n                                cursor: 'pointer'\n                              }}\n                            >\n                              <div className=\"class-info\">\n                                <span style={{ color: '#fff', fontWeight: 'bold' }}>{classData.name}</span>\n                                <span style={{ color: '#888', fontSize: '14px' }}>Code: {classData.classCode}</span>\n                              </div>\n                              {selectedClass?.classCode === classData.classCode && (\n                                <div className=\"class-students\" style={{ marginTop: '15px', borderTop: '1px solid #444', paddingTop: '15px' }}>\n                                  <h5 style={{ color: '#fff', marginBottom: '10px' }}>Enrolled Students:</h5>\n                                  <div className=\"students-list\">\n                                    {classStudents.map((student) => (\n                                      <div key={student.email} className=\"student-item\" style={{\n                                        backgroundColor: '#1a1a1a',\n                                        padding: '10px',\n                                        borderRadius: '4px',\n                                        marginBottom: '8px'\n                                      }}>\n                                        <span style={{ color: '#fff' }}>{student.name}</span>\n                                        <span style={{ color: '#888', fontSize: '14px' }}>{student.email}</span>\n                                      </div>\n                                    ))}\n                                    {classStudents.length === 0 && (\n                                      <p style={{ color: '#888', fontStyle: 'italic' }}>No students enrolled in this class</p>\n                                    )}\n                                  </div>\n                                </div>\n                              )}\n                            </div>\n                          ))\n                        ) : (\n                          <p style={{ color: '#888', fontStyle: 'italic', padding: '10px' }}>No classes created</p>\n                        )}\n                      </div>\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n\n        {teachers.length > 0 && (\n          <div className=\"teacher-approvals-section\">\n            <h3>Teacher Approvals</h3>\n            <div className=\"teacher-approvals-list\">\n              {teachers.map((teacher) => (\n                <div key={teacher.email} className=\"teacher-approval-item\">\n                  <div className=\"teacher-info\">\n                    <span className=\"teacher-name\">{teacher.name}</span>\n                    <span className=\"teacher-email\">{teacher.email}</span>\n                    <span className=\"teacher-school\" style={{ color: '#888', fontSize: '14px' }}>School: {teacher.school}</span>\n                  </div>\n                  <div className=\"approval-actions\">\n                  <button \n                    className=\"approve-button\"\n                    onClick={() => handleApproveTeacher(teacher.email)}\n                  >\n                    Approve\n                  </button>\n                  <button \n                    className=\"deny-button\"\n                    onClick={() => handleDeclineTeacher(teacher.email)}\n                  >\n                    Decline\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      </div>\n    </div>\n  );\n}\n\nexport default AdminDashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}