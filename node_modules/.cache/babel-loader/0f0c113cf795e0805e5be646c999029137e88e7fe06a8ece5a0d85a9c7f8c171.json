{"ast":null,"code":"var _jsxFileName = \"D:\\\\dadas\\\\he true randomizer\\\\theta\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './tutorBotStyle.css';\nimport LatexFormatter from './LatexFormatter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatBot() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [voiceEnabled, setVoiceEnabled] = useState(false);\n  const chatBoxRef = useRef(null);\n\n  // Scroll to bottom on new message\n  useEffect(() => {\n    if (chatBoxRef.current) {\n      chatBoxRef.current.scrollTop = chatBoxRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  // Render markdown, LaTeX, and bold\n  const renderWithLatexAndMarkdown = text => {\n    if (!text) return null;\n    const lines = text.split(/\\n|\\r\\n?/);\n    return lines.map((line, idx) => {\n      if (/^###\\s+/.test(line)) {\n        return /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: '1em'\n          },\n          children: line.replace(/^###\\s+/, '')\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 16\n        }, this);\n      } else if (/^##\\s+/.test(line)) {\n        return /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            marginTop: '1em'\n          },\n          children: line.replace(/^##\\s+/, '')\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 16\n        }, this);\n      } else if (/^#\\s+/.test(line)) {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            marginTop: '1em'\n          },\n          children: line.replace(/^#\\s+/, '')\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 16\n        }, this);\n      } else if (line.trim() === '') {\n        return /*#__PURE__*/_jsxDEV(\"br\", {}, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 16\n        }, this);\n      } else {\n        // Bold (**...**)\n        const boldRegex = /\\*\\*([^*]+)\\*\\*/g;\n        const boldParts = [];\n        let lastIndex = 0;\n        let match;\n        let key = 0;\n        while ((match = boldRegex.exec(line)) !== null) {\n          if (match.index > lastIndex) {\n            boldParts.push(line.slice(lastIndex, match.index));\n          }\n          boldParts.push(/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: match[1]\n          }, key++, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 26\n          }, this));\n          lastIndex = match.index + match[0].length;\n        }\n        if (lastIndex < line.length) {\n          boldParts.push(line.slice(lastIndex));\n        }\n        // LaTeX\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            display: 'block',\n            marginTop: '0.25em'\n          },\n          children: boldParts.map((part, i) => {\n            if (typeof part === 'string') {\n              const regex = /(\\$\\$[\\s\\S]+?\\$\\$|\\$[^$]+\\$|\\\\\\[[\\s\\S]+?\\\\\\]|\\\\\\([\\s\\S]+?\\\\\\))/g;\n              const latexParts = part.split(regex);\n              return latexParts.map((sub, j) => {\n                if (sub.match(regex)) {\n                  let latex = sub;\n                  let displayMode = true;\n                  if (latex.startsWith('$$') && latex.endsWith('$$')) {\n                    latex = latex.slice(2, -2);\n                    displayMode = true;\n                  } else if (latex.startsWith('$') && latex.endsWith('$')) {\n                    latex = latex.slice(1, -1);\n                    displayMode = false;\n                  } else if (latex.startsWith('\\\\[') && latex.endsWith('\\\\]')) {\n                    latex = latex.slice(2, -2);\n                    displayMode = true;\n                  } else if (latex.startsWith('\\\\(') && latex.endsWith('\\\\)')) {\n                    latex = latex.slice(2, -2);\n                    displayMode = false;\n                  }\n                  return /*#__PURE__*/_jsxDEV(LatexFormatter, {\n                    content: latex.trim(),\n                    displayMode: displayMode\n                  }, j, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 28\n                  }, this);\n                } else {\n                  return /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: sub\n                  }, j, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 28\n                  }, this);\n                }\n              });\n            } else {\n              return part;\n            }\n          })\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this);\n      }\n    });\n  };\n  const sendMessage = async () => {\n    if (!inputText.trim()) return;\n    setIsLoading(true);\n    setMessages(prev => [...prev, {\n      type: 'user',\n      text: inputText\n    }]);\n    setInputText('');\n    try {\n      const response = await fetch('http://localhost:5000/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: inputText,\n          history: messages.map(m => ({\n            role: m.type === 'user' ? 'user' : 'assistant',\n            content: m.text\n          }))\n        })\n      });\n      const data = await response.json();\n      setMessages(prev => [...prev, {\n        type: 'bot',\n        text: data.response\n      }]);\n    } catch (error) {\n      setMessages(prev => [...prev, {\n        type: 'error',\n        text: 'Sorry, I encountered an error. Please try again.'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"app-container\",\n    className: \"chat-active\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"greeting-area\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"greeting-text\",\n          children: \"How can Theta help you today?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"user-input\",\n          placeholder: \"How can I help you today?\",\n          value: inputText,\n          onChange: e => setInputText(e.target.value),\n          onKeyDown: e => {\n            if (e.key === 'Enter' && !e.shiftKey) {\n              e.preventDefault();\n              sendMessage();\n            }\n          },\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"input-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left-controls\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"theta-voice-button\",\n              className: \"control-button\",\n              onClick: () => setVoiceEnabled(v => !v),\n              style: {\n                background: voiceEnabled ? '#007bff' : undefined,\n                color: voiceEnabled ? '#fff' : undefined\n              },\n              children: \"Theta Voice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"send-button\",\n              \"aria-label\": \"Send message\",\n              onClick: sendMessage,\n              disabled: isLoading,\n              children: \"\\u2191\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat-box\",\n      ref: chatBoxRef,\n      style: {\n        display: 'flex',\n        flexDirection: 'column',\n        overflowY: 'auto',\n        maxHeight: '350px',\n        minHeight: '200px',\n        background: 'transparent',\n        marginTop: '10px'\n      },\n      children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.type === 'user' ? 'message user-message' : msg.type === 'bot' ? 'message bot-message' : 'message error-message',\n        children: renderWithLatexAndMarkdown(msg.text)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message bot-message\",\n        children: \"Thinking...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBot, \"sAgjZsSkTaxSVD6f9YLG3CpdmRo=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","LatexFormatter","jsxDEV","_jsxDEV","ChatBot","_s","messages","setMessages","inputText","setInputText","isLoading","setIsLoading","voiceEnabled","setVoiceEnabled","chatBoxRef","current","scrollTop","scrollHeight","renderWithLatexAndMarkdown","text","lines","split","map","line","idx","test","style","marginTop","children","replace","fileName","_jsxFileName","lineNumber","columnNumber","trim","boldRegex","boldParts","lastIndex","match","key","exec","index","push","slice","length","display","part","i","regex","latexParts","sub","j","latex","displayMode","startsWith","endsWith","content","sendMessage","prev","type","response","fetch","method","headers","body","JSON","stringify","message","history","m","role","data","json","error","id","className","placeholder","value","onChange","e","target","onKeyDown","shiftKey","preventDefault","disabled","onClick","v","background","undefined","color","ref","flexDirection","overflowY","maxHeight","minHeight","msg","_c","$RefreshReg$"],"sources":["D:/dadas/he true randomizer/theta/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './tutorBotStyle.css';\nimport LatexFormatter from './LatexFormatter';\n\nfunction ChatBot() {\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [voiceEnabled, setVoiceEnabled] = useState(false);\n  const chatBoxRef = useRef(null);\n\n  // Scroll to bottom on new message\n  useEffect(() => {\n    if (chatBoxRef.current) {\n      chatBoxRef.current.scrollTop = chatBoxRef.current.scrollHeight;\n    }\n  }, [messages]);\n\n  // Render markdown, LaTeX, and bold\n  const renderWithLatexAndMarkdown = (text) => {\n    if (!text) return null;\n    const lines = text.split(/\\n|\\r\\n?/);\n    return lines.map((line, idx) => {\n      if (/^###\\s+/.test(line)) {\n        return <h3 key={idx} style={{marginTop: '1em'}}>{line.replace(/^###\\s+/, '')}</h3>;\n      } else if (/^##\\s+/.test(line)) {\n        return <h2 key={idx} style={{marginTop: '1em'}}>{line.replace(/^##\\s+/, '')}</h2>;\n      } else if (/^#\\s+/.test(line)) {\n        return <h1 key={idx} style={{marginTop: '1em'}}>{line.replace(/^#\\s+/, '')}</h1>;\n      } else if (line.trim() === '') {\n        return <br key={idx} />;\n      } else {\n        // Bold (**...**)\n        const boldRegex = /\\*\\*([^*]+)\\*\\*/g;\n        const boldParts = [];\n        let lastIndex = 0;\n        let match;\n        let key = 0;\n        while ((match = boldRegex.exec(line)) !== null) {\n          if (match.index > lastIndex) {\n            boldParts.push(line.slice(lastIndex, match.index));\n          }\n          boldParts.push(<strong key={key++}>{match[1]}</strong>);\n          lastIndex = match.index + match[0].length;\n        }\n        if (lastIndex < line.length) {\n          boldParts.push(line.slice(lastIndex));\n        }\n        // LaTeX\n        return (\n          <span key={idx} style={{display: 'block', marginTop: '0.25em'}}>\n            {boldParts.map((part, i) => {\n              if (typeof part === 'string') {\n                const regex = /(\\$\\$[\\s\\S]+?\\$\\$|\\$[^$]+\\$|\\\\\\[[\\s\\S]+?\\\\\\]|\\\\\\([\\s\\S]+?\\\\\\))/g;\n                const latexParts = part.split(regex);\n                return latexParts.map((sub, j) => {\n                  if (sub.match(regex)) {\n                    let latex = sub;\n                    let displayMode = true;\n                    if (latex.startsWith('$$') && latex.endsWith('$$')) {\n                      latex = latex.slice(2, -2);\n                      displayMode = true;\n                    } else if (latex.startsWith('$') && latex.endsWith('$')) {\n                      latex = latex.slice(1, -1);\n                      displayMode = false;\n                    } else if (latex.startsWith('\\\\[') && latex.endsWith('\\\\]')) {\n                      latex = latex.slice(2, -2);\n                      displayMode = true;\n                    } else if (latex.startsWith('\\\\(') && latex.endsWith('\\\\)')) {\n                      latex = latex.slice(2, -2);\n                      displayMode = false;\n                    }\n                    return <LatexFormatter key={j} content={latex.trim()} displayMode={displayMode} />;\n                  } else {\n                    return <span key={j}>{sub}</span>;\n                  }\n                });\n              } else {\n                return part;\n              }\n            })}\n          </span>\n        );\n      }\n    });\n  };\n\n  const sendMessage = async () => {\n    if (!inputText.trim()) return;\n    setIsLoading(true);\n    setMessages(prev => [...prev, { type: 'user', text: inputText }]);\n    setInputText('');\n    try {\n      const response = await fetch('http://localhost:5000/chat', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ message: inputText, history: messages.map(m => ({ role: m.type === 'user' ? 'user' : 'assistant', content: m.text })) })\n      });\n      const data = await response.json();\n      setMessages(prev => [...prev, { type: 'bot', text: data.response }]);\n    } catch (error) {\n      setMessages(prev => [...prev, { type: 'error', text: 'Sorry, I encountered an error. Please try again.' }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div id=\"app-container\" className=\"chat-active\">\n      <div id=\"main-content\">\n        <div className=\"greeting-area\">\n          <h1 className=\"greeting-text\">How can Theta help you today?</h1>\n        </div>\n        <div id=\"input-container\">\n          <textarea\n            id=\"user-input\"\n            placeholder=\"How can I help you today?\"\n            value={inputText}\n            onChange={e => setInputText(e.target.value)}\n            onKeyDown={e => { if (e.key === 'Enter' && !e.shiftKey) { e.preventDefault(); sendMessage(); } }}\n            disabled={isLoading}\n          />\n          <div id=\"input-controls\">\n            <div className=\"left-controls\"></div>\n            <div className=\"right-controls\">\n              <button id=\"theta-voice-button\" className=\"control-button\" onClick={() => setVoiceEnabled(v => !v)} style={{ background: voiceEnabled ? '#007bff' : undefined, color: voiceEnabled ? '#fff' : undefined }}>Theta Voice</button>\n              <button id=\"send-button\" aria-label=\"Send message\" onClick={sendMessage} disabled={isLoading}>↑</button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div id=\"chat-box\" ref={chatBoxRef} style={{ display: 'flex', flexDirection: 'column', overflowY: 'auto', maxHeight: '350px', minHeight: '200px', background: 'transparent', marginTop: '10px' }}>\n        {messages.map((msg, idx) => (\n          <div key={idx} className={msg.type === 'user' ? 'message user-message' : msg.type === 'bot' ? 'message bot-message' : 'message error-message'}>\n            {renderWithLatexAndMarkdown(msg.text)}\n          </div>\n        ))}\n        {isLoading && (\n          <div className=\"message bot-message\">Thinking...</div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default ChatBot; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}