{"ast":null,"code":"var _jsxFileName = \"D:\\\\dadas\\\\he true randomizer\\\\theta\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './TutorBotStyle.css';\nimport logo from './assets/logo.png';\nimport LatexFormatter from './LatexFormatter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatBot() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [voiceEnabled, setVoiceEnabled] = useState(false);\n  const chatBoxRef = useRef(null);\n  const recognitionRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const userAnalyserRef = useRef(null);\n  const aiAnalyserRef = useRef(null);\n  useEffect(() => {\n    // Initialize speech recognition\n    const SpeechRecognitionAPI = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (SpeechRecognitionAPI) {\n      recognitionRef.current = new SpeechRecognitionAPI();\n      recognitionRef.current.continuous = false;\n      recognitionRef.current.interimResults = false;\n      recognitionRef.current.lang = 'en-US';\n      recognitionRef.current.onresult = event => {\n        const text = event.results[0][0].transcript;\n        setInputText(text);\n        sendMessage(text);\n      };\n      recognitionRef.current.onend = () => {\n        setIsListening(false);\n      };\n    }\n\n    // Initialize audio context\n    try {\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      userAnalyserRef.current = audioContextRef.current.createAnalyser();\n      userAnalyserRef.current.fftSize = 256;\n      userAnalyserRef.current.smoothingTimeConstant = 0.8;\n      aiAnalyserRef.current = audioContextRef.current.createAnalyser();\n      aiAnalyserRef.current.fftSize = 256;\n      aiAnalyserRef.current.smoothingTimeConstant = 0.8;\n    } catch (e) {\n      console.error(\"Error initializing audio context:\", e);\n    }\n\n    // Scroll to bottom on new message\n    if (chatBoxRef.current) {\n      chatBoxRef.current.scrollTop = chatBoxRef.current.scrollHeight;\n    }\n    return () => {\n      if (recognitionRef.current) {\n        recognitionRef.current.stop();\n      }\n    };\n  }, []);\n  const sendMessage = async (text = null) => {\n    const messageToSend = text || inputText;\n    if (!messageToSend.trim()) return;\n    setIsLoading(true);\n\n    // Add user message\n    const userMessage = {\n      type: 'user',\n      text: messageToSend\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputText('');\n    try {\n      // Prepare conversation history\n      const history = messages.map(msg => ({\n        role: msg.type === 'user' ? 'user' : 'assistant',\n        content: msg.text\n      }));\n      const response = await fetch('http://localhost:5000/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: messageToSend,\n          history\n        })\n      });\n      if (!response.ok) throw new Error('Network response was not ok');\n      const data = await response.json();\n\n      // Add bot message\n      const botMessage = {\n        type: 'bot',\n        text: data.response\n      };\n      setMessages(prev => [...prev, botMessage]);\n\n      // Only speak the response if voiceEnabled is true\n      if (voiceEnabled) {\n        speakText(data.response);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prev => [...prev, {\n        type: 'error',\n        text: 'Sorry, I encountered an error. Please try again.'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const speakText = async text => {\n    try {\n      const response = await fetch('http://localhost:5000/tts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text\n        })\n      });\n      if (!response.ok) throw new Error('TTS request failed');\n      const audioBlob = await response.blob();\n      const audioUrl = URL.createObjectURL(audioBlob);\n      const audio = new Audio(audioUrl);\n      audio.onplay = () => {\n        if (aiAnalyserRef.current) {\n          animateBubble(chatBoxRef.current.lastChild, aiAnalyserRef.current, false);\n        }\n      };\n      audio.onended = () => {\n        if (aiAnalyserRef.current) {\n          stopBubbleAnimation(chatBoxRef.current.lastChild);\n        }\n        URL.revokeObjectURL(audioUrl);\n      };\n      audio.play();\n    } catch (error) {\n      console.error('TTS error:', error);\n    }\n  };\n  const animateBubble = (element, analyser, isUser) => {\n    if (!element || !analyser) return null;\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    function animate() {\n      analyser.getByteFrequencyData(dataArray);\n      let sum = 0;\n      for (let i = 0; i < bufferLength; i++) {\n        sum += dataArray[i];\n      }\n      const volume = sum / bufferLength;\n      const scale = 1 + volume / 128 * 0.5;\n      element.style.transform = `scale(${scale})`;\n      requestAnimationFrame(animate);\n    }\n    return requestAnimationFrame(animate);\n  };\n  const stopBubbleAnimation = element => {\n    if (element) {\n      element.style.transform = 'scale(1)';\n    }\n  };\n\n  // Helper to render markdown, bold, and LaTeX (reuse your previous renderWithLatexAndMarkdown)\n  const renderWithLatexAndMarkdown = text => {\n    if (!text) return null;\n    const lines = text.split(/\\n|\\r\\n?/);\n    return lines.map((line, idx) => {\n      if (/^###\\s+/.test(line)) {\n        return /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"tutorbot-heading\",\n          children: line.replace(/^###\\s+/, '')\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 16\n        }, this);\n      } else if (/^##\\s+/.test(line)) {\n        return /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"tutorbot-heading\",\n          children: line.replace(/^##\\s+/, '')\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 16\n        }, this);\n      } else if (/^#\\s+/.test(line)) {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"tutorbot-heading\",\n          children: line.replace(/^#\\s+/, '')\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 16\n        }, this);\n      } else if (line.trim() === '') {\n        return /*#__PURE__*/_jsxDEV(\"br\", {}, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 16\n        }, this);\n      } else {\n        // Bold\n        const boldRegex = /\\*\\*([^*]+)\\*\\*/g;\n        const boldParts = [];\n        let lastIndex = 0;\n        let match;\n        let key = 0;\n        while ((match = boldRegex.exec(line)) !== null) {\n          if (match.index > lastIndex) {\n            boldParts.push(line.slice(lastIndex, match.index));\n          }\n          boldParts.push(/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: match[1]\n          }, key++, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 26\n          }, this));\n          lastIndex = match.index + match[0].length;\n        }\n        if (lastIndex < line.length) {\n          boldParts.push(line.slice(lastIndex));\n        }\n        // LaTeX\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"tutorbot-line\",\n          children: boldParts.map((part, i) => {\n            if (typeof part === 'string') {\n              const regex = /(\\$\\$[\\s\\S]+?\\$\\$|\\$[^$]+\\$|\\\\\\[[\\s\\S]+?\\\\\\]|\\\\\\([\\s\\S]+?\\\\\\))/g;\n              const latexParts = part.split(regex);\n              return latexParts.map((sub, j) => {\n                if (sub.match(regex)) {\n                  let latex = sub;\n                  let displayMode = true;\n                  if (latex.startsWith('$$') && latex.endsWith('$$')) {\n                    latex = latex.slice(2, -2);\n                    displayMode = true;\n                  } else if (latex.startsWith('$') && latex.endsWith('$')) {\n                    latex = latex.slice(1, -1);\n                    displayMode = false;\n                  } else if (latex.startsWith('\\\\[') && latex.endsWith('\\\\]')) {\n                    latex = latex.slice(2, -2);\n                    displayMode = true;\n                  } else if (latex.startsWith('\\\\(') && latex.endsWith('\\\\)')) {\n                    latex = latex.slice(2, -2);\n                    displayMode = false;\n                  }\n                  return /*#__PURE__*/_jsxDEV(LatexFormatter, {\n                    content: latex.trim(),\n                    displayMode: displayMode\n                  }, j, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 28\n                  }, this);\n                } else {\n                  return /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: sub\n                  }, j, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 28\n                  }, this);\n                }\n              });\n            } else {\n              return part;\n            }\n          })\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"app-container\",\n    className: \"chat-active\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"greeting-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"greeting-asterisk\",\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"greeting-text\",\n          children: \"How can Theta help you today?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"user-input\",\n          value: inputText,\n          onChange: e => setInputText(e.target.value),\n          placeholder: \"How can I help you today?\",\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"input-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left-controls\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"right-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"theta-voice-button\",\n              className: \"control-button\",\n              onClick: () => setVoiceEnabled(v => !v),\n              children: voiceEnabled ? 'Voice On' : 'Theta Voice'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"send-button\",\n              \"aria-label\": \"Send message\",\n              onClick: () => sendMessage(),\n              disabled: isLoading,\n              children: \"\\u2191\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat-box\",\n      ref: chatBoxRef,\n      children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.type === 'user' ? 'message user-message' : 'message bot-message',\n        children: renderWithLatexAndMarkdown(msg.text)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message bot-message\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Thinking...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBot, \"2Ixroq0p06fUT0je/XxNALXNXJY=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","logo","LatexFormatter","jsxDEV","_jsxDEV","ChatBot","_s","messages","setMessages","inputText","setInputText","isListening","setIsListening","isLoading","setIsLoading","voiceEnabled","setVoiceEnabled","chatBoxRef","recognitionRef","audioContextRef","userAnalyserRef","aiAnalyserRef","SpeechRecognitionAPI","window","SpeechRecognition","webkitSpeechRecognition","current","continuous","interimResults","lang","onresult","event","text","results","transcript","sendMessage","onend","AudioContext","webkitAudioContext","createAnalyser","fftSize","smoothingTimeConstant","e","console","error","scrollTop","scrollHeight","stop","messageToSend","trim","userMessage","type","prev","history","map","msg","role","content","response","fetch","method","headers","body","JSON","stringify","message","ok","Error","data","json","botMessage","speakText","audioBlob","blob","audioUrl","URL","createObjectURL","audio","Audio","onplay","animateBubble","lastChild","onended","stopBubbleAnimation","revokeObjectURL","play","element","analyser","isUser","bufferLength","frequencyBinCount","dataArray","Uint8Array","animate","getByteFrequencyData","sum","i","volume","scale","style","transform","requestAnimationFrame","renderWithLatexAndMarkdown","lines","split","line","idx","test","className","children","replace","fileName","_jsxFileName","lineNumber","columnNumber","boldRegex","boldParts","lastIndex","match","key","exec","index","push","slice","length","part","regex","latexParts","sub","j","latex","displayMode","startsWith","endsWith","id","value","onChange","target","placeholder","disabled","onClick","v","ref","_c","$RefreshReg$"],"sources":["D:/dadas/he true randomizer/theta/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './TutorBotStyle.css';\nimport logo from './assets/logo.png';\nimport LatexFormatter from './LatexFormatter';\n\nfunction ChatBot() {\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [voiceEnabled, setVoiceEnabled] = useState(false);\n  const chatBoxRef = useRef(null);\n  const recognitionRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const userAnalyserRef = useRef(null);\n  const aiAnalyserRef = useRef(null);\n\n  useEffect(() => {\n    // Initialize speech recognition\n    const SpeechRecognitionAPI = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (SpeechRecognitionAPI) {\n      recognitionRef.current = new SpeechRecognitionAPI();\n      recognitionRef.current.continuous = false;\n      recognitionRef.current.interimResults = false;\n      recognitionRef.current.lang = 'en-US';\n\n      recognitionRef.current.onresult = (event) => {\n        const text = event.results[0][0].transcript;\n        setInputText(text);\n        sendMessage(text);\n      };\n\n      recognitionRef.current.onend = () => {\n        setIsListening(false);\n      };\n    }\n\n    // Initialize audio context\n    try {\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      userAnalyserRef.current = audioContextRef.current.createAnalyser();\n      userAnalyserRef.current.fftSize = 256;\n      userAnalyserRef.current.smoothingTimeConstant = 0.8;\n\n      aiAnalyserRef.current = audioContextRef.current.createAnalyser();\n      aiAnalyserRef.current.fftSize = 256;\n      aiAnalyserRef.current.smoothingTimeConstant = 0.8;\n    } catch (e) {\n      console.error(\"Error initializing audio context:\", e);\n    }\n\n    // Scroll to bottom on new message\n    if (chatBoxRef.current) {\n      chatBoxRef.current.scrollTop = chatBoxRef.current.scrollHeight;\n    }\n\n    return () => {\n      if (recognitionRef.current) {\n        recognitionRef.current.stop();\n      }\n    };\n  }, []);\n\n  const sendMessage = async (text = null) => {\n    const messageToSend = text || inputText;\n    if (!messageToSend.trim()) return;\n\n    setIsLoading(true);\n\n    // Add user message\n    const userMessage = { type: 'user', text: messageToSend };\n    setMessages(prev => [...prev, userMessage]);\n    setInputText('');\n\n    try {\n      // Prepare conversation history\n      const history = messages.map(msg => ({\n        role: msg.type === 'user' ? 'user' : 'assistant',\n        content: msg.text\n      }));\n\n      const response = await fetch('http://localhost:5000/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ \n          message: messageToSend,\n          history\n        }),\n      });\n\n      if (!response.ok) throw new Error('Network response was not ok');\n\n      const data = await response.json();\n      \n      // Add bot message\n      const botMessage = { type: 'bot', text: data.response };\n      setMessages(prev => [...prev, botMessage]);\n\n      // Only speak the response if voiceEnabled is true\n      if (voiceEnabled) {\n        speakText(data.response);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prev => [...prev, { type: 'error', text: 'Sorry, I encountered an error. Please try again.' }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const speakText = async (text) => {\n    try {\n      const response = await fetch('http://localhost:5000/tts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ text }),\n      });\n\n      if (!response.ok) throw new Error('TTS request failed');\n\n      const audioBlob = await response.blob();\n      const audioUrl = URL.createObjectURL(audioBlob);\n      const audio = new Audio(audioUrl);\n\n      audio.onplay = () => {\n        if (aiAnalyserRef.current) {\n          animateBubble(chatBoxRef.current.lastChild, aiAnalyserRef.current, false);\n        }\n      };\n\n      audio.onended = () => {\n        if (aiAnalyserRef.current) {\n          stopBubbleAnimation(chatBoxRef.current.lastChild);\n        }\n        URL.revokeObjectURL(audioUrl);\n      };\n\n      audio.play();\n    } catch (error) {\n      console.error('TTS error:', error);\n    }\n  };\n\n  const animateBubble = (element, analyser, isUser) => {\n    if (!element || !analyser) return null;\n    \n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    \n    function animate() {\n      analyser.getByteFrequencyData(dataArray);\n      let sum = 0;\n      for (let i = 0; i < bufferLength; i++) {\n        sum += dataArray[i];\n      }\n      const volume = sum / bufferLength;\n      const scale = 1 + (volume / 128) * 0.5;\n      element.style.transform = `scale(${scale})`;\n      requestAnimationFrame(animate);\n    }\n    \n    return requestAnimationFrame(animate);\n  };\n\n  const stopBubbleAnimation = (element) => {\n    if (element) {\n      element.style.transform = 'scale(1)';\n    }\n  };\n\n  // Helper to render markdown, bold, and LaTeX (reuse your previous renderWithLatexAndMarkdown)\n  const renderWithLatexAndMarkdown = (text) => {\n    if (!text) return null;\n    const lines = text.split(/\\n|\\r\\n?/);\n    return lines.map((line, idx) => {\n      if (/^###\\s+/.test(line)) {\n        return <h3 key={idx} className=\"tutorbot-heading\">{line.replace(/^###\\s+/, '')}</h3>;\n      } else if (/^##\\s+/.test(line)) {\n        return <h2 key={idx} className=\"tutorbot-heading\">{line.replace(/^##\\s+/, '')}</h2>;\n      } else if (/^#\\s+/.test(line)) {\n        return <h1 key={idx} className=\"tutorbot-heading\">{line.replace(/^#\\s+/, '')}</h1>;\n      } else if (line.trim() === '') {\n        return <br key={idx} />;\n      } else {\n        // Bold\n        const boldRegex = /\\*\\*([^*]+)\\*\\*/g;\n        const boldParts = [];\n        let lastIndex = 0;\n        let match;\n        let key = 0;\n        while ((match = boldRegex.exec(line)) !== null) {\n          if (match.index > lastIndex) {\n            boldParts.push(line.slice(lastIndex, match.index));\n          }\n          boldParts.push(<strong key={key++}>{match[1]}</strong>);\n          lastIndex = match.index + match[0].length;\n        }\n        if (lastIndex < line.length) {\n          boldParts.push(line.slice(lastIndex));\n        }\n        // LaTeX\n        return (\n          <span key={idx} className=\"tutorbot-line\">\n            {boldParts.map((part, i) => {\n              if (typeof part === 'string') {\n                const regex = /(\\$\\$[\\s\\S]+?\\$\\$|\\$[^$]+\\$|\\\\\\[[\\s\\S]+?\\\\\\]|\\\\\\([\\s\\S]+?\\\\\\))/g;\n                const latexParts = part.split(regex);\n                return latexParts.map((sub, j) => {\n                  if (sub.match(regex)) {\n                    let latex = sub;\n                    let displayMode = true;\n                    if (latex.startsWith('$$') && latex.endsWith('$$')) {\n                      latex = latex.slice(2, -2);\n                      displayMode = true;\n                    } else if (latex.startsWith('$') && latex.endsWith('$')) {\n                      latex = latex.slice(1, -1);\n                      displayMode = false;\n                    } else if (latex.startsWith('\\\\[') && latex.endsWith('\\\\]')) {\n                      latex = latex.slice(2, -2);\n                      displayMode = true;\n                    } else if (latex.startsWith('\\\\(') && latex.endsWith('\\\\)')) {\n                      latex = latex.slice(2, -2);\n                      displayMode = false;\n                    }\n                    return <LatexFormatter key={j} content={latex.trim()} displayMode={displayMode} />;\n                  } else {\n                    return <span key={j}>{sub}</span>;\n                  }\n                });\n              } else {\n                return part;\n              }\n            })}\n          </span>\n        );\n      }\n    });\n  };\n\n  return (\n    <div id=\"app-container\" className=\"chat-active\">\n      <div id=\"main-content\">\n        <div className=\"greeting-area\">\n          <span className=\"greeting-asterisk\">*</span>\n          <h1 className=\"greeting-text\">How can Theta help you today?</h1>\n        </div>\n        <div id=\"input-container\">\n          <textarea\n            id=\"user-input\"\n            value={inputText}\n            onChange={e => setInputText(e.target.value)}\n            placeholder=\"How can I help you today?\"\n            disabled={isLoading}\n          />\n          <div id=\"input-controls\">\n            <div className=\"left-controls\"></div>\n            <div className=\"right-controls\">\n              <button id=\"theta-voice-button\" className=\"control-button\" onClick={() => setVoiceEnabled(v => !v)}>{voiceEnabled ? 'Voice On' : 'Theta Voice'}</button>\n              <button id=\"send-button\" aria-label=\"Send message\" onClick={() => sendMessage()} disabled={isLoading}>↑</button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div id=\"chat-box\" ref={chatBoxRef}>\n        {messages.map((msg, idx) => (\n          <div key={idx} className={msg.type === 'user' ? 'message user-message' : 'message bot-message'}>\n            {renderWithLatexAndMarkdown(msg.text)}\n          </div>\n        ))}\n        {isLoading && (\n          <div className=\"message bot-message\">\n            <span>Thinking...</span>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default ChatBot; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}