{"ast":null,"code":"var _jsxFileName = \"D:\\\\dadas\\\\he true randomizer\\\\theta\\\\src\\\\components\\\\TeacherDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BackButton from './BackButton';\nimport infuraStorage from '../services/MetaMaskStorage';\nimport wasabiStorage from '../services/WasabiStorage';\nimport { doc, updateDoc, arrayRemove, collection, query, where, getDocs, writeBatch } from 'firebase/firestore';\nimport { toast } from 'react-hot-toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TeacherDashboard() {\n  _s();\n  const [classes, setClasses] = useState([]);\n  const [showCreateClass, setShowCreateClass] = useState(false);\n  const [newClassName, setNewClassName] = useState('');\n  const [selectedClass, setSelectedClass] = useState(null);\n  const [pendingStudents, setPendingStudents] = useState([]);\n  const [activeTab, setActiveTab] = useState('classes');\n  const [recordings, setRecordings] = useState([]);\n  const [teacherData, setTeacherData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [error, setError] = useState('');\n  const [isRecording, setIsRecording] = useState(false);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const mediaRecorderRef = useRef(null);\n  const timeIntervalRef = useRef(null);\n  const chunksRef = useRef([]);\n  const navigate = useNavigate();\n\n  // Memoize the connectAndLoadTeacherData function to prevent infinite loop\n  const connectAndLoadTeacherData = React.useCallback(async teacherEmail => {\n    try {\n      setIsConnecting(true);\n      setError('');\n\n      // Connect to Infura\n      const connectResult = await infuraStorage.connect();\n      if (!connectResult.success) {\n        setError(`Infura connection error: ${connectResult.error}`);\n        setLoading(false);\n        return;\n      }\n      await loadTeacherData(teacherEmail);\n      await loadRecordings(teacherEmail);\n      setLoading(false); // Set loading to false after all data is loaded\n    } catch (error) {\n      setError(`Error connecting to Infura: ${error.message}`);\n      console.error('Connection error:', error);\n      setLoading(false);\n    } finally {\n      setIsConnecting(false);\n    }\n  }, []);\n  const loadRecordings = async teacherEmail => {\n    try {\n      if (!selectedClass) {\n        return;\n      }\n      const recordingsData = await wasabiStorage.listObjects(wasabiStorage.getRecordingsPath(teacherEmail, selectedClass.code));\n      const loadedRecordings = [];\n      for (const recording of recordingsData) {\n        if (recording.Key.endsWith('.json')) {\n          const recordingData = await wasabiStorage.getData(recording.Key);\n          if (recordingData) {\n            loadedRecordings.push(recordingData);\n          }\n        }\n      }\n      setRecordings(loadedRecordings);\n    } catch (error) {\n      console.error('Error loading recordings:', error);\n      setError('Failed to load recordings');\n    }\n  };\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      chunksRef.current = [];\n      mediaRecorder.ondataavailable = e => {\n        if (e.data.size > 0) {\n          chunksRef.current.push(e.data);\n        }\n      };\n      mediaRecorder.onstop = async () => {\n        const blob = new Blob(chunksRef.current, {\n          type: 'audio/webm'\n        });\n        const url = URL.createObjectURL(blob);\n        const timestamp = new Date().toISOString();\n        const newRecording = {\n          id: Date.now(),\n          url,\n          timestamp,\n          duration: recordingTime,\n          localPath: `recording_${timestamp}.webm`\n        };\n\n        // Update recordings state\n        const updatedRecordings = [...recordings, newRecording];\n        setRecordings(updatedRecordings);\n\n        // Update selected class recordings\n        if (selectedClass) {\n          const updatedClass = {\n            ...selectedClass,\n            recordings: [...selectedClass.recordings, newRecording]\n          };\n          setSelectedClass(updatedClass);\n\n          // Update classes state\n          const updatedClasses = classes.map(c => c.id === selectedClass.id ? updatedClass : c);\n          setClasses(updatedClasses);\n\n          // Save to Infura\n          const teacherEmail = sessionStorage.getItem('userEmail');\n          await infuraStorage.saveData(`classes_${teacherEmail}`, updatedClasses);\n        }\n\n        // Save recording data\n        await infuraStorage.saveData(`recordings_${sessionStorage.getItem('userEmail')}`, updatedRecordings);\n\n        // Save to local storage\n        const reader = new FileReader();\n        reader.readAsDataURL(blob);\n        reader.onloadend = () => {\n          localStorage.setItem(`recording_${timestamp}`, reader.result);\n        };\n        stream.getTracks().forEach(track => track.stop());\n      };\n      mediaRecorder.start();\n      setIsRecording(true);\n      setRecordingTime(0);\n      timeIntervalRef.current = setInterval(() => {\n        setRecordingTime(prev => prev + 1);\n      }, 1000);\n    } catch (error) {\n      console.error('Error starting recording:', error);\n      setError('Failed to start recording. Please check your microphone permissions.');\n    }\n  };\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      clearInterval(timeIntervalRef.current);\n      setIsRecording(false);\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n  useEffect(() => {\n    document.body.classList.add('dashboard-page');\n    const teacherEmail = sessionStorage.getItem('userEmail');\n    connectAndLoadTeacherData(teacherEmail);\n    return () => {\n      document.body.classList.remove('dashboard-page');\n      if (timeIntervalRef.current) {\n        clearInterval(timeIntervalRef.current);\n      }\n      if (mediaRecorderRef.current && isRecording) {\n        mediaRecorderRef.current.stop();\n      }\n    };\n  }, [connectAndLoadTeacherData, isRecording]);\n  const loadTeacherData = async teacherEmail => {\n    try {\n      // Get teacher data\n      const teacherData = await wasabiStorage.getData(wasabiStorage.getTeacherPath(teacherEmail));\n      if (!teacherData) {\n        setError('Teacher data not found');\n        return;\n      }\n      setTeacherData(teacherData);\n\n      // List all classes\n      const classesData = await wasabiStorage.listObjects(wasabiStorage.getTeacherClassesPath(teacherEmail));\n      const loadedClasses = [];\n      for (const classObj of classesData) {\n        if (classObj.Key.endsWith('info.json')) {\n          const classData = await wasabiStorage.getData(classObj.Key);\n          if (classData) {\n            // Load join requests for this class\n            const classCode = classData.code;\n            const joinRequestsPath = `Skyline/teachers/${teacherEmail}/classes/${classCode}/join-requests/`;\n            console.log('Checking join requests at:', joinRequestsPath);\n            const joinRequests = await wasabiStorage.listObjects(joinRequestsPath);\n            console.log('Found join requests:', joinRequests);\n            const pendingStudents = [];\n            for (const request of joinRequests) {\n              if (request.Key.endsWith('.json')) {\n                const requestData = await wasabiStorage.getData(request.Key);\n                if (requestData && requestData.status === 'pending') {\n                  pendingStudents.push(requestData);\n                }\n              }\n            }\n            classData.pendingStudents = pendingStudents;\n            loadedClasses.push(classData);\n          }\n        }\n      }\n      console.log('Loaded classes with pending students:', loadedClasses);\n      setClasses(loadedClasses);\n    } catch (error) {\n      console.error('Error loading teacher data:', error);\n      setError('Failed to load teacher data');\n    }\n  };\n  const createClass = async () => {\n    if (!newClassName.trim()) {\n      setError('Please enter a class name');\n      return;\n    }\n    try {\n      const teacherEmail = sessionStorage.getItem('userEmail');\n\n      // Generate a unique 6-character class code\n      const generateClassCode = () => {\n        const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n        let code = '';\n        for (let i = 0; i < 6; i++) {\n          code += chars.charAt(Math.floor(Math.random() * chars.length));\n        }\n        return code;\n      };\n      const classCode = generateClassCode();\n\n      // Create class folder structure\n      const classPath = wasabiStorage.getClassPath(teacherEmail, classCode);\n      const recordingsPath = wasabiStorage.getRecordingsPath(teacherEmail, classCode);\n      const summariesPath = wasabiStorage.getSummariesPath(teacherEmail, classCode);\n\n      // Create the folders\n      await Promise.all([wasabiStorage.s3.putObject({\n        Bucket: wasabiStorage.bucket,\n        Key: recordingsPath,\n        Body: '',\n        ContentType: 'application/x-directory'\n      }).promise(), wasabiStorage.s3.putObject({\n        Bucket: wasabiStorage.bucket,\n        Key: summariesPath,\n        Body: '',\n        ContentType: 'application/x-directory'\n      }).promise()]);\n\n      // Create class data\n      const classData = {\n        name: newClassName.trim(),\n        code: classCode,\n        teacherEmail,\n        students: [],\n        pendingStudents: [],\n        createdAt: new Date().toISOString()\n      };\n\n      // Save class info\n      await wasabiStorage.saveData(classPath, classData);\n\n      // Update UI\n      setClasses([...classes, classData]);\n      setNewClassName('');\n      setShowCreateClass(false);\n\n      // Show success message with class code\n      alert(`Class created successfully! Class code: ${classCode}`);\n    } catch (error) {\n      console.error('Error creating class:', error);\n      setError('Failed to create class');\n    }\n  };\n  const approveStudent = async studentEmail => {\n    try {\n      if (!selectedClass) {\n        throw new Error('No class selected');\n      }\n      const teacherEmail = sessionStorage.getItem('userEmail');\n      const requestPath = wasabiStorage.getClassJoinRequestPath(teacherEmail, selectedClass.code, studentEmail);\n      const joinRequest = await wasabiStorage.getData(requestPath);\n      if (!joinRequest) {\n        throw new Error('Join request not found');\n      }\n\n      // Update join request status\n      const updatedRequest = {\n        ...joinRequest,\n        status: 'approved'\n      };\n      await wasabiStorage.saveData(requestPath, updatedRequest);\n\n      // Update student's classes in their data\n      const studentData = await wasabiStorage.getData(wasabiStorage.getStudentPath(studentEmail));\n      if (studentData) {\n        const updatedStudentData = {\n          ...studentData,\n          classes: [...(studentData.classes || []), {\n            code: selectedClass.code,\n            teacherEmail: teacherEmail,\n            joinedAt: new Date().toISOString()\n          }]\n        };\n        await wasabiStorage.saveData(wasabiStorage.getStudentPath(studentEmail), updatedStudentData);\n      }\n\n      // Update class data to add student to enrolled students\n      const classPath = wasabiStorage.getClassPath(teacherEmail, selectedClass.code);\n      const updatedClassData = {\n        ...selectedClass,\n        students: [...(selectedClass.students || []), {\n          email: studentEmail,\n          name: joinRequest.studentName,\n          joinedAt: new Date().toISOString()\n        }]\n      };\n      await wasabiStorage.saveData(classPath, updatedClassData);\n\n      // Update local state immediately\n      setSelectedClass(updatedClassData);\n      setClasses(classes.map(c => c.code === selectedClass.code ? updatedClassData : c));\n\n      // Reload teacher data to refresh everything\n      await loadTeacherData(teacherEmail);\n    } catch (error) {\n      console.error('Error approving student:', error);\n      setError('Failed to approve student');\n    }\n  };\n  const denyStudent = async studentEmail => {\n    try {\n      if (!selectedClass) {\n        throw new Error('No class selected');\n      }\n      const teacherEmail = sessionStorage.getItem('userEmail');\n      const requestPath = wasabiStorage.getClassJoinRequestPath(teacherEmail, selectedClass.code, studentEmail);\n\n      // Delete the join request\n      await wasabiStorage.deleteData(requestPath);\n\n      // Reload teacher data to refresh the UI\n      await loadTeacherData(teacherEmail);\n    } catch (error) {\n      console.error('Error denying student:', error);\n      setError('Failed to deny student');\n    }\n  };\n  const removeStudent = async studentEmail => {\n    try {\n      const classRef = doc(db, 'classes', selectedClass.id);\n      const studentRef = doc(db, 'students', studentEmail);\n\n      // Remove student from class\n      await updateDoc(classRef, {\n        students: arrayRemove(studentEmail)\n      });\n\n      // Remove class from student's classes\n      await updateDoc(studentRef, {\n        classes: arrayRemove(selectedClass.id)\n      });\n\n      // Clear any pending requests for this student in this class\n      const pendingRequestsRef = collection(db, 'classes', selectedClass.id, 'pendingRequests');\n      const q = query(pendingRequestsRef, where('studentEmail', '==', studentEmail));\n      const pendingDocs = await getDocs(q);\n      const batch = writeBatch(db);\n      pendingDocs.forEach(doc => {\n        batch.delete(doc.ref);\n      });\n      await batch.commit();\n\n      // Update local state\n      setSelectedClass(prev => ({\n        ...prev,\n        students: prev.students.filter(email => email !== studentEmail),\n        pendingStudents: prev.pendingStudents ? prev.pendingStudents.filter(s => s.studentEmail !== studentEmail) : []\n      }));\n      toast.success('Student removed successfully');\n    } catch (error) {\n      console.error('Error removing student:', error);\n      toast.error('Failed to remove student');\n    }\n  };\n  const handleDownload = async () => {\n    try {\n      // Get the teacher app executable as binary data\n      const data = await wasabiStorage.getBinaryData('Teacher App.exe');\n      if (!data) {\n        throw new Error('Failed to download teacher app');\n      }\n\n      // Create a blob from the binary data\n      const blob = new Blob([data], {\n        type: 'application/x-msdownload'\n      });\n      const url = window.URL.createObjectURL(blob);\n\n      // Create a temporary link and click it to start the download\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = 'Teacher App.exe';\n      document.body.appendChild(link);\n      link.click();\n\n      // Clean up\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('Error downloading teacher app:', error);\n      alert('Failed to download teacher app. Please try again later.');\n    }\n  };\n  const handleRecordingSave = async recordingData => {\n    try {\n      if (!selectedClass) {\n        throw new Error('No class selected');\n      }\n      const teacherEmail = sessionStorage.getItem('userEmail');\n      const recordingId = Date.now().toString();\n      const recordingPath = wasabiStorage.getRecordingPath(teacherEmail, selectedClass.code, recordingId);\n      await wasabiStorage.saveData(recordingPath, {\n        ...recordingData,\n        id: recordingId,\n        timestamp: new Date().toISOString()\n      });\n\n      // Reload recordings\n      await loadRecordings(teacherEmail);\n    } catch (error) {\n      console.error('Error saving recording:', error);\n      setError('Failed to save recording');\n    }\n  };\n  const loadSummaries = async teacherEmail => {\n    try {\n      if (!selectedClass) {\n        return;\n      }\n      const summaries = await wasabiStorage.getSummaries(teacherEmail, selectedClass.code);\n      setSelectedClass({\n        ...selectedClass,\n        summaries: summaries\n      });\n    } catch (error) {\n      console.error('Error loading summaries:', error);\n      setError('Failed to load summaries');\n    }\n  };\n  const renderContent = () => {\n    if (!selectedClass) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"classes-list\",\n        children: [classes.map(cls => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"class-item\",\n          onClick: () => setSelectedClass(cls),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: cls.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"class-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Class Code: \", cls.code]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 502,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [cls.students.length, \" Students\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 15\n          }, this)]\n        }, cls.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 13\n        }, this)), showCreateClass ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-class-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newClassName,\n            onChange: e => setNewClassName(e.target.value),\n            placeholder: \"Enter class name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: createClass,\n              children: \"Create\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 517,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setShowCreateClass(false),\n              className: \"secondary-button\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowCreateClass(true),\n          className: \"create-class-button\",\n          children: \"Create New Class\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"class-dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"class-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setSelectedClass(null),\n          className: \"back-to-classes\",\n          children: \"\\u2190 Back to Classes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: selectedClass.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"class-code\",\n          children: [\"Class Code: \", selectedClass.code]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tab-navigation\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `tab-button ${activeTab === 'students' ? 'active' : ''}`,\n          onClick: () => setActiveTab('students'),\n          children: \"Manage Students\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 9\n      }, this), activeTab === 'students' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"students-management\",\n        children: [selectedClass.pendingStudents && selectedClass.pendingStudents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pending-students\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Pending Approvals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'column',\n              gap: '12px'\n            },\n            children: selectedClass.pendingStudents.map(student => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pending-student-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"student-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"student-name\",\n                  children: student.studentName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 560,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"student-email\",\n                  children: student.studentEmail\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 561,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"approval-buttons\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => approveStudent(student.studentEmail),\n                  className: \"approve-button\",\n                  children: \"Approve\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 564,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => denyStudent(student.studentEmail),\n                  className: \"decline-button\",\n                  children: \"Deny\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 567,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 23\n              }, this)]\n            }, student.studentEmail, true, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"enrolled-students\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Enrolled Students\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 15\n          }, this), selectedClass.students.map(student => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"enrolled-student-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"student-info\",\n              style: {\n                flex: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"student-name\",\n                children: student.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"student-email\",\n                children: student.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeStudent(student.email),\n              className: \"remove-button\",\n              title: \"Remove student\",\n              style: {\n                padding: '0px 6px',\n                width: '24px',\n                height: '24px',\n                lineHeight: '18px',\n                fontSize: '18px',\n                borderRadius: '4px',\n                backgroundColor: '#dc3545',\n                color: 'white',\n                border: 'none',\n                cursor: 'pointer',\n                marginLeft: '8px',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                flexShrink: 0\n              },\n              children: \"\\xD7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 19\n            }, this)]\n          }, student.email, true, {\n            fileName: _jsxFileName,\n            lineNumber: 580,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 7\n    }, this);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading teacher dashboard...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If the teacher account is pending approval\n  if (teacherData && teacherData.pending) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pending-approval\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Account Pending Approval\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 627,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your teacher account is pending administrator approval.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please check back later or contact the administrator for more information.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/'),\n          className: \"logout-button\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"storage-indicator\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"storage-dot wasabi-active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Using Wasabi Cloud Storage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 11\n        }, this), isConnecting && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"connecting-message\",\n          children: \"Connecting to Wasabi...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 637,\n          columnNumber: 28\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(BackButton, {\n        destination: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Teacher Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"logout-button\",\n        onClick: () => {\n          sessionStorage.removeItem('userEmail');\n          sessionStorage.removeItem('userRole');\n          navigate('/');\n        },\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"storage-indicator\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"storage-dot wasabi-active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Using Wasabi Cloud Storage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 7\n    }, this), isConnecting && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"connecting-message\",\n      children: \"Connecting to Wasabi...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 24\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"download-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Download Teacher App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Download the Teacher App to access additional features like lecture recordings and class summaries.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 672,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"download-button\",\n          onClick: handleDownload,\n          children: \"Download Teacher App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 9\n      }, this), renderContent()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 645,\n    columnNumber: 5\n  }, this);\n}\n_s(TeacherDashboard, \"JFumLPIpCl/kU2V7alsLH3s4Eiw=\", false, function () {\n  return [useNavigate];\n});\n_c = TeacherDashboard;\nexport default TeacherDashboard;\nvar _c;\n$RefreshReg$(_c, \"TeacherDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","BackButton","infuraStorage","wasabiStorage","doc","updateDoc","arrayRemove","collection","query","where","getDocs","writeBatch","toast","jsxDEV","_jsxDEV","TeacherDashboard","_s","classes","setClasses","showCreateClass","setShowCreateClass","newClassName","setNewClassName","selectedClass","setSelectedClass","pendingStudents","setPendingStudents","activeTab","setActiveTab","recordings","setRecordings","teacherData","setTeacherData","loading","setLoading","isConnecting","setIsConnecting","error","setError","isRecording","setIsRecording","recordingTime","setRecordingTime","mediaRecorderRef","timeIntervalRef","chunksRef","navigate","connectAndLoadTeacherData","useCallback","teacherEmail","connectResult","connect","success","loadTeacherData","loadRecordings","message","console","recordingsData","listObjects","getRecordingsPath","code","loadedRecordings","recording","Key","endsWith","recordingData","getData","push","startRecording","stream","navigator","mediaDevices","getUserMedia","audio","mediaRecorder","MediaRecorder","current","ondataavailable","e","data","size","onstop","blob","Blob","type","url","URL","createObjectURL","timestamp","Date","toISOString","newRecording","id","now","duration","localPath","updatedRecordings","updatedClass","updatedClasses","map","c","sessionStorage","getItem","saveData","reader","FileReader","readAsDataURL","onloadend","localStorage","setItem","result","getTracks","forEach","track","stop","start","setInterval","prev","stopRecording","clearInterval","formatTime","seconds","mins","Math","floor","secs","toString","padStart","document","body","classList","add","remove","getTeacherPath","classesData","getTeacherClassesPath","loadedClasses","classObj","classData","classCode","joinRequestsPath","log","joinRequests","request","requestData","status","createClass","trim","generateClassCode","chars","i","charAt","random","length","classPath","getClassPath","recordingsPath","summariesPath","getSummariesPath","Promise","all","s3","putObject","Bucket","bucket","Body","ContentType","promise","name","students","createdAt","alert","approveStudent","studentEmail","Error","requestPath","getClassJoinRequestPath","joinRequest","updatedRequest","studentData","getStudentPath","updatedStudentData","joinedAt","updatedClassData","email","studentName","denyStudent","deleteData","removeStudent","classRef","db","studentRef","pendingRequestsRef","q","pendingDocs","batch","delete","ref","commit","filter","s","handleDownload","getBinaryData","window","link","createElement","href","download","appendChild","click","removeChild","revokeObjectURL","handleRecordingSave","recordingId","recordingPath","getRecordingPath","loadSummaries","summaries","getSummaries","renderContent","className","children","cls","onClick","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","placeholder","style","display","flexDirection","gap","student","flex","title","padding","width","height","lineHeight","fontSize","borderRadius","backgroundColor","color","border","cursor","marginLeft","alignItems","justifyContent","flexShrink","pending","destination","removeItem","_c","$RefreshReg$"],"sources":["D:/dadas/he true randomizer/theta/src/components/TeacherDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BackButton from './BackButton';\nimport infuraStorage from '../services/MetaMaskStorage';\nimport wasabiStorage from '../services/WasabiStorage';\nimport { doc, updateDoc, arrayRemove, collection, query, where, getDocs, writeBatch } from 'firebase/firestore';\nimport { toast } from 'react-hot-toast';\n\nfunction TeacherDashboard() {\n  const [classes, setClasses] = useState([]);\n  const [showCreateClass, setShowCreateClass] = useState(false);\n  const [newClassName, setNewClassName] = useState('');\n  const [selectedClass, setSelectedClass] = useState(null);\n  const [pendingStudents, setPendingStudents] = useState([]);\n  const [activeTab, setActiveTab] = useState('classes');\n  const [recordings, setRecordings] = useState([]);\n  const [teacherData, setTeacherData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [error, setError] = useState('');\n  const [isRecording, setIsRecording] = useState(false);\n  const [recordingTime, setRecordingTime] = useState(0);\n  const mediaRecorderRef = useRef(null);\n  const timeIntervalRef = useRef(null);\n  const chunksRef = useRef([]);\n  const navigate = useNavigate();\n\n  // Memoize the connectAndLoadTeacherData function to prevent infinite loop\n  const connectAndLoadTeacherData = React.useCallback(async (teacherEmail) => {\n    try {\n      setIsConnecting(true);\n      setError('');\n      \n      // Connect to Infura\n      const connectResult = await infuraStorage.connect();\n      if (!connectResult.success) {\n        setError(`Infura connection error: ${connectResult.error}`);\n        setLoading(false);\n        return;\n      }\n      \n      await loadTeacherData(teacherEmail);\n      await loadRecordings(teacherEmail);\n      setLoading(false); // Set loading to false after all data is loaded\n    } catch (error) {\n      setError(`Error connecting to Infura: ${error.message}`);\n      console.error('Connection error:', error);\n      setLoading(false);\n    } finally {\n      setIsConnecting(false);\n    }\n  }, []);\n\n  const loadRecordings = async (teacherEmail) => {\n    try {\n      if (!selectedClass) {\n        return;\n      }\n\n      const recordingsData = await wasabiStorage.listObjects(\n        wasabiStorage.getRecordingsPath(teacherEmail, selectedClass.code)\n      );\n      const loadedRecordings = [];\n\n      for (const recording of recordingsData) {\n        if (recording.Key.endsWith('.json')) {\n          const recordingData = await wasabiStorage.getData(recording.Key);\n          if (recordingData) {\n            loadedRecordings.push(recordingData);\n          }\n        }\n      }\n\n      setRecordings(loadedRecordings);\n    } catch (error) {\n      console.error('Error loading recordings:', error);\n      setError('Failed to load recordings');\n    }\n  };\n\n  const startRecording = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      const mediaRecorder = new MediaRecorder(stream);\n      mediaRecorderRef.current = mediaRecorder;\n      chunksRef.current = [];\n\n      mediaRecorder.ondataavailable = (e) => {\n        if (e.data.size > 0) {\n          chunksRef.current.push(e.data);\n        }\n      };\n\n      mediaRecorder.onstop = async () => {\n        const blob = new Blob(chunksRef.current, { type: 'audio/webm' });\n        const url = URL.createObjectURL(blob);\n        const timestamp = new Date().toISOString();\n        const newRecording = {\n          id: Date.now(),\n          url,\n          timestamp,\n          duration: recordingTime,\n          localPath: `recording_${timestamp}.webm`\n        };\n\n        // Update recordings state\n        const updatedRecordings = [...recordings, newRecording];\n        setRecordings(updatedRecordings);\n        \n        // Update selected class recordings\n        if (selectedClass) {\n          const updatedClass = {\n            ...selectedClass,\n            recordings: [...selectedClass.recordings, newRecording]\n          };\n          setSelectedClass(updatedClass);\n\n          // Update classes state\n          const updatedClasses = classes.map(c => \n            c.id === selectedClass.id ? updatedClass : c\n          );\n          setClasses(updatedClasses);\n\n          // Save to Infura\n          const teacherEmail = sessionStorage.getItem('userEmail');\n          await infuraStorage.saveData(`classes_${teacherEmail}`, updatedClasses);\n        }\n        \n        // Save recording data\n        await infuraStorage.saveData(`recordings_${sessionStorage.getItem('userEmail')}`, updatedRecordings);\n\n        // Save to local storage\n        const reader = new FileReader();\n        reader.readAsDataURL(blob);\n        reader.onloadend = () => {\n          localStorage.setItem(`recording_${timestamp}`, reader.result);\n        };\n\n        stream.getTracks().forEach(track => track.stop());\n      };\n\n      mediaRecorder.start();\n      setIsRecording(true);\n      setRecordingTime(0);\n      timeIntervalRef.current = setInterval(() => {\n        setRecordingTime(prev => prev + 1);\n      }, 1000);\n    } catch (error) {\n      console.error('Error starting recording:', error);\n      setError('Failed to start recording. Please check your microphone permissions.');\n    }\n  };\n\n  const stopRecording = () => {\n    if (mediaRecorderRef.current && isRecording) {\n      mediaRecorderRef.current.stop();\n      clearInterval(timeIntervalRef.current);\n      setIsRecording(false);\n    }\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins}:${secs.toString().padStart(2, '0')}`;\n  };\n\n  useEffect(() => {\n    document.body.classList.add('dashboard-page');\n    const teacherEmail = sessionStorage.getItem('userEmail');\n    connectAndLoadTeacherData(teacherEmail);\n    \n    return () => {\n      document.body.classList.remove('dashboard-page');\n      if (timeIntervalRef.current) {\n        clearInterval(timeIntervalRef.current);\n      }\n      if (mediaRecorderRef.current && isRecording) {\n        mediaRecorderRef.current.stop();\n      }\n    };\n  }, [connectAndLoadTeacherData, isRecording]);\n\n  const loadTeacherData = async (teacherEmail) => {\n    try {\n      // Get teacher data\n      const teacherData = await wasabiStorage.getData(wasabiStorage.getTeacherPath(teacherEmail));\n      if (!teacherData) {\n        setError('Teacher data not found');\n        return;\n      }\n      setTeacherData(teacherData);\n\n      // List all classes\n      const classesData = await wasabiStorage.listObjects(wasabiStorage.getTeacherClassesPath(teacherEmail));\n      const loadedClasses = [];\n\n      for (const classObj of classesData) {\n        if (classObj.Key.endsWith('info.json')) {\n          const classData = await wasabiStorage.getData(classObj.Key);\n          if (classData) {\n            // Load join requests for this class\n            const classCode = classData.code;\n            const joinRequestsPath = `Skyline/teachers/${teacherEmail}/classes/${classCode}/join-requests/`;\n            console.log('Checking join requests at:', joinRequestsPath);\n            \n            const joinRequests = await wasabiStorage.listObjects(joinRequestsPath);\n            console.log('Found join requests:', joinRequests);\n            \n            const pendingStudents = [];\n            for (const request of joinRequests) {\n              if (request.Key.endsWith('.json')) {\n                const requestData = await wasabiStorage.getData(request.Key);\n                if (requestData && requestData.status === 'pending') {\n                  pendingStudents.push(requestData);\n                }\n              }\n            }\n            \n            classData.pendingStudents = pendingStudents;\n            loadedClasses.push(classData);\n          }\n        }\n      }\n\n      console.log('Loaded classes with pending students:', loadedClasses);\n      setClasses(loadedClasses);\n    } catch (error) {\n      console.error('Error loading teacher data:', error);\n      setError('Failed to load teacher data');\n    }\n  };\n\n  const createClass = async () => {\n    if (!newClassName.trim()) {\n      setError('Please enter a class name');\n      return;\n    }\n\n    try {\n      const teacherEmail = sessionStorage.getItem('userEmail');\n      \n      // Generate a unique 6-character class code\n      const generateClassCode = () => {\n        const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n        let code = '';\n        for (let i = 0; i < 6; i++) {\n          code += chars.charAt(Math.floor(Math.random() * chars.length));\n        }\n        return code;\n      };\n\n      const classCode = generateClassCode();\n      \n      // Create class folder structure\n      const classPath = wasabiStorage.getClassPath(teacherEmail, classCode);\n      const recordingsPath = wasabiStorage.getRecordingsPath(teacherEmail, classCode);\n      const summariesPath = wasabiStorage.getSummariesPath(teacherEmail, classCode);\n\n      // Create the folders\n      await Promise.all([\n        wasabiStorage.s3.putObject({\n          Bucket: wasabiStorage.bucket,\n          Key: recordingsPath,\n          Body: '',\n          ContentType: 'application/x-directory'\n        }).promise(),\n        wasabiStorage.s3.putObject({\n          Bucket: wasabiStorage.bucket,\n          Key: summariesPath,\n          Body: '',\n          ContentType: 'application/x-directory'\n        }).promise()\n      ]);\n\n      // Create class data\n      const classData = {\n        name: newClassName.trim(),\n        code: classCode,\n        teacherEmail,\n        students: [],\n        pendingStudents: [],\n        createdAt: new Date().toISOString()\n      };\n\n      // Save class info\n      await wasabiStorage.saveData(classPath, classData);\n\n      // Update UI\n      setClasses([...classes, classData]);\n      setNewClassName('');\n      setShowCreateClass(false);\n      \n      // Show success message with class code\n      alert(`Class created successfully! Class code: ${classCode}`);\n    } catch (error) {\n      console.error('Error creating class:', error);\n      setError('Failed to create class');\n    }\n  };\n\n  const approveStudent = async (studentEmail) => {\n    try {\n      if (!selectedClass) {\n        throw new Error('No class selected');\n      }\n\n      const teacherEmail = sessionStorage.getItem('userEmail');\n      const requestPath = wasabiStorage.getClassJoinRequestPath(teacherEmail, selectedClass.code, studentEmail);\n      const joinRequest = await wasabiStorage.getData(requestPath);\n\n      if (!joinRequest) {\n        throw new Error('Join request not found');\n      }\n\n      // Update join request status\n      const updatedRequest = {\n        ...joinRequest,\n        status: 'approved'\n      };\n      await wasabiStorage.saveData(requestPath, updatedRequest);\n\n      // Update student's classes in their data\n      const studentData = await wasabiStorage.getData(wasabiStorage.getStudentPath(studentEmail));\n      if (studentData) {\n        const updatedStudentData = {\n          ...studentData,\n          classes: [...(studentData.classes || []), {\n            code: selectedClass.code,\n            teacherEmail: teacherEmail,\n            joinedAt: new Date().toISOString()\n          }]\n        };\n        await wasabiStorage.saveData(wasabiStorage.getStudentPath(studentEmail), updatedStudentData);\n      }\n\n      // Update class data to add student to enrolled students\n      const classPath = wasabiStorage.getClassPath(teacherEmail, selectedClass.code);\n      const updatedClassData = {\n        ...selectedClass,\n        students: [...(selectedClass.students || []), {\n          email: studentEmail,\n          name: joinRequest.studentName,\n          joinedAt: new Date().toISOString()\n        }]\n      };\n      await wasabiStorage.saveData(classPath, updatedClassData);\n\n      // Update local state immediately\n      setSelectedClass(updatedClassData);\n      setClasses(classes.map(c => \n        c.code === selectedClass.code ? updatedClassData : c\n      ));\n\n      // Reload teacher data to refresh everything\n      await loadTeacherData(teacherEmail);\n    } catch (error) {\n      console.error('Error approving student:', error);\n      setError('Failed to approve student');\n    }\n  };\n\n  const denyStudent = async (studentEmail) => {\n    try {\n      if (!selectedClass) {\n        throw new Error('No class selected');\n      }\n\n      const teacherEmail = sessionStorage.getItem('userEmail');\n      const requestPath = wasabiStorage.getClassJoinRequestPath(teacherEmail, selectedClass.code, studentEmail);\n      \n      // Delete the join request\n      await wasabiStorage.deleteData(requestPath);\n\n      // Reload teacher data to refresh the UI\n      await loadTeacherData(teacherEmail);\n    } catch (error) {\n      console.error('Error denying student:', error);\n      setError('Failed to deny student');\n    }\n  };\n\n  const removeStudent = async (studentEmail) => {\n    try {\n      const classRef = doc(db, 'classes', selectedClass.id);\n      const studentRef = doc(db, 'students', studentEmail);\n      \n      // Remove student from class\n      await updateDoc(classRef, {\n        students: arrayRemove(studentEmail)\n      });\n\n      // Remove class from student's classes\n      await updateDoc(studentRef, {\n        classes: arrayRemove(selectedClass.id)\n      });\n\n      // Clear any pending requests for this student in this class\n      const pendingRequestsRef = collection(db, 'classes', selectedClass.id, 'pendingRequests');\n      const q = query(pendingRequestsRef, where('studentEmail', '==', studentEmail));\n      const pendingDocs = await getDocs(q);\n      \n      const batch = writeBatch(db);\n      pendingDocs.forEach((doc) => {\n        batch.delete(doc.ref);\n      });\n      await batch.commit();\n\n      // Update local state\n      setSelectedClass(prev => ({\n        ...prev,\n        students: prev.students.filter(email => email !== studentEmail),\n        pendingStudents: prev.pendingStudents ? \n          prev.pendingStudents.filter(s => s.studentEmail !== studentEmail) : \n          []\n      }));\n\n      toast.success('Student removed successfully');\n    } catch (error) {\n      console.error('Error removing student:', error);\n      toast.error('Failed to remove student');\n    }\n  };\n\n  const handleDownload = async () => {\n    try {\n      // Get the teacher app executable as binary data\n      const data = await wasabiStorage.getBinaryData('Teacher App.exe');\n      if (!data) {\n        throw new Error('Failed to download teacher app');\n      }\n\n      // Create a blob from the binary data\n      const blob = new Blob([data], { type: 'application/x-msdownload' });\n      const url = window.URL.createObjectURL(blob);\n      \n      // Create a temporary link and click it to start the download\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = 'Teacher App.exe';\n      document.body.appendChild(link);\n      link.click();\n      \n      // Clean up\n      document.body.removeChild(link);\n      window.URL.revokeObjectURL(url);\n    } catch (error) {\n      console.error('Error downloading teacher app:', error);\n      alert('Failed to download teacher app. Please try again later.');\n    }\n  };\n\n  const handleRecordingSave = async (recordingData) => {\n    try {\n      if (!selectedClass) {\n        throw new Error('No class selected');\n      }\n\n      const teacherEmail = sessionStorage.getItem('userEmail');\n      const recordingId = Date.now().toString();\n      const recordingPath = wasabiStorage.getRecordingPath(teacherEmail, selectedClass.code, recordingId);\n\n      await wasabiStorage.saveData(recordingPath, {\n        ...recordingData,\n        id: recordingId,\n        timestamp: new Date().toISOString()\n      });\n\n      // Reload recordings\n      await loadRecordings(teacherEmail);\n    } catch (error) {\n      console.error('Error saving recording:', error);\n      setError('Failed to save recording');\n    }\n  };\n\n  const loadSummaries = async (teacherEmail) => {\n    try {\n      if (!selectedClass) {\n        return;\n      }\n\n      const summaries = await wasabiStorage.getSummaries(teacherEmail, selectedClass.code);\n      setSelectedClass({\n        ...selectedClass,\n        summaries: summaries\n      });\n    } catch (error) {\n      console.error('Error loading summaries:', error);\n      setError('Failed to load summaries');\n    }\n  };\n\n  const renderContent = () => {\n    if (!selectedClass) {\n      return (\n        <div className=\"classes-list\">\n          {classes.map(cls => (\n            <div key={cls.id} className=\"class-item\" onClick={() => setSelectedClass(cls)}>\n              <h3>{cls.name}</h3>\n              <div className=\"class-info\">\n                <span>Class Code: {cls.code}</span>\n                <span>{cls.students.length} Students</span>\n              </div>\n            </div>\n          ))}\n          \n          {showCreateClass ? (\n            <div className=\"create-class-form\">\n              <input\n                type=\"text\"\n                value={newClassName}\n                onChange={(e) => setNewClassName(e.target.value)}\n                placeholder=\"Enter class name\"\n              />\n              <div className=\"form-actions\">\n                <button onClick={createClass}>Create</button>\n                <button onClick={() => setShowCreateClass(false)} className=\"secondary-button\">\n                  Cancel\n                </button>\n              </div>\n            </div>\n          ) : (\n            <button onClick={() => setShowCreateClass(true)} className=\"create-class-button\">\n              Create New Class\n            </button>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"class-dashboard\">\n        <div className=\"class-header\">\n          <button onClick={() => setSelectedClass(null)} className=\"back-to-classes\">\n            ← Back to Classes\n          </button>\n          <h2>{selectedClass.name}</h2>\n          <div className=\"class-code\">Class Code: {selectedClass.code}</div>\n        </div>\n\n        <div className=\"tab-navigation\">\n          <button \n            className={`tab-button ${activeTab === 'students' ? 'active' : ''}`}\n            onClick={() => setActiveTab('students')}\n          >\n            Manage Students\n          </button>\n        </div>\n\n        {activeTab === 'students' && (\n          <div className=\"students-management\">\n            {selectedClass.pendingStudents && selectedClass.pendingStudents.length > 0 && (\n              <div className=\"pending-students\">\n                <h3>Pending Approvals</h3>\n                <div style={{ display: 'flex', flexDirection: 'column', gap: '12px' }}>\n                  {selectedClass.pendingStudents.map(student => (\n                    <div key={student.studentEmail} className=\"pending-student-item\">\n                      <div className=\"student-info\">\n                        <div className=\"student-name\">{student.studentName}</div>\n                        <div className=\"student-email\">{student.studentEmail}</div>\n                      </div>\n                      <div className=\"approval-buttons\">\n                        <button onClick={() => approveStudent(student.studentEmail)} className=\"approve-button\">\n                          Approve\n                        </button>\n                        <button onClick={() => denyStudent(student.studentEmail)} className=\"decline-button\">\n                          Deny\n                        </button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            )}\n\n            <div className=\"enrolled-students\">\n              <h3>Enrolled Students</h3>\n              {selectedClass.students.map(student => (\n                <div key={student.email} className=\"enrolled-student-item\">\n                  <div className=\"student-info\" style={{ flex: 1 }}>\n                    <div className=\"student-name\">{student.name}</div>\n                    <div className=\"student-email\">{student.email}</div>\n                  </div>\n                  <button \n                    onClick={() => removeStudent(student.email)} \n                    className=\"remove-button\"\n                    title=\"Remove student\"\n                    style={{ \n                      padding: '0px 6px',\n                      width: '24px',\n                      height: '24px',\n                      lineHeight: '18px',\n                      fontSize: '18px',\n                      borderRadius: '4px',\n                      backgroundColor: '#dc3545',\n                      color: 'white',\n                      border: 'none',\n                      cursor: 'pointer',\n                      marginLeft: '8px',\n                      display: 'flex',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      flexShrink: 0\n                    }}\n                  >\n                    ×\n                  </button>\n                </div>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  if (loading) {\n    return <div className=\"loading\">Loading teacher dashboard...</div>;\n  }\n\n  // If the teacher account is pending approval\n  if (teacherData && teacherData.pending) {\n    return (\n      <div className=\"dashboard-container\">\n        <div className=\"pending-approval\">\n          <h2>Account Pending Approval</h2>\n          <p>Your teacher account is pending administrator approval.</p>\n          <p>Please check back later or contact the administrator for more information.</p>\n          <button onClick={() => navigate('/')} className=\"logout-button\">Logout</button>\n          \n          <div className=\"storage-indicator\">\n            <div className=\"storage-dot wasabi-active\"></div>\n            <span>Using Wasabi Cloud Storage</span>\n          </div>\n          \n          {isConnecting && <div className=\"connecting-message\">Connecting to Wasabi...</div>}\n          {error && <div className=\"error-message\">{error}</div>}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"dashboard-container\">\n      <div className=\"dashboard-header\">\n        <BackButton destination=\"/\" />\n        <h2>Teacher Dashboard</h2>\n        <button \n          className=\"logout-button\" \n          onClick={() => {\n            sessionStorage.removeItem('userEmail');\n            sessionStorage.removeItem('userRole');\n            navigate('/');\n          }}\n        >\n          Logout\n        </button>\n      </div>\n      \n      <div className=\"storage-indicator\">\n        <div className=\"storage-dot wasabi-active\"></div>\n        <span>Using Wasabi Cloud Storage</span>\n      </div>\n      \n      {isConnecting && <div className=\"connecting-message\">Connecting to Wasabi...</div>}\n      {error && <div className=\"error-message\">{error}</div>}\n      \n      <div className=\"dashboard-content\">\n        <div className=\"download-section\">\n          <h3>Download Teacher App</h3>\n          <p>Download the Teacher App to access additional features like lecture recordings and class summaries.</p>\n          <button className=\"download-button\" onClick={handleDownload}>\n            Download Teacher App\n          </button>\n        </div>\n        {renderContent()}\n      </div>\n    </div>\n  );\n}\n\nexport default TeacherDashboard; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}