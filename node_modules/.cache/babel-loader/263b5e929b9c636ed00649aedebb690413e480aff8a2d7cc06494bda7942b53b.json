{"ast":null,"code":"var _jsxFileName = \"D:\\\\dadas\\\\he true randomizer\\\\theta\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './ChatBot.css';\nimport logo from './assets/logo.png';\nimport LatexFormatter from './LatexFormatter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatBot() {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [voiceEnabled, setVoiceEnabled] = useState(false);\n  const chatBoxRef = useRef(null);\n  const recognitionRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const userAnalyserRef = useRef(null);\n  const aiAnalyserRef = useRef(null);\n  useEffect(() => {\n    // Initialize speech recognition\n    const SpeechRecognitionAPI = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (SpeechRecognitionAPI) {\n      recognitionRef.current = new SpeechRecognitionAPI();\n      recognitionRef.current.continuous = false;\n      recognitionRef.current.interimResults = false;\n      recognitionRef.current.lang = 'en-US';\n      recognitionRef.current.onresult = event => {\n        const text = event.results[0][0].transcript;\n        setInputText(text);\n        sendMessage(text);\n      };\n      recognitionRef.current.onend = () => {\n        setIsListening(false);\n      };\n    }\n\n    // Initialize audio context\n    try {\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      userAnalyserRef.current = audioContextRef.current.createAnalyser();\n      userAnalyserRef.current.fftSize = 256;\n      userAnalyserRef.current.smoothingTimeConstant = 0.8;\n      aiAnalyserRef.current = audioContextRef.current.createAnalyser();\n      aiAnalyserRef.current.fftSize = 256;\n      aiAnalyserRef.current.smoothingTimeConstant = 0.8;\n    } catch (e) {\n      console.error(\"Error initializing audio context:\", e);\n    }\n    return () => {\n      if (recognitionRef.current) {\n        recognitionRef.current.stop();\n      }\n    };\n  }, []);\n  const toggleChat = () => {\n    setIsOpen(!isOpen);\n  };\n  const startListening = () => {\n    if (recognitionRef.current && !isListening) {\n      recognitionRef.current.start();\n      setIsListening(true);\n    }\n  };\n  const stopListening = () => {\n    if (recognitionRef.current && isListening) {\n      recognitionRef.current.stop();\n      setIsListening(false);\n    }\n  };\n  const sendMessage = async (text = null) => {\n    const messageToSend = text || inputText;\n    if (!messageToSend.trim()) return;\n    setIsLoading(true);\n\n    // Add user message\n    const userMessage = {\n      type: 'user',\n      text: messageToSend\n    };\n    setMessages(prev => [...prev, userMessage]);\n    setInputText('');\n    try {\n      // Prepare conversation history\n      const history = messages.map(msg => ({\n        role: msg.type === 'user' ? 'user' : 'assistant',\n        content: msg.text\n      }));\n      const response = await fetch('http://localhost:5000/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: messageToSend,\n          history\n        })\n      });\n      if (!response.ok) throw new Error('Network response was not ok');\n      const data = await response.json();\n\n      // Add bot message\n      const botMessage = {\n        type: 'bot',\n        text: data.response\n      };\n      setMessages(prev => [...prev, botMessage]);\n\n      // Only speak the response if voiceEnabled is true\n      if (voiceEnabled) {\n        speakText(data.response);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prev => [...prev, {\n        type: 'error',\n        text: 'Sorry, I encountered an error. Please try again.'\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const speakText = async text => {\n    try {\n      const response = await fetch('http://localhost:5000/tts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text\n        })\n      });\n      if (!response.ok) throw new Error('TTS request failed');\n      const audioBlob = await response.blob();\n      const audioUrl = URL.createObjectURL(audioBlob);\n      const audio = new Audio(audioUrl);\n      audio.onplay = () => {\n        if (aiAnalyserRef.current) {\n          animateBubble(chatBoxRef.current.lastChild, aiAnalyserRef.current, false);\n        }\n      };\n      audio.onended = () => {\n        if (aiAnalyserRef.current) {\n          stopBubbleAnimation(chatBoxRef.current.lastChild);\n        }\n        URL.revokeObjectURL(audioUrl);\n      };\n      audio.play();\n    } catch (error) {\n      console.error('TTS error:', error);\n    }\n  };\n  const animateBubble = (element, analyser, isUser) => {\n    if (!element || !analyser) return null;\n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    function animate() {\n      analyser.getByteFrequencyData(dataArray);\n      let sum = 0;\n      for (let i = 0; i < bufferLength; i++) {\n        sum += dataArray[i];\n      }\n      const volume = sum / bufferLength;\n      const scale = 1 + volume / 128 * 0.5;\n      element.style.transform = `scale(${scale})`;\n      requestAnimationFrame(animate);\n    }\n    return requestAnimationFrame(animate);\n  };\n  const stopBubbleAnimation = element => {\n    if (element) {\n      element.style.transform = 'scale(1)';\n    }\n  };\n\n  // Helper to split and render all LaTeX expressions in a message, and also render markdown headings\n  const renderWithLatexAndMarkdown = text => {\n    if (!text) return null;\n    // Split by newlines to handle markdown headings and paragraphs\n    const lines = text.split(/\\n|\\r\\n?/);\n    return lines.map((line, idx) => {\n      // Markdown headings\n      if (/^###\\s+/.test(line)) {\n        return /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            marginTop: '1em'\n          },\n          children: line.replace(/^###\\s+/, '')\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 16\n        }, this);\n      } else if (/^##\\s+/.test(line)) {\n        return /*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            marginTop: '1em'\n          },\n          children: line.replace(/^##\\s+/, '')\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 16\n        }, this);\n      } else if (/^#\\s+/.test(line)) {\n        return /*#__PURE__*/_jsxDEV(\"h1\", {\n          style: {\n            marginTop: '1em'\n          },\n          children: line.replace(/^#\\s+/, '')\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 16\n        }, this);\n      } else if (line.trim() === '') {\n        return /*#__PURE__*/_jsxDEV(\"br\", {}, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 16\n        }, this);\n      } else {\n        // Render LaTeX within the line\n        // Regex for $...$ (inline), \\[...\\] (block, multiline), \\(...\\) (inline), $$...$$ (block, multiline)\n        const regex = /(\\$\\$[\\s\\S]+?\\$\\$|\\$[^$]+\\$|\\\\\\[[\\s\\S]+?\\\\\\]|\\\\\\([\\s\\S]+?\\\\\\))/g;\n        const parts = line.split(regex);\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            display: 'block',\n            marginTop: '0.25em'\n          },\n          children: parts.map((part, i) => {\n            if (part.match(regex)) {\n              let latex = part;\n              let displayMode = true;\n              if (latex.startsWith('$$') && latex.endsWith('$$')) {\n                latex = latex.slice(2, -2);\n                displayMode = true;\n              } else if (latex.startsWith('$') && latex.endsWith('$')) {\n                latex = latex.slice(1, -1);\n                displayMode = false;\n              } else if (latex.startsWith('\\\\[') && latex.endsWith('\\\\]')) {\n                latex = latex.slice(2, -2);\n                displayMode = true;\n              } else if (latex.startsWith('\\\\(') && latex.endsWith('\\\\)')) {\n                latex = latex.slice(2, -2);\n                displayMode = false;\n              }\n              return /*#__PURE__*/_jsxDEV(LatexFormatter, {\n                content: latex.trim(),\n                displayMode: displayMode\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 24\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(\"span\", {\n                children: part\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 24\n              }, this);\n            }\n          })\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chatbot-container ${isOpen ? 'open' : ''}`,\n    style: {\n      position: 'fixed',\n      bottom: 20,\n      right: 20,\n      zIndex: 1000\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chatbot-toggle\",\n      onClick: toggleChat,\n      style: {\n        width: 60,\n        height: 60,\n        borderRadius: '50%',\n        background: '#111',\n        border: '2px solid #fff',\n        boxShadow: '0 2px 12px rgba(0,0,0,0.15)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        cursor: 'pointer',\n        position: 'relative',\n        transition: 'background 0.2s, border 0.2s'\n      },\n      title: \"Open AI Tutor\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: \"32\",\n        height: \"32\",\n        viewBox: \"0 0 32 32\",\n        fill: \"none\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: \"16\",\n          cy: \"16\",\n          r: \"15\",\n          stroke: \"#fff\",\n          strokeWidth: \"2\",\n          fill: \"#111\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n          x: \"16\",\n          y: \"21\",\n          textAnchor: \"middle\",\n          fontSize: \"16\",\n          fill: \"#fff\",\n          fontWeight: \"bold\",\n          fontFamily: \"Arial\",\n          children: \"\\u03B8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbot-window\",\n      style: {\n        background: '#181818',\n        color: '#fff',\n        borderRadius: '12px',\n        boxShadow: '0 5px 20px rgba(0,0,0,0.15)',\n        border: '2px solid #fff',\n        minWidth: 350,\n        maxWidth: 400\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-header\",\n        style: {\n          background: '#111',\n          color: '#fff',\n          borderTopLeftRadius: '12px',\n          borderTopRightRadius: '12px',\n          borderBottom: '1px solid #222',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n          padding: '15px 20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            color: '#fff',\n            margin: 0,\n            fontWeight: 700,\n            fontSize: '1.15em',\n            letterSpacing: '0.5px'\n          },\n          children: \"AI Tutor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: toggleChat,\n          style: {\n            color: '#fff',\n            background: 'none',\n            border: 'none',\n            fontSize: '1.5em',\n            cursor: 'pointer',\n            padding: 0,\n            margin: 0\n          },\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-messages\",\n        ref: chatBoxRef,\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${msg.type}`,\n          children: renderWithLatexAndMarkdown(msg.text)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message bot\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"typing-indicator\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatbot-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: inputText,\n          onChange: e => setInputText(e.target.value),\n          onKeyPress: e => {\n            if (e.key === 'Enter' && !e.shiftKey) {\n              e.preventDefault();\n              sendMessage();\n            }\n          },\n          placeholder: \"Type your message...\",\n          disabled: isLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatbot-buttons\",\n          style: {\n            display: 'flex',\n            gap: '10px',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `mic-button ${isListening ? 'listening' : ''}`,\n            onClick: isListening ? stopListening : startListening,\n            disabled: isLoading,\n            style: {\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              padding: '8px',\n              borderRadius: '50%',\n              background: '#f0f0f0',\n              border: 'none',\n              fontSize: '1.3em',\n              width: '42px',\n              height: '42px'\n            },\n            title: \"Voice Input\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"28\",\n              height: \"28\",\n              viewBox: \"0 0 28 28\",\n              fill: \"none\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              children: [/*#__PURE__*/_jsxDEV(\"ellipse\", {\n                cx: \"14\",\n                cy: \"10\",\n                rx: \"5\",\n                ry: \"7\",\n                fill: \"#4a90e2\",\n                stroke: \"#357abd\",\n                strokeWidth: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"rect\", {\n                x: \"12.5\",\n                y: \"18\",\n                width: \"3\",\n                height: \"6\",\n                rx: \"1.5\",\n                fill: \"#357abd\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M7 15.5V16C7 20 13 22 21 16V15.5\",\n                stroke: \"#357abd\",\n                strokeWidth: \"2\",\n                strokeLinecap: \"round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n                cx: \"14\",\n                cy: \"25\",\n                r: \"1.5\",\n                fill: \"#357abd\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `voice-toggle-btn`,\n            onClick: () => setVoiceEnabled(v => !v),\n            style: {\n              background: voiceEnabled ? '#4a90e2' : '#f0f0f0',\n              color: voiceEnabled ? '#fff' : '#357abd',\n              border: 'none',\n              borderRadius: '50%',\n              width: '42px',\n              height: '42px',\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n              fontSize: '1.2em',\n              cursor: 'pointer',\n              transition: 'background 0.2s, color 0.2s'\n            },\n            title: voiceEnabled ? 'Disable Voice Reader' : 'Enable Voice Reader',\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"32\",\n              height: \"32\",\n              viewBox: \"0 0 32 32\",\n              fill: \"none\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n                x: \"4\",\n                y: \"12\",\n                width: \"10\",\n                height: \"8\",\n                rx: \"3\",\n                fill: voiceEnabled ? '#fff' : '#4a90e2',\n                stroke: \"#357abd\",\n                strokeWidth: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"ellipse\", {\n                cx: \"22\",\n                cy: \"16\",\n                rx: \"4\",\n                ry: \"4\",\n                fill: voiceEnabled ? '#fff' : '#4a90e2',\n                stroke: \"#357abd\",\n                strokeWidth: \"2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 337,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M28 9C30 11 30 21 28 23\",\n                stroke: \"#357abd\",\n                strokeWidth: \"2\",\n                strokeLinecap: \"round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M28 27C30 25 30 19 28 17\",\n                stroke: \"#357abd\",\n                strokeWidth: \"2\",\n                strokeLinecap: \"round\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 339,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => sendMessage(),\n            disabled: isLoading,\n            style: {\n              minWidth: '90px',\n              fontWeight: 600,\n              fontSize: '1em',\n              background: '#111',\n              color: '#fff',\n              border: '2px solid #fff',\n              borderRadius: '8px',\n              padding: '10px 0',\n              cursor: 'pointer',\n              boxShadow: 'none'\n            },\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBot, \"vpUF+JkR2ppAmwCKTVoMzwq1OI0=\");\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","logo","LatexFormatter","jsxDEV","_jsxDEV","ChatBot","_s","isOpen","setIsOpen","messages","setMessages","inputText","setInputText","isListening","setIsListening","isLoading","setIsLoading","voiceEnabled","setVoiceEnabled","chatBoxRef","recognitionRef","audioContextRef","userAnalyserRef","aiAnalyserRef","SpeechRecognitionAPI","window","SpeechRecognition","webkitSpeechRecognition","current","continuous","interimResults","lang","onresult","event","text","results","transcript","sendMessage","onend","AudioContext","webkitAudioContext","createAnalyser","fftSize","smoothingTimeConstant","e","console","error","stop","toggleChat","startListening","start","stopListening","messageToSend","trim","userMessage","type","prev","history","map","msg","role","content","response","fetch","method","headers","body","JSON","stringify","message","ok","Error","data","json","botMessage","speakText","audioBlob","blob","audioUrl","URL","createObjectURL","audio","Audio","onplay","animateBubble","lastChild","onended","stopBubbleAnimation","revokeObjectURL","play","element","analyser","isUser","bufferLength","frequencyBinCount","dataArray","Uint8Array","animate","getByteFrequencyData","sum","i","volume","scale","style","transform","requestAnimationFrame","renderWithLatexAndMarkdown","lines","split","line","idx","test","marginTop","children","replace","fileName","_jsxFileName","lineNumber","columnNumber","regex","parts","display","part","match","latex","displayMode","startsWith","endsWith","slice","className","position","bottom","right","zIndex","onClick","width","height","borderRadius","background","border","boxShadow","alignItems","justifyContent","cursor","transition","title","viewBox","fill","xmlns","cx","cy","r","stroke","strokeWidth","x","y","textAnchor","fontSize","fontWeight","fontFamily","color","minWidth","maxWidth","borderTopLeftRadius","borderTopRightRadius","borderBottom","padding","margin","letterSpacing","ref","index","value","onChange","target","onKeyPress","key","shiftKey","preventDefault","placeholder","disabled","gap","rx","ry","d","strokeLinecap","v","_c","$RefreshReg$"],"sources":["D:/dadas/he true randomizer/theta/src/components/Chatbot.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './ChatBot.css';\nimport logo from './assets/logo.png';\nimport LatexFormatter from './LatexFormatter';\n\nfunction ChatBot() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [inputText, setInputText] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [voiceEnabled, setVoiceEnabled] = useState(false);\n  const chatBoxRef = useRef(null);\n  const recognitionRef = useRef(null);\n  const audioContextRef = useRef(null);\n  const userAnalyserRef = useRef(null);\n  const aiAnalyserRef = useRef(null);\n\n  useEffect(() => {\n    // Initialize speech recognition\n    const SpeechRecognitionAPI = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (SpeechRecognitionAPI) {\n      recognitionRef.current = new SpeechRecognitionAPI();\n      recognitionRef.current.continuous = false;\n      recognitionRef.current.interimResults = false;\n      recognitionRef.current.lang = 'en-US';\n\n      recognitionRef.current.onresult = (event) => {\n        const text = event.results[0][0].transcript;\n        setInputText(text);\n        sendMessage(text);\n      };\n\n      recognitionRef.current.onend = () => {\n        setIsListening(false);\n      };\n    }\n\n    // Initialize audio context\n    try {\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      userAnalyserRef.current = audioContextRef.current.createAnalyser();\n      userAnalyserRef.current.fftSize = 256;\n      userAnalyserRef.current.smoothingTimeConstant = 0.8;\n\n      aiAnalyserRef.current = audioContextRef.current.createAnalyser();\n      aiAnalyserRef.current.fftSize = 256;\n      aiAnalyserRef.current.smoothingTimeConstant = 0.8;\n    } catch (e) {\n      console.error(\"Error initializing audio context:\", e);\n    }\n\n    return () => {\n      if (recognitionRef.current) {\n        recognitionRef.current.stop();\n      }\n    };\n  }, []);\n\n  const toggleChat = () => {\n    setIsOpen(!isOpen);\n  };\n\n  const startListening = () => {\n    if (recognitionRef.current && !isListening) {\n      recognitionRef.current.start();\n      setIsListening(true);\n    }\n  };\n\n  const stopListening = () => {\n    if (recognitionRef.current && isListening) {\n      recognitionRef.current.stop();\n      setIsListening(false);\n    }\n  };\n\n  const sendMessage = async (text = null) => {\n    const messageToSend = text || inputText;\n    if (!messageToSend.trim()) return;\n\n    setIsLoading(true);\n\n    // Add user message\n    const userMessage = { type: 'user', text: messageToSend };\n    setMessages(prev => [...prev, userMessage]);\n    setInputText('');\n\n    try {\n      // Prepare conversation history\n      const history = messages.map(msg => ({\n        role: msg.type === 'user' ? 'user' : 'assistant',\n        content: msg.text\n      }));\n\n      const response = await fetch('http://localhost:5000/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ \n          message: messageToSend,\n          history\n        }),\n      });\n\n      if (!response.ok) throw new Error('Network response was not ok');\n\n      const data = await response.json();\n      \n      // Add bot message\n      const botMessage = { type: 'bot', text: data.response };\n      setMessages(prev => [...prev, botMessage]);\n\n      // Only speak the response if voiceEnabled is true\n      if (voiceEnabled) {\n        speakText(data.response);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setMessages(prev => [...prev, { type: 'error', text: 'Sorry, I encountered an error. Please try again.' }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const speakText = async (text) => {\n    try {\n      const response = await fetch('http://localhost:5000/tts', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ text }),\n      });\n\n      if (!response.ok) throw new Error('TTS request failed');\n\n      const audioBlob = await response.blob();\n      const audioUrl = URL.createObjectURL(audioBlob);\n      const audio = new Audio(audioUrl);\n\n      audio.onplay = () => {\n        if (aiAnalyserRef.current) {\n          animateBubble(chatBoxRef.current.lastChild, aiAnalyserRef.current, false);\n        }\n      };\n\n      audio.onended = () => {\n        if (aiAnalyserRef.current) {\n          stopBubbleAnimation(chatBoxRef.current.lastChild);\n        }\n        URL.revokeObjectURL(audioUrl);\n      };\n\n      audio.play();\n    } catch (error) {\n      console.error('TTS error:', error);\n    }\n  };\n\n  const animateBubble = (element, analyser, isUser) => {\n    if (!element || !analyser) return null;\n    \n    const bufferLength = analyser.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    \n    function animate() {\n      analyser.getByteFrequencyData(dataArray);\n      let sum = 0;\n      for (let i = 0; i < bufferLength; i++) {\n        sum += dataArray[i];\n      }\n      const volume = sum / bufferLength;\n      const scale = 1 + (volume / 128) * 0.5;\n      element.style.transform = `scale(${scale})`;\n      requestAnimationFrame(animate);\n    }\n    \n    return requestAnimationFrame(animate);\n  };\n\n  const stopBubbleAnimation = (element) => {\n    if (element) {\n      element.style.transform = 'scale(1)';\n    }\n  };\n\n  // Helper to split and render all LaTeX expressions in a message, and also render markdown headings\n  const renderWithLatexAndMarkdown = (text) => {\n    if (!text) return null;\n    // Split by newlines to handle markdown headings and paragraphs\n    const lines = text.split(/\\n|\\r\\n?/);\n    return lines.map((line, idx) => {\n      // Markdown headings\n      if (/^###\\s+/.test(line)) {\n        return <h3 key={idx} style={{marginTop: '1em'}}>{line.replace(/^###\\s+/, '')}</h3>;\n      } else if (/^##\\s+/.test(line)) {\n        return <h2 key={idx} style={{marginTop: '1em'}}>{line.replace(/^##\\s+/, '')}</h2>;\n      } else if (/^#\\s+/.test(line)) {\n        return <h1 key={idx} style={{marginTop: '1em'}}>{line.replace(/^#\\s+/, '')}</h1>;\n      } else if (line.trim() === '') {\n        return <br key={idx} />;\n      } else {\n        // Render LaTeX within the line\n        // Regex for $...$ (inline), \\[...\\] (block, multiline), \\(...\\) (inline), $$...$$ (block, multiline)\n        const regex = /(\\$\\$[\\s\\S]+?\\$\\$|\\$[^$]+\\$|\\\\\\[[\\s\\S]+?\\\\\\]|\\\\\\([\\s\\S]+?\\\\\\))/g;\n        const parts = line.split(regex);\n        return (\n          <span key={idx} style={{display: 'block', marginTop: '0.25em'}}>\n            {parts.map((part, i) => {\n              if (part.match(regex)) {\n                let latex = part;\n                let displayMode = true;\n                if (latex.startsWith('$$') && latex.endsWith('$$')) {\n                  latex = latex.slice(2, -2);\n                  displayMode = true;\n                } else if (latex.startsWith('$') && latex.endsWith('$')) {\n                  latex = latex.slice(1, -1);\n                  displayMode = false;\n                } else if (latex.startsWith('\\\\[') && latex.endsWith('\\\\]')) {\n                  latex = latex.slice(2, -2);\n                  displayMode = true;\n                } else if (latex.startsWith('\\\\(') && latex.endsWith('\\\\)')) {\n                  latex = latex.slice(2, -2);\n                  displayMode = false;\n                }\n                return <LatexFormatter key={i} content={latex.trim()} displayMode={displayMode} />;\n              } else {\n                return <span key={i}>{part}</span>;\n              }\n            })}\n          </span>\n        );\n      }\n    });\n  };\n\n  return (\n    <div className={`chatbot-container ${isOpen ? 'open' : ''}`}\n      style={{ position: 'fixed', bottom: 20, right: 20, zIndex: 1000 }}>\n      <button className=\"chatbot-toggle\" onClick={toggleChat}\n        style={{\n          width: 60,\n          height: 60,\n          borderRadius: '50%',\n          background: '#111',\n          border: '2px solid #fff',\n          boxShadow: '0 2px 12px rgba(0,0,0,0.15)',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n          cursor: 'pointer',\n          position: 'relative',\n          transition: 'background 0.2s, border 0.2s',\n        }}\n        title=\"Open AI Tutor\"\n      >\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <circle cx=\"16\" cy=\"16\" r=\"15\" stroke=\"#fff\" strokeWidth=\"2\" fill=\"#111\" />\n          <text x=\"16\" y=\"21\" textAnchor=\"middle\" fontSize=\"16\" fill=\"#fff\" fontWeight=\"bold\" fontFamily=\"Arial\">θ</text>\n        </svg>\n      </button>\n      <div className=\"chatbot-window\" style={{ background: '#181818', color: '#fff', borderRadius: '12px', boxShadow: '0 5px 20px rgba(0,0,0,0.15)', border: '2px solid #fff', minWidth: 350, maxWidth: 400 }}>\n        <div className=\"chatbot-header\" style={{ background: '#111', color: '#fff', borderTopLeftRadius: '12px', borderTopRightRadius: '12px', borderBottom: '1px solid #222', display: 'flex', alignItems: 'center', justifyContent: 'space-between', padding: '15px 20px' }}>\n          <h3 style={{ color: '#fff', margin: 0, fontWeight: 700, fontSize: '1.15em', letterSpacing: '0.5px' }}>AI Tutor</h3>\n          <button className=\"close-button\" onClick={toggleChat} style={{ color: '#fff', background: 'none', border: 'none', fontSize: '1.5em', cursor: 'pointer', padding: 0, margin: 0 }}>×</button>\n        </div>\n        <div className=\"chatbot-messages\" ref={chatBoxRef}>\n          {messages.map((msg, index) => (\n            <div key={index} className={`message ${msg.type}`}>\n              {renderWithLatexAndMarkdown(msg.text)}\n            </div>\n          ))}\n          {isLoading && (\n            <div className=\"message bot\">\n              <div className=\"typing-indicator\">\n                <span></span>\n                <span></span>\n                <span></span>\n              </div>\n            </div>\n          )}\n        </div>\n        \n        <div className=\"chatbot-input\">\n          <textarea\n            value={inputText}\n            onChange={(e) => setInputText(e.target.value)}\n            onKeyPress={(e) => {\n              if (e.key === 'Enter' && !e.shiftKey) {\n                e.preventDefault();\n                sendMessage();\n              }\n            }}\n            placeholder=\"Type your message...\"\n            disabled={isLoading}\n          />\n          <div className=\"chatbot-buttons\" style={{ display: 'flex', gap: '10px', alignItems: 'center' }}>\n            <button\n              className={`mic-button ${isListening ? 'listening' : ''}`}\n              onClick={isListening ? stopListening : startListening}\n              disabled={isLoading}\n              style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', padding: '8px', borderRadius: '50%', background: '#f0f0f0', border: 'none', fontSize: '1.3em', width: '42px', height: '42px' }}\n              title=\"Voice Input\"\n            >\n              {/* Centered Modern SVG Microphone Icon */}\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <ellipse cx=\"14\" cy=\"10\" rx=\"5\" ry=\"7\" fill=\"#4a90e2\" stroke=\"#357abd\" strokeWidth=\"2\"/>\n                <rect x=\"12.5\" y=\"18\" width=\"3\" height=\"6\" rx=\"1.5\" fill=\"#357abd\"/>\n                <path d=\"M7 15.5V16C7 20 13 22 21 16V15.5\" stroke=\"#357abd\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\n                <circle cx=\"14\" cy=\"25\" r=\"1.5\" fill=\"#357abd\"/>\n              </svg>\n            </button>\n            <button\n              className={`voice-toggle-btn`}\n              onClick={() => setVoiceEnabled(v => !v)}\n              style={{\n                background: voiceEnabled ? '#4a90e2' : '#f0f0f0',\n                color: voiceEnabled ? '#fff' : '#357abd',\n                border: 'none',\n                borderRadius: '50%',\n                width: '42px',\n                height: '42px',\n                display: 'flex',\n                alignItems: 'center',\n                justifyContent: 'center',\n                fontSize: '1.2em',\n                cursor: 'pointer',\n                transition: 'background 0.2s, color 0.2s',\n              }}\n              title={voiceEnabled ? 'Disable Voice Reader' : 'Enable Voice Reader'}\n            >\n              {/* Larger Speaker SVG Icon */}\n              <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <rect x=\"4\" y=\"12\" width=\"10\" height=\"8\" rx=\"3\" fill={voiceEnabled ? '#fff' : '#4a90e2'} stroke=\"#357abd\" strokeWidth=\"2\"/>\n                <ellipse cx=\"22\" cy=\"16\" rx=\"4\" ry=\"4\" fill={voiceEnabled ? '#fff' : '#4a90e2'} stroke=\"#357abd\" strokeWidth=\"2\"/>\n                <path d=\"M28 9C30 11 30 21 28 23\" stroke=\"#357abd\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\n                <path d=\"M28 27C30 25 30 19 28 17\" stroke=\"#357abd\" strokeWidth=\"2\" strokeLinecap=\"round\"/>\n              </svg>\n            </button>\n            <button onClick={() => sendMessage()} disabled={isLoading} style={{ minWidth: '90px', fontWeight: 600, fontSize: '1em', background: '#111', color: '#fff', border: '2px solid #fff', borderRadius: '8px', padding: '10px 0', cursor: 'pointer', boxShadow: 'none' }}>\n              Send\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatBot; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}