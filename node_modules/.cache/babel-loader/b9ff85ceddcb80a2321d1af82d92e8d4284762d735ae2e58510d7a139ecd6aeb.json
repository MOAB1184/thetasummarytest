{"ast":null,"code":"// This script sets up the initial admin account\nconst setupAdmin = () => {\n  const adminUser = {\n    name: 'Admin',\n    email: 'admin@example.com',\n    password: 'admin123',\n    role: 'admin',\n    approved: true,\n    created: new Date().toISOString()\n  };\n\n  // Get existing users or create new array\n  const users = JSON.parse(localStorage.getItem('users') || '[]');\n\n  // Check if admin already exists\n  const adminExists = users.some(user => user.role === 'admin');\n  if (!adminExists) {\n    users.push(adminUser);\n    localStorage.setItem('users', JSON.stringify(users));\n    console.log('Admin account created successfully');\n  } else {\n    console.log('Admin account already exists');\n  }\n};\n\n// Run setup\nsetupAdmin();","map":{"version":3,"names":["setupAdmin","adminUser","name","email","password","role","approved","created","Date","toISOString","users","JSON","parse","localStorage","getItem","adminExists","some","user","push","setItem","stringify","console","log"],"sources":["D:/dadas/he true randomizer/theta/src/setupAdmin.js"],"sourcesContent":["// This script sets up the initial admin account\r\nconst setupAdmin = () => {\r\n  const adminUser = {\r\n    name: 'Admin',\r\n    email: 'admin@example.com',\r\n    password: 'admin123',\r\n    role: 'admin',\r\n    approved: true,\r\n    created: new Date().toISOString()\r\n  };\r\n\r\n  // Get existing users or create new array\r\n  const users = JSON.parse(localStorage.getItem('users') || '[]');\r\n  \r\n  // Check if admin already exists\r\n  const adminExists = users.some(user => user.role === 'admin');\r\n  \r\n  if (!adminExists) {\r\n    users.push(adminUser);\r\n    localStorage.setItem('users', JSON.stringify(users));\r\n    console.log('Admin account created successfully');\r\n  } else {\r\n    console.log('Admin account already exists');\r\n  }\r\n};\r\n\r\n// Run setup\r\nsetupAdmin(); "],"mappings":"AAAA;AACA,MAAMA,UAAU,GAAGA,CAAA,KAAM;EACvB,MAAMC,SAAS,GAAG;IAChBC,IAAI,EAAE,OAAO;IACbC,KAAK,EAAE,mBAAmB;IAC1BC,QAAQ,EAAE,UAAU;IACpBC,IAAI,EAAE,OAAO;IACbC,QAAQ,EAAE,IAAI;IACdC,OAAO,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;EAClC,CAAC;;EAED;EACA,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;;EAE/D;EACA,MAAMC,WAAW,GAAGL,KAAK,CAACM,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACZ,IAAI,KAAK,OAAO,CAAC;EAE7D,IAAI,CAACU,WAAW,EAAE;IAChBL,KAAK,CAACQ,IAAI,CAACjB,SAAS,CAAC;IACrBY,YAAY,CAACM,OAAO,CAAC,OAAO,EAAER,IAAI,CAACS,SAAS,CAACV,KAAK,CAAC,CAAC;IACpDW,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;EACnD,CAAC,MAAM;IACLD,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;EAC7C;AACF,CAAC;;AAED;AACAtB,UAAU,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}