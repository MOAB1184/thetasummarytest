{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nclass Database {\n  async login(email, password) {\n    try {\n      const response = await axios.post(`${API_URL}/login`, {\n        email,\n        password\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Login error:', error);\n      throw new Error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Login failed');\n    }\n  }\n  async createUser(userData) {\n    try {\n      const response = await axios.post(`${API_URL}/register`, userData);\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Registration error:', error);\n      throw new Error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Registration failed');\n    }\n  }\n  async getTeachers(school) {\n    try {\n      const response = await axios.get(`${API_URL}/teachers`, {\n        params: {\n          school\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching teachers:', error);\n      throw new Error('Failed to fetch teachers');\n    }\n  }\n  async getStudents(school) {\n    try {\n      const response = await axios.get(`${API_URL}/students`, {\n        params: {\n          school\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching students:', error);\n      throw new Error('Failed to fetch students');\n    }\n  }\n  async getSchools() {\n    try {\n      const response = await axios.get(`${API_URL}/schools`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching schools:', error);\n      throw new Error('Failed to fetch schools');\n    }\n  }\n  async approveTeacher(email) {\n    try {\n      const response = await axios.post(`${API_URL}/approve-teacher`, {\n        email\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error approving teacher:', error);\n      throw new Error('Failed to approve teacher');\n    }\n  }\n  async removeTeacher(email) {\n    try {\n      const response = await axios.delete(`${API_URL}/teachers/${email}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error removing teacher:', error);\n      throw new Error('Failed to remove teacher');\n    }\n  }\n  async createSchool(name) {\n    try {\n      const response = await axios.post(`${API_URL}/schools`, {\n        name\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error creating school:', error);\n      throw new Error('Failed to create school');\n    }\n  }\n  async removeSchool(schoolId) {\n    try {\n      const response = await axios.delete(`${API_URL}/schools/${schoolId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error removing school:', error);\n      throw new Error('Failed to remove school');\n    }\n  }\n}\nexport default new Database();","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","Database","login","email","password","response","post","data","error","_error$response","_error$response$data","console","Error","createUser","userData","_error$response2","_error$response2$data","getTeachers","school","get","params","getStudents","getSchools","approveTeacher","removeTeacher","delete","createSchool","name","removeSchool","schoolId"],"sources":["D:/dadas/he true randomizer/theta/src/services/Database.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\n\nclass Database {\n    async login(email, password) {\n        try {\n            const response = await axios.post(`${API_URL}/login`, { email, password });\n            return response.data;\n        } catch (error) {\n            console.error('Login error:', error);\n            throw new Error(error.response?.data?.error || 'Login failed');\n        }\n    }\n\n    async createUser(userData) {\n        try {\n            const response = await axios.post(`${API_URL}/register`, userData);\n            return response.data;\n        } catch (error) {\n            console.error('Registration error:', error);\n            throw new Error(error.response?.data?.error || 'Registration failed');\n        }\n    }\n\n    async getTeachers(school) {\n        try {\n            const response = await axios.get(`${API_URL}/teachers`, { params: { school } });\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching teachers:', error);\n            throw new Error('Failed to fetch teachers');\n        }\n    }\n\n    async getStudents(school) {\n        try {\n            const response = await axios.get(`${API_URL}/students`, { params: { school } });\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching students:', error);\n            throw new Error('Failed to fetch students');\n        }\n    }\n\n    async getSchools() {\n        try {\n            const response = await axios.get(`${API_URL}/schools`);\n            return response.data;\n        } catch (error) {\n            console.error('Error fetching schools:', error);\n            throw new Error('Failed to fetch schools');\n        }\n    }\n\n    async approveTeacher(email) {\n        try {\n            const response = await axios.post(`${API_URL}/approve-teacher`, { email });\n            return response.data;\n        } catch (error) {\n            console.error('Error approving teacher:', error);\n            throw new Error('Failed to approve teacher');\n        }\n    }\n\n    async removeTeacher(email) {\n        try {\n            const response = await axios.delete(`${API_URL}/teachers/${email}`);\n            return response.data;\n        } catch (error) {\n            console.error('Error removing teacher:', error);\n            throw new Error('Failed to remove teacher');\n        }\n    }\n\n    async createSchool(name) {\n        try {\n            const response = await axios.post(`${API_URL}/schools`, { name });\n            return response.data;\n        } catch (error) {\n            console.error('Error creating school:', error);\n            throw new Error('Failed to create school');\n        }\n    }\n\n    async removeSchool(schoolId) {\n        try {\n            const response = await axios.delete(`${API_URL}/schools/${schoolId}`);\n            return response.data;\n        } catch (error) {\n            console.error('Error removing school:', error);\n            throw new Error('Failed to remove school');\n        }\n    }\n}\n\nexport default new Database(); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}